@charset "UTF-8";
.ql-container {
  display: block;
  margin: 0;
  position: relative;
}
.ql-container.ql-disabled .ql-editor ul[data-checked] > li::before {
  pointer-events: none;
}
.ql-container.ql-disabled .ql-tooltip {
  visibility: hidden;
}

.ql-clipboard {
  position: absolute;
  overflow-y: hidden;
  left: -6250rem;
  height: 0.0625rem;
  top: 50%;
}
[dir=rtl] .ql-clipboard {
  left: auto;
  right: -6250rem;
}

.ql-editor {
  overflow-y: auto;
  height: 100%;
  -o-tab-size: 4;
     tab-size: 4;
  -moz-tab-size: 4;
  box-sizing: border-box;
  display: block;
  outline: none;
  word-wrap: break-word;
  white-space: pre-wrap;
}
.ql-editor > * {
  cursor: text;
}
.ql-editor.ql-blank::before {
  position: absolute;
  content: attr(data-placeholder);
  font-style: italic;
  left: 0;
  right: 0;
  pointer-events: none;
}

.ql-snow,
.ql-bubble {
  box-sizing: border-box;
}
.ql-snow *,
.ql-bubble * {
  box-sizing: border-box;
}
.ql-snow .ql-out-bottom,
.ql-snow .ql-out-top,
.ql-bubble .ql-out-bottom,
.ql-bubble .ql-out-top {
  visibility: hidden;
}
.ql-snow .ql-hidden,
.ql-bubble .ql-hidden {
  display: none !important;
}
.ql-snow .ql-even,
.ql-bubble .ql-even {
  fill-rule: evenodd;
}
.ql-snow .ql-empty,
.ql-bubble .ql-empty {
  fill: none;
}
.ql-snow .ql-transparent,
.ql-bubble .ql-transparent {
  opacity: 0.4;
}
.ql-snow .ql-thin,
.ql-snow .ql-stroke.ql-thin,
.ql-bubble .ql-thin,
.ql-bubble .ql-stroke.ql-thin {
  stroke-width: 1;
}
.ql-snow .ql-editor a,
.ql-bubble .ql-editor a {
  text-decoration: underline;
}
.ql-snow .ql-direction.ql-active svg:last-child,
.ql-bubble .ql-direction.ql-active svg:last-child {
  display: inline;
}
.ql-snow .ql-direction.ql-active svg:first-child,
.ql-bubble .ql-direction.ql-active svg:first-child {
  display: none;
}
.ql-snow .ql-direction svg:last-child,
.ql-bubble .ql-direction svg:last-child {
  display: none;
}
.ql-snow.ql-toolbar, .ql-snow .ql-toolbar,
.ql-bubble.ql-toolbar,
.ql-bubble .ql-toolbar {
  box-sizing: border-box;
  padding: 0.5rem;
}
.ql-snow.ql-toolbar::after, .ql-snow .ql-toolbar::after,
.ql-bubble.ql-toolbar::after,
.ql-bubble .ql-toolbar::after {
  clear: both;
  content: "";
  display: table;
}
.ql-snow.ql-toolbar button, .ql-snow .ql-toolbar button,
.ql-bubble.ql-toolbar button,
.ql-bubble .ql-toolbar button {
  float: left;
  display: inline-block;
  padding: 0.1875rem 0.3125rem;
  height: 1.5rem;
  width: 1.75rem;
  background: none;
  border: none;
  cursor: pointer;
}
.ql-snow.ql-toolbar button:active:hover, .ql-snow .ql-toolbar button:active:hover,
.ql-bubble.ql-toolbar button:active:hover,
.ql-bubble .ql-toolbar button:active:hover {
  outline: none;
}
[dir=rtl] .ql-snow.ql-toolbar button, [dir=rtl] .ql-snow .ql-toolbar button,
[dir=rtl] .ql-bubble.ql-toolbar button,
[dir=rtl] .ql-bubble .ql-toolbar button {
  float: right;
}
.ql-snow.ql-toolbar button svg, .ql-snow .ql-toolbar button svg,
.ql-bubble.ql-toolbar button svg,
.ql-bubble .ql-toolbar button svg {
  height: 100%;
  float: left;
}
[dir=rtl] .ql-snow.ql-toolbar button svg, [dir=rtl] .ql-snow .ql-toolbar button svg,
[dir=rtl] .ql-bubble.ql-toolbar button svg,
[dir=rtl] .ql-bubble .ql-toolbar button svg {
  float: right;
}
.ql-snow.ql-toolbar input.ql-image[type=file], .ql-snow .ql-toolbar input.ql-image[type=file],
.ql-bubble.ql-toolbar input.ql-image[type=file],
.ql-bubble .ql-toolbar input.ql-image[type=file] {
  display: none;
}
.ql-snow .ql-tooltip,
.ql-bubble .ql-tooltip {
  transform: translateY(0.625rem);
  position: absolute;
}
.ql-snow .ql-tooltip.ql-flip,
.ql-bubble .ql-tooltip.ql-flip {
  transform: translateY(-0.625rem);
}
.ql-snow .ql-tooltip a,
.ql-bubble .ql-tooltip a {
  cursor: pointer;
  text-decoration: none;
}
.ql-snow .ql-formats,
.ql-bubble .ql-formats {
  display: inline-block;
  margin-right: 0.9375rem;
  vertical-align: middle;
}
[dir=rtl] .ql-snow .ql-formats,
[dir=rtl] .ql-bubble .ql-formats {
  margin-right: 0;
  margin-left: 0.9375rem;
}
.ql-snow .ql-formats::after,
.ql-bubble .ql-formats::after {
  content: "";
  display: table;
  clear: both;
}
.ql-snow .ql-picker,
.ql-bubble .ql-picker {
  vertical-align: middle;
  position: relative;
  height: 1.5rem;
  display: inline-block;
  float: left;
}
[dir=rtl] .ql-snow .ql-picker,
[dir=rtl] .ql-bubble .ql-picker {
  float: right;
}
.ql-snow .ql-picker.ql-expanded .ql-picker-options,
.ql-bubble .ql-picker.ql-expanded .ql-picker-options {
  top: 100%;
  display: block;
  z-index: 1;
  margin-top: -0.0625rem;
}
.ql-snow .ql-picker.ql-header .ql-picker-label[data-label]:not([data-label=""])::before,
.ql-snow .ql-picker.ql-header .ql-picker-item[data-label]:not([data-label=""])::before, .ql-snow .ql-picker.ql-font .ql-picker-label[data-label]:not([data-label=""])::before,
.ql-snow .ql-picker.ql-font .ql-picker-item[data-label]:not([data-label=""])::before, .ql-snow .ql-picker.ql-size .ql-picker-label[data-label]:not([data-label=""])::before,
.ql-snow .ql-picker.ql-size .ql-picker-item[data-label]:not([data-label=""])::before,
.ql-bubble .ql-picker.ql-header .ql-picker-label[data-label]:not([data-label=""])::before,
.ql-bubble .ql-picker.ql-header .ql-picker-item[data-label]:not([data-label=""])::before,
.ql-bubble .ql-picker.ql-font .ql-picker-label[data-label]:not([data-label=""])::before,
.ql-bubble .ql-picker.ql-font .ql-picker-item[data-label]:not([data-label=""])::before,
.ql-bubble .ql-picker.ql-size .ql-picker-label[data-label]:not([data-label=""])::before,
.ql-bubble .ql-picker.ql-size .ql-picker-item[data-label]:not([data-label=""])::before {
  content: attr(data-label);
}
.ql-snow .ql-picker.ql-header,
.ql-bubble .ql-picker.ql-header {
  width: 6.125rem;
}
.ql-snow .ql-picker.ql-header .ql-picker-label::before,
.ql-snow .ql-picker.ql-header .ql-picker-item::before,
.ql-bubble .ql-picker.ql-header .ql-picker-label::before,
.ql-bubble .ql-picker.ql-header .ql-picker-item::before {
  content: "Normal";
}
.ql-snow .ql-picker.ql-header .ql-picker-label[data-value="1"]::before,
.ql-snow .ql-picker.ql-header .ql-picker-item[data-value="1"]::before,
.ql-bubble .ql-picker.ql-header .ql-picker-label[data-value="1"]::before,
.ql-bubble .ql-picker.ql-header .ql-picker-item[data-value="1"]::before {
  content: "Heading 1";
}
.ql-snow .ql-picker.ql-header .ql-picker-label[data-value="2"]::before,
.ql-snow .ql-picker.ql-header .ql-picker-item[data-value="2"]::before,
.ql-bubble .ql-picker.ql-header .ql-picker-label[data-value="2"]::before,
.ql-bubble .ql-picker.ql-header .ql-picker-item[data-value="2"]::before {
  content: "Heading 2";
}
.ql-snow .ql-picker.ql-header .ql-picker-label[data-value="3"]::before,
.ql-snow .ql-picker.ql-header .ql-picker-item[data-value="3"]::before,
.ql-bubble .ql-picker.ql-header .ql-picker-label[data-value="3"]::before,
.ql-bubble .ql-picker.ql-header .ql-picker-item[data-value="3"]::before {
  content: "Heading 3";
}
.ql-snow .ql-picker.ql-header .ql-picker-label[data-value="4"]::before,
.ql-snow .ql-picker.ql-header .ql-picker-item[data-value="4"]::before,
.ql-bubble .ql-picker.ql-header .ql-picker-label[data-value="4"]::before,
.ql-bubble .ql-picker.ql-header .ql-picker-item[data-value="4"]::before {
  content: "Heading 4";
}
.ql-snow .ql-picker.ql-header .ql-picker-label[data-value="5"]::before,
.ql-snow .ql-picker.ql-header .ql-picker-item[data-value="5"]::before,
.ql-bubble .ql-picker.ql-header .ql-picker-label[data-value="5"]::before,
.ql-bubble .ql-picker.ql-header .ql-picker-item[data-value="5"]::before {
  content: "Heading 5";
}
.ql-snow .ql-picker.ql-header .ql-picker-label[data-value="6"]::before,
.ql-snow .ql-picker.ql-header .ql-picker-item[data-value="6"]::before,
.ql-bubble .ql-picker.ql-header .ql-picker-label[data-value="6"]::before,
.ql-bubble .ql-picker.ql-header .ql-picker-item[data-value="6"]::before {
  content: "Heading 6";
}
.ql-snow .ql-picker.ql-font,
.ql-bubble .ql-picker.ql-font {
  width: 6.75rem;
}
.ql-snow .ql-picker.ql-font .ql-picker-label::before,
.ql-snow .ql-picker.ql-font .ql-picker-item::before,
.ql-bubble .ql-picker.ql-font .ql-picker-label::before,
.ql-bubble .ql-picker.ql-font .ql-picker-item::before {
  content: "Sans Serif";
}
.ql-snow .ql-picker.ql-font .ql-picker-label[data-value=serif]::before,
.ql-snow .ql-picker.ql-font .ql-picker-item[data-value=serif]::before,
.ql-bubble .ql-picker.ql-font .ql-picker-label[data-value=serif]::before,
.ql-bubble .ql-picker.ql-font .ql-picker-item[data-value=serif]::before {
  content: "Serif";
}
.ql-snow .ql-picker.ql-font .ql-picker-label[data-value=monospace]::before,
.ql-snow .ql-picker.ql-font .ql-picker-item[data-value=monospace]::before,
.ql-bubble .ql-picker.ql-font .ql-picker-label[data-value=monospace]::before,
.ql-bubble .ql-picker.ql-font .ql-picker-item[data-value=monospace]::before {
  content: "Monospace";
}
.ql-snow .ql-picker.ql-size,
.ql-bubble .ql-picker.ql-size {
  width: 6.125rem;
}
.ql-snow .ql-picker.ql-size .ql-picker-label::before,
.ql-snow .ql-picker.ql-size .ql-picker-item::before,
.ql-bubble .ql-picker.ql-size .ql-picker-label::before,
.ql-bubble .ql-picker.ql-size .ql-picker-item::before {
  content: "Normal";
}
.ql-snow .ql-picker.ql-size .ql-picker-label[data-value=small]::before,
.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=small]::before,
.ql-bubble .ql-picker.ql-size .ql-picker-label[data-value=small]::before,
.ql-bubble .ql-picker.ql-size .ql-picker-item[data-value=small]::before {
  content: "Small";
}
.ql-snow .ql-picker.ql-size .ql-picker-label[data-value=large]::before,
.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=large]::before,
.ql-bubble .ql-picker.ql-size .ql-picker-label[data-value=large]::before,
.ql-bubble .ql-picker.ql-size .ql-picker-item[data-value=large]::before {
  content: "Large";
}
.ql-snow .ql-picker.ql-size .ql-picker-label[data-value=huge]::before,
.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=huge]::before,
.ql-bubble .ql-picker.ql-size .ql-picker-label[data-value=huge]::before,
.ql-bubble .ql-picker.ql-size .ql-picker-item[data-value=huge]::before {
  content: "Huge";
}
.ql-snow .ql-picker:not(.ql-color-picker):not(.ql-icon-picker) svg,
.ql-bubble .ql-picker:not(.ql-color-picker):not(.ql-icon-picker) svg {
  position: absolute;
  top: 50%;
  right: 0;
  margin-top: -0.5625rem;
  width: 1.125rem;
}
[dir=rtl] .ql-snow .ql-picker:not(.ql-color-picker):not(.ql-icon-picker) svg,
[dir=rtl] .ql-bubble .ql-picker:not(.ql-color-picker):not(.ql-icon-picker) svg {
  right: auto;
  left: 0;
}
.ql-snow .ql-picker-label,
.ql-bubble .ql-picker-label {
  position: relative;
  display: inline-block;
  padding-right: 0.125rem;
  padding-left: 0.5rem;
  height: 100%;
  width: 100%;
  border: 0.0625rem solid transparent;
  cursor: pointer;
}
.ql-snow .ql-picker-label::before,
.ql-bubble .ql-picker-label::before {
  line-height: 1.375rem;
  display: inline-block;
}
.ql-snow .ql-picker-options,
.ql-bubble .ql-picker-options {
  padding: 0.25rem 0.5rem;
  min-width: 100%;
  position: absolute;
  display: none;
  white-space: nowrap;
}
.ql-snow .ql-picker-options .ql-picker-item,
.ql-bubble .ql-picker-options .ql-picker-item {
  padding-bottom: 0.3125rem;
  padding-top: 0.3125rem;
  display: block;
  cursor: pointer;
}
.ql-snow .ql-color-picker,
.ql-snow .ql-icon-picker,
.ql-bubble .ql-color-picker,
.ql-bubble .ql-icon-picker {
  width: 1.75rem;
}
.ql-snow .ql-color-picker .ql-picker-label,
.ql-snow .ql-icon-picker .ql-picker-label,
.ql-bubble .ql-color-picker .ql-picker-label,
.ql-bubble .ql-icon-picker .ql-picker-label {
  padding: 0.125rem 0.25rem;
}
.ql-snow .ql-icon-picker .ql-picker-options,
.ql-bubble .ql-icon-picker .ql-picker-options {
  padding: 0.25rem 0;
}
.ql-snow .ql-icon-picker .ql-picker-item,
.ql-bubble .ql-icon-picker .ql-picker-item {
  padding: 0.125rem 0.25rem;
  width: 1.5rem;
  height: 1.5rem;
}
.ql-snow .ql-color-picker .ql-picker-options,
.ql-bubble .ql-color-picker .ql-picker-options {
  padding: 0.1875rem 0.3125rem;
  width: 9.5rem;
}
.ql-snow .ql-color-picker .ql-picker-item,
.ql-bubble .ql-color-picker .ql-picker-item {
  float: left;
  margin: 0.125rem;
  padding: 0;
  width: 1rem;
  height: 1rem;
  border: 0.0625rem solid transparent;
}
[dir=rtl] .ql-snow .ql-color-picker .ql-picker-item,
[dir=rtl] .ql-bubble .ql-color-picker .ql-picker-item {
  float: right;
}
.ql-snow .ql-color-picker.ql-background .ql-picker-item,
.ql-bubble .ql-color-picker.ql-background .ql-picker-item {
  background-color: #fff;
}
.ql-snow .ql-color-picker.ql-color .ql-picker-item,
.ql-bubble .ql-color-picker.ql-color .ql-picker-item {
  background-color: #000;
}
[dir=rtl] .ql-snow .ql-italic svg,
[dir=rtl] .ql-snow .ql-list svg,
[dir=rtl] .ql-snow .ql-indent svg,
[dir=rtl] .ql-snow .ql-direction svg,
[dir=rtl] .ql-snow .ql-align svg,
[dir=rtl] .ql-snow .ql-link svg,
[dir=rtl] .ql-snow .ql-image svg,
[dir=rtl] .ql-snow .ql-clean svg,
[dir=rtl] .ql-bubble .ql-italic svg,
[dir=rtl] .ql-bubble .ql-list svg,
[dir=rtl] .ql-bubble .ql-indent svg,
[dir=rtl] .ql-bubble .ql-direction svg,
[dir=rtl] .ql-bubble .ql-align svg,
[dir=rtl] .ql-bubble .ql-link svg,
[dir=rtl] .ql-bubble .ql-image svg,
[dir=rtl] .ql-bubble .ql-clean svg {
  transform: scaleX(-1);
}

.ql-snow.ql-toolbar,
.ql-snow .ql-toolbar {
  background: #fff;
  background-clip: padding-box;
}
.ql-snow .ql-editor {
  min-height: 15rem;
  background: #fff;
}
.ql-snow .ql-picker.ql-expanded .ql-picker-label {
  z-index: 2;
  color: #ccc !important;
}
.ql-snow .ql-picker.ql-expanded .ql-picker-label .ql-fill {
  fill: #ccc !important;
}
.ql-snow .ql-picker.ql-expanded .ql-picker-label .ql-stroke {
  stroke: #ccc !important;
}
.ql-snow .ql-stroke {
  fill: none;
  stroke-width: 2;
  stroke-linejoin: round;
  stroke-linecap: round;
}
.ql-snow .ql-stroke-miter {
  fill: none;
  stroke-width: 2;
  stroke-miterlimit: 10;
}
.ql-snow .ql-picker-label {
  border: 0.0625rem solid transparent;
}
.ql-snow .ql-picker-options {
  border: 0.0625rem solid transparent;
  background-color: #fff;
  background-clip: padding-box;
}
.ql-snow .ql-color-picker .ql-picker-item.ql-selected,
.ql-snow .ql-color-picker .ql-picker-item:hover {
  border-color: #000;
}
.ql-snow .ql-tooltip {
  display: flex;
  padding: 0.3125rem 0.75rem;
  background-color: #fff;
  background-clip: padding-box;
  white-space: nowrap;
}
.ql-snow .ql-tooltip::before {
  content: "Visit URL:";
  margin-right: 0.5rem;
  line-height: 1.625rem;
}
[dir=rtl] .ql-snow .ql-tooltip::before {
  margin-right: 0;
  margin-left: 0.5rem;
}
.ql-snow .ql-tooltip input[type=text] {
  display: none;
  margin: 0;
  padding: 0.1875rem 0.3125rem;
  width: 10.625rem;
  height: 1.625rem;
  font-size: 0.8125rem;
}
.ql-snow .ql-tooltip a.ql-preview {
  display: inline-block;
  vertical-align: top;
  max-width: 12.5rem;
  overflow-x: hidden;
  text-overflow: ellipsis;
}
.ql-snow .ql-tooltip a.ql-action::after {
  content: "Edit";
  margin-left: 1rem;
  padding-right: 0.5rem;
  border-right: 0.0625rem solid #ccc;
}
[dir=rtl] .ql-snow .ql-tooltip a.ql-action::after {
  margin-left: 0;
  margin-right: 1rem;
  padding-left: 0.5rem;
  padding-right: 0;
  border-right: 0;
  border-left: 0.0625rem solid #ccc;
}
.ql-snow .ql-tooltip a.ql-remove::before {
  content: "Remove";
  margin-left: 0.5rem;
}
[dir=rtl] .ql-snow .ql-tooltip a.ql-remove::before {
  margin-right: 0.5rem;
  margin-left: 0;
}
.ql-snow .ql-tooltip a {
  line-height: 1.625rem;
}
.ql-snow .ql-tooltip.ql-editing a.ql-preview, .ql-snow .ql-tooltip.ql-editing a.ql-remove {
  display: none;
}
.ql-snow .ql-tooltip.ql-editing input[type=text] {
  display: inline-block;
}
.ql-snow .ql-tooltip.ql-editing a.ql-action::after {
  content: "Save";
  border-right: 0;
  padding-right: 0;
}
[dir=rtl] .ql-snow .ql-tooltip.ql-editing a.ql-action::after {
  border-left: 0;
  padding-left: 0;
}
.ql-snow .ql-tooltip[data-mode=link]::before {
  content: "Enter link:";
}
.ql-snow .ql-tooltip[data-mode=formula]::before {
  content: "Enter formula:";
}
.ql-snow .ql-tooltip[data-mode=video]::before {
  content: "Enter video:";
}

.ql-bubble.ql-toolbar button:hover,
.ql-bubble.ql-toolbar button:focus,
.ql-bubble.ql-toolbar button.ql-active,
.ql-bubble.ql-toolbar .ql-picker-label:hover,
.ql-bubble.ql-toolbar .ql-picker-label.ql-active,
.ql-bubble.ql-toolbar .ql-picker-item:hover,
.ql-bubble.ql-toolbar .ql-picker-item.ql-selected,
.ql-bubble .ql-toolbar button:hover,
.ql-bubble .ql-toolbar button:focus,
.ql-bubble .ql-toolbar button.ql-active,
.ql-bubble .ql-toolbar .ql-picker-label:hover,
.ql-bubble .ql-toolbar .ql-picker-label.ql-active,
.ql-bubble .ql-toolbar .ql-picker-item:hover,
.ql-bubble .ql-toolbar .ql-picker-item.ql-selected {
  color: #fff;
}
.ql-bubble.ql-toolbar button:hover .ql-stroke,
.ql-bubble.ql-toolbar button:focus .ql-stroke,
.ql-bubble.ql-toolbar button.ql-active .ql-stroke,
.ql-bubble.ql-toolbar .ql-picker-label:hover .ql-stroke,
.ql-bubble.ql-toolbar .ql-picker-label.ql-active .ql-stroke,
.ql-bubble.ql-toolbar .ql-picker-item:hover .ql-stroke,
.ql-bubble.ql-toolbar .ql-picker-item.ql-selected .ql-stroke,
.ql-bubble.ql-toolbar button:hover .ql-stroke-miter,
.ql-bubble.ql-toolbar button:focus .ql-stroke-miter,
.ql-bubble.ql-toolbar button.ql-active .ql-stroke-miter,
.ql-bubble.ql-toolbar .ql-picker-label:hover .ql-stroke-miter,
.ql-bubble.ql-toolbar .ql-picker-label.ql-active .ql-stroke-miter,
.ql-bubble.ql-toolbar .ql-picker-item:hover .ql-stroke-miter,
.ql-bubble.ql-toolbar .ql-picker-item.ql-selected .ql-stroke-miter,
.ql-bubble .ql-toolbar button:hover .ql-stroke,
.ql-bubble .ql-toolbar button:focus .ql-stroke,
.ql-bubble .ql-toolbar button.ql-active .ql-stroke,
.ql-bubble .ql-toolbar .ql-picker-label:hover .ql-stroke,
.ql-bubble .ql-toolbar .ql-picker-label.ql-active .ql-stroke,
.ql-bubble .ql-toolbar .ql-picker-item:hover .ql-stroke,
.ql-bubble .ql-toolbar .ql-picker-item.ql-selected .ql-stroke,
.ql-bubble .ql-toolbar button:hover .ql-stroke-miter,
.ql-bubble .ql-toolbar button:focus .ql-stroke-miter,
.ql-bubble .ql-toolbar button.ql-active .ql-stroke-miter,
.ql-bubble .ql-toolbar .ql-picker-label:hover .ql-stroke-miter,
.ql-bubble .ql-toolbar .ql-picker-label.ql-active .ql-stroke-miter,
.ql-bubble .ql-toolbar .ql-picker-item:hover .ql-stroke-miter,
.ql-bubble .ql-toolbar .ql-picker-item.ql-selected .ql-stroke-miter {
  stroke: #fff;
}
.ql-bubble.ql-toolbar button:hover .ql-fill,
.ql-bubble.ql-toolbar button:focus .ql-fill,
.ql-bubble.ql-toolbar button.ql-active .ql-fill,
.ql-bubble.ql-toolbar .ql-picker-label:hover .ql-fill,
.ql-bubble.ql-toolbar .ql-picker-label.ql-active .ql-fill,
.ql-bubble.ql-toolbar .ql-picker-item:hover .ql-fill,
.ql-bubble.ql-toolbar .ql-picker-item.ql-selected .ql-fill,
.ql-bubble.ql-toolbar button:hover .ql-stroke.ql-fill,
.ql-bubble.ql-toolbar button:focus .ql-stroke.ql-fill,
.ql-bubble.ql-toolbar button.ql-active .ql-stroke.ql-fill,
.ql-bubble.ql-toolbar .ql-picker-label:hover .ql-stroke.ql-fill,
.ql-bubble.ql-toolbar .ql-picker-label.ql-active .ql-stroke.ql-fill,
.ql-bubble.ql-toolbar .ql-picker-item:hover .ql-stroke.ql-fill,
.ql-bubble.ql-toolbar .ql-picker-item.ql-selected .ql-stroke.ql-fill,
.ql-bubble .ql-toolbar button:hover .ql-fill,
.ql-bubble .ql-toolbar button:focus .ql-fill,
.ql-bubble .ql-toolbar button.ql-active .ql-fill,
.ql-bubble .ql-toolbar .ql-picker-label:hover .ql-fill,
.ql-bubble .ql-toolbar .ql-picker-label.ql-active .ql-fill,
.ql-bubble .ql-toolbar .ql-picker-item:hover .ql-fill,
.ql-bubble .ql-toolbar .ql-picker-item.ql-selected .ql-fill,
.ql-bubble .ql-toolbar button:hover .ql-stroke.ql-fill,
.ql-bubble .ql-toolbar button:focus .ql-stroke.ql-fill,
.ql-bubble .ql-toolbar button.ql-active .ql-stroke.ql-fill,
.ql-bubble .ql-toolbar .ql-picker-label:hover .ql-stroke.ql-fill,
.ql-bubble .ql-toolbar .ql-picker-label.ql-active .ql-stroke.ql-fill,
.ql-bubble .ql-toolbar .ql-picker-item:hover .ql-stroke.ql-fill,
.ql-bubble .ql-toolbar .ql-picker-item.ql-selected .ql-stroke.ql-fill {
  fill: #fff;
}
@media (pointer: coarse) {
  .ql-bubble.ql-toolbar button:hover:not(.ql-active),
  .ql-bubble .ql-toolbar button:hover:not(.ql-active) {
    color: #ccc;
  }
  .ql-bubble.ql-toolbar button:hover:not(.ql-active) .ql-fill,
  .ql-bubble.ql-toolbar button:hover:not(.ql-active) .ql-stroke.ql-fill,
  .ql-bubble .ql-toolbar button:hover:not(.ql-active) .ql-fill,
  .ql-bubble .ql-toolbar button:hover:not(.ql-active) .ql-stroke.ql-fill {
    fill: #ccc;
  }
  .ql-bubble.ql-toolbar button:hover:not(.ql-active) .ql-stroke,
  .ql-bubble.ql-toolbar button:hover:not(.ql-active) .ql-stroke-miter,
  .ql-bubble .ql-toolbar button:hover:not(.ql-active) .ql-stroke,
  .ql-bubble .ql-toolbar button:hover:not(.ql-active) .ql-stroke-miter {
    stroke: #ccc;
  }
}
.ql-bubble .ql-stroke {
  fill: none;
  stroke: #ccc;
  stroke-linejoin: round;
  stroke-linecap: round;
  stroke-width: 2;
}
.ql-bubble .ql-stroke-miter {
  fill: none;
  stroke: #ccc;
  stroke-miterlimit: 10;
  stroke-width: 2;
}
.ql-bubble .ql-fill,
.ql-bubble .ql-stroke.ql-fill {
  fill: #ccc;
}
.ql-bubble .ql-picker {
  color: #ccc;
}
.ql-bubble .ql-picker.ql-expanded .ql-picker-label {
  z-index: 2;
  color: #777;
}
.ql-bubble .ql-picker.ql-expanded .ql-picker-label .ql-fill {
  fill: #777;
}
.ql-bubble .ql-picker.ql-expanded .ql-picker-label .ql-stroke {
  stroke: #777;
}
.ql-bubble .ql-picker-options {
  background-color: #444;
}
.ql-bubble .ql-color-picker .ql-picker-label svg,
.ql-bubble .ql-icon-picker .ql-picker-label svg {
  right: 0.25rem;
}
[dir=rtl] .ql-bubble .ql-color-picker .ql-picker-label svg,
[dir=rtl] .ql-bubble .ql-icon-picker .ql-picker-label svg {
  right: auto;
  left: 0.25rem;
}
.ql-bubble .ql-color-picker .ql-color-picker svg {
  margin: 0.0625rem;
}
.ql-bubble .ql-color-picker .ql-picker-item.ql-selected,
.ql-bubble .ql-color-picker .ql-picker-item:hover {
  border-color: #fff;
}
.ql-bubble .ql-toolbar .ql-formats {
  margin: 0.5rem 0.75rem 0.5rem 0;
}
[dir=rtl] .ql-bubble .ql-toolbar .ql-formats {
  margin: 0.5rem 0 0.5rem 0.75rem;
}
.ql-bubble .ql-toolbar .ql-formats:first-child {
  margin-left: 0.75rem;
}
[dir=rtl] .ql-bubble .ql-toolbar .ql-formats:first-child {
  margin-right: 0.75rem;
}
.ql-bubble .ql-tooltip-arrow {
  content: " ";
  position: absolute;
  display: block;
  left: 50%;
  margin-left: -0.375rem;
  border-right: 0.375rem solid transparent;
  border-left: 0.375rem solid transparent;
}
.ql-bubble .ql-tooltip {
  background-color: #444;
  color: #fff;
}
.ql-bubble .ql-tooltip:not(.ql-flip) .ql-tooltip-arrow {
  top: -0.375rem;
  border-bottom: 0.375rem solid #444;
}
.ql-bubble .ql-tooltip.ql-flip .ql-tooltip-arrow {
  bottom: -0.375rem;
  border-top: 0.375rem solid #444;
}
.ql-bubble .ql-tooltip.ql-editing .ql-tooltip-editor {
  display: block;
}
.ql-bubble .ql-tooltip.ql-editing .ql-formats {
  visibility: hidden;
}
.ql-bubble .ql-tooltip-editor {
  display: none;
}
.ql-bubble .ql-tooltip-editor input[type=text] {
  position: absolute;
  padding: 0.625rem 1.25rem;
  height: 100%;
  width: 100%;
  outline: none;
  background: transparent;
  border: none;
  color: #fff;
  font-size: 0.8125rem;
}
.ql-bubble .ql-tooltip-editor a {
  position: absolute;
  right: 1.25rem;
  top: 0.625rem;
}
[dir=rtl] .ql-bubble .ql-tooltip-editor a {
  right: auto;
  left: 1.25rem;
}
.ql-bubble .ql-tooltip-editor a::before {
  content: "×";
  color: #ccc;
  font-size: 1rem;
  font-weight: bold;
}
.ql-bubble.ql-container:not(.ql-disabled) a {
  white-space: nowrap;
  position: relative;
}
.ql-bubble.ql-container:not(.ql-disabled) a::before, .ql-bubble.ql-container:not(.ql-disabled) a::after {
  margin-left: 50%;
  position: absolute;
  visibility: hidden;
  left: 0;
  transition: visibility 0s ease 200ms;
  transform: translate(-50%, -100%);
}
.ql-bubble.ql-container:not(.ql-disabled) a:hover::before, .ql-bubble.ql-container:not(.ql-disabled) a:hover::after {
  visibility: visible;
}
.ql-bubble.ql-container:not(.ql-disabled) a::before {
  content: attr(href);
  top: -0.3125rem;
  z-index: 1;
  overflow: hidden;
  padding: 0.3125rem 0.9375rem;
  border-radius: 0.9375rem;
  background-color: #444;
  text-decoration: none;
  color: #fff;
  font-weight: normal;
  font-size: 0.75rem;
}
.ql-bubble.ql-container:not(.ql-disabled) a::after {
  content: " ";
  top: 0;
  height: 0;
  width: 0;
  border-top: 0.375rem solid #444;
  border-right: 0.375rem solid transparent;
  border-left: 0.375rem solid transparent;
}

.light-style .ql-editor.ql-blank:before {
  color: #a8b1bb;
}
.light-style .ql-snow.ql-toolbar .ql-picker-options, .light-style .ql-snow .ql-toolbar .ql-picker-options,
.light-style .ql-bubble.ql-toolbar .ql-picker-options,
.light-style .ql-bubble .ql-toolbar .ql-picker-options {
  box-shadow: 0 0.25rem 1rem rgba(147, 158, 170, 0.45);
}
.light-style .ql-snow .ql-picker.ql-header .ql-picker-item[data-value="1"]::before,
.light-style .ql-bubble .ql-picker.ql-header .ql-picker-item[data-value="1"]::before {
  font-size: 2.375rem;
}
.light-style .ql-snow .ql-picker.ql-header .ql-picker-item[data-value="2"]::before,
.light-style .ql-bubble .ql-picker.ql-header .ql-picker-item[data-value="2"]::before {
  font-size: 2rem;
}
.light-style .ql-snow .ql-picker.ql-header .ql-picker-item[data-value="3"]::before,
.light-style .ql-bubble .ql-picker.ql-header .ql-picker-item[data-value="3"]::before {
  font-size: 1.625rem;
}
.light-style .ql-snow .ql-picker.ql-header .ql-picker-item[data-value="4"]::before,
.light-style .ql-bubble .ql-picker.ql-header .ql-picker-item[data-value="4"]::before {
  font-size: 1.375rem;
}
.light-style .ql-snow .ql-picker.ql-header .ql-picker-item[data-value="5"]::before,
.light-style .ql-bubble .ql-picker.ql-header .ql-picker-item[data-value="5"]::before {
  font-size: 1.125rem;
}
.light-style .ql-snow .ql-picker.ql-header .ql-picker-item[data-value="6"]::before,
.light-style .ql-bubble .ql-picker.ql-header .ql-picker-item[data-value="6"]::before {
  font-size: 0.9375rem;
}
.light-style .ql-snow .ql-picker.ql-font .ql-picker-item[data-value=serif]::before,
.light-style .ql-bubble .ql-picker.ql-font .ql-picker-item[data-value=serif]::before {
  font-family: "Rubik", "Times New Roman", serif;
}
.light-style .ql-snow .ql-picker.ql-font .ql-picker-item[data-value=monospace]::before,
.light-style .ql-bubble .ql-picker.ql-font .ql-picker-item[data-value=monospace]::before {
  font-family: "SFMono-Regular", Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
}
.light-style .ql-snow .ql-picker.ql-size .ql-picker-item[data-value=small]::before,
.light-style .ql-bubble .ql-picker.ql-size .ql-picker-item[data-value=small]::before {
  font-size: 0.813rem;
}
.light-style .ql-snow .ql-picker.ql-size .ql-picker-item[data-value=large]::before,
.light-style .ql-bubble .ql-picker.ql-size .ql-picker-item[data-value=large]::before {
  font-size: 1.063rem;
}
.light-style .ql-snow .ql-picker.ql-size .ql-picker-item[data-value=huge]::before,
.light-style .ql-bubble .ql-picker.ql-size .ql-picker-item[data-value=huge]::before {
  font-size: 1.25rem;
}
.light-style .ql-snow .ql-editor.ql-blank::before {
  padding: 0 1.375rem;
}
.light-style .ql-snow.ql-container {
  border: 0.0625rem solid #d4d8dd;
}
.light-style .ql-snow .ql-editor {
  padding: 1.375rem;
}
.light-style .ql-snow.ql-toolbar, .light-style .ql-snow .ql-toolbar {
  border: 0.0625rem solid #d4d8dd;
}
@media (pointer: coarse) {
  .light-style .ql-snow.ql-toolbar button:hover:not(.ql-active), .light-style .ql-snow .ql-toolbar button:hover:not(.ql-active) {
    color: #677788;
  }
  .light-style .ql-snow.ql-toolbar button:hover:not(.ql-active) .ql-stroke,
  .light-style .ql-snow.ql-toolbar button:hover:not(.ql-active) .ql-stroke-miter, .light-style .ql-snow .ql-toolbar button:hover:not(.ql-active) .ql-stroke,
  .light-style .ql-snow .ql-toolbar button:hover:not(.ql-active) .ql-stroke-miter {
    stroke: #677788;
  }
  .light-style .ql-snow.ql-toolbar button:hover:not(.ql-active) .ql-fill,
  .light-style .ql-snow.ql-toolbar button:hover:not(.ql-active) .ql-stroke.ql-fill, .light-style .ql-snow .ql-toolbar button:hover:not(.ql-active) .ql-fill,
  .light-style .ql-snow .ql-toolbar button:hover:not(.ql-active) .ql-stroke.ql-fill {
    fill: #677788;
  }
}
.light-style .ql-snow.ql-toolbar + .ql-container.ql-snow {
  border-top: 0;
}
.light-style .ql-snow .ql-stroke {
  stroke: #677788;
}
.light-style .ql-snow .ql-fill,
.light-style .ql-snow .ql-stroke.ql-fill {
  fill: #677788;
}
.light-style .ql-snow .ql-stroke-miter {
  stroke: #677788;
}
.light-style .ql-snow .ql-picker {
  color: #677788;
}
.light-style .ql-snow .ql-picker.ql-expanded .ql-picker-options {
  border-color: transparent;
}
.light-style .ql-snow .ql-picker.ql-expanded .ql-picker-label {
  border-color: #d4d8dd;
}
.light-style .ql-snow .ql-tooltip {
  border: 0 solid transparent;
  color: #677788;
  box-shadow: 0 0.25rem 1rem rgba(147, 158, 170, 0.45);
}
.light-style .ql-snow .ql-tooltip input[type=text] {
  border: 0.0625rem solid #d4d8dd;
}
.light-style .ql-bubble .ql-tooltip {
  border-radius: 0.25rem;
  z-index: 1090;
}

.dark-style .ql-editor.ql-blank:before {
  color: #8295ba;
}
.dark-style .ql-snow .ql-tooltip,
.dark-style .ql-bubble .ql-tooltip {
  background: #1c222f;
}
.dark-style .ql-snow.ql-toolbar .ql-picker-options, .dark-style .ql-snow .ql-toolbar .ql-picker-options,
.dark-style .ql-bubble.ql-toolbar .ql-picker-options,
.dark-style .ql-bubble .ql-toolbar .ql-picker-options {
  box-shadow: 0 0.25rem 1rem rgba(0, 0, 0, 0.25);
}
.dark-style .ql-snow .ql-picker.ql-header .ql-picker-item[data-value="1"]::before,
.dark-style .ql-bubble .ql-picker.ql-header .ql-picker-item[data-value="1"]::before {
  font-size: 2.375rem;
}
.dark-style .ql-snow .ql-picker.ql-header .ql-picker-item[data-value="2"]::before,
.dark-style .ql-bubble .ql-picker.ql-header .ql-picker-item[data-value="2"]::before {
  font-size: 2rem;
}
.dark-style .ql-snow .ql-picker.ql-header .ql-picker-item[data-value="3"]::before,
.dark-style .ql-bubble .ql-picker.ql-header .ql-picker-item[data-value="3"]::before {
  font-size: 1.625rem;
}
.dark-style .ql-snow .ql-picker.ql-header .ql-picker-item[data-value="4"]::before,
.dark-style .ql-bubble .ql-picker.ql-header .ql-picker-item[data-value="4"]::before {
  font-size: 1.375rem;
}
.dark-style .ql-snow .ql-picker.ql-header .ql-picker-item[data-value="5"]::before,
.dark-style .ql-bubble .ql-picker.ql-header .ql-picker-item[data-value="5"]::before {
  font-size: 1.125rem;
}
.dark-style .ql-snow .ql-picker.ql-header .ql-picker-item[data-value="6"]::before,
.dark-style .ql-bubble .ql-picker.ql-header .ql-picker-item[data-value="6"]::before {
  font-size: 0.9375rem;
}
.dark-style .ql-snow .ql-picker.ql-font .ql-picker-item[data-value=serif]::before,
.dark-style .ql-bubble .ql-picker.ql-font .ql-picker-item[data-value=serif]::before {
  font-family: "Rubik", "Times New Roman", serif;
}
.dark-style .ql-snow .ql-picker.ql-font .ql-picker-item[data-value=monospace]::before,
.dark-style .ql-bubble .ql-picker.ql-font .ql-picker-item[data-value=monospace]::before {
  font-family: "SFMono-Regular", Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
}
.dark-style .ql-snow .ql-picker.ql-size .ql-picker-item[data-value=small]::before,
.dark-style .ql-bubble .ql-picker.ql-size .ql-picker-item[data-value=small]::before {
  font-size: 0.813rem;
}
.dark-style .ql-snow .ql-picker.ql-size .ql-picker-item[data-value=large]::before,
.dark-style .ql-bubble .ql-picker.ql-size .ql-picker-item[data-value=large]::before {
  font-size: 1.063rem;
}
.dark-style .ql-snow .ql-picker.ql-size .ql-picker-item[data-value=huge]::before,
.dark-style .ql-bubble .ql-picker.ql-size .ql-picker-item[data-value=huge]::before {
  font-size: 1.25rem;
}
.dark-style .ql-snow .ql-editor.ql-blank::before {
  padding: 0 1.375rem;
}
.dark-style .ql-snow.ql-container {
  border: 0.0625rem solid #546990;
}
.dark-style .ql-snow .ql-editor {
  padding: 1.375rem;
  background: #283144;
}
.dark-style .ql-snow .ql-picker-options {
  background: #283144;
}
.dark-style .ql-snow.ql-toolbar, .dark-style .ql-snow .ql-toolbar {
  border: 0.0625rem solid #546990;
  background: #283144;
}
@media (pointer: coarse) {
  .dark-style .ql-snow.ql-toolbar button:hover:not(.ql-active), .dark-style .ql-snow .ql-toolbar button:hover:not(.ql-active) {
    color: #a1b0cb;
  }
  .dark-style .ql-snow.ql-toolbar button:hover:not(.ql-active) .ql-stroke,
  .dark-style .ql-snow.ql-toolbar button:hover:not(.ql-active) .ql-stroke-miter, .dark-style .ql-snow .ql-toolbar button:hover:not(.ql-active) .ql-stroke,
  .dark-style .ql-snow .ql-toolbar button:hover:not(.ql-active) .ql-stroke-miter {
    stroke: #a1b0cb;
  }
  .dark-style .ql-snow.ql-toolbar button:hover:not(.ql-active) .ql-fill,
  .dark-style .ql-snow.ql-toolbar button:hover:not(.ql-active) .ql-stroke.ql-fill, .dark-style .ql-snow .ql-toolbar button:hover:not(.ql-active) .ql-fill,
  .dark-style .ql-snow .ql-toolbar button:hover:not(.ql-active) .ql-stroke.ql-fill {
    fill: #a1b0cb;
  }
}
.dark-style .ql-snow.ql-toolbar + .ql-container.ql-snow {
  border-top: 0;
}
.dark-style .ql-snow .ql-stroke-miter {
  stroke: #a1b0cb;
}
.dark-style .ql-snow .ql-stroke {
  stroke: #a1b0cb;
}
.dark-style .ql-snow .ql-fill,
.dark-style .ql-snow .ql-stroke.ql-fill {
  fill: #a1b0cb;
}
.dark-style .ql-snow .ql-picker {
  color: #a1b0cb;
}
.dark-style .ql-snow .ql-picker.ql-expanded .ql-picker-options {
  border-color: transparent;
}
.dark-style .ql-snow .ql-picker.ql-expanded .ql-picker-label {
  border-color: #546990;
}
.dark-style .ql-snow .ql-tooltip {
  border: 0 solid transparent;
  color: #a1b0cb;
  box-shadow: 0 0.25rem 1rem rgba(0, 0, 0, 0.25);
}
.dark-style .ql-snow .ql-tooltip input[type=text] {
  border: 0.0625rem solid #546990;
}
.dark-style .ql-bubble .ql-tooltip {
  border-radius: 0.25rem;
  z-index: 1090;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlbmRvci9saWJzL3F1aWxsL2VkaXRvci5jc3MiLCJ2ZW5kb3IvbGlicy9xdWlsbC9lZGl0b3Iuc2NzcyIsInZlbmRvci9zY3NzL19jdXN0b20tdmFyaWFibGVzL19zdXBwb3J0LnNjc3MiLCJ2ZW5kb3Ivc2Nzcy9fYm9vdHN0cmFwLWV4dGVuZGVkL192YXJpYWJsZXMuc2NzcyIsInZlbmRvci9zY3NzL19ib290c3RyYXAtZXh0ZW5kZWQvX3ZhcmlhYmxlcy1kYXJrLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCO0FBUWhCO0VDU0UsY0FBQTtFQUNFLFNBQUE7RURQRixrQkFBQTtBQU5GO0FDaUJBO0VBQ0Usb0JBQUE7QURmRjtBQ2tCRTtFQUNBLGtCQUFBO0FEaEJGOztBQVdBO0VBQ0Usa0JBQUE7RUFDQSxrQkFBQTtFQ1dGLGNBQUE7RUFDRSxpQkFBQTtFQUNBLFFBQUE7QURsQkY7QUN3QkU7RUFIQSxVQUFBO0VBQ0EsZUFBQTtBRGxCRjs7QUFZQTtFQ1dFLGdCQUFBO0VBQ0UsWUFBQTtFRFRGLGNBQUE7S0FBQSxXQUFBO0VDWUEsZ0JBQUE7RUFDRSxzQkFBQTtFQUNBLGNBQUE7RUFDQSxhQUFBO0VBQ0EscUJBQUE7RUFDQSxxQkFBQTtBRHBCSjtBQVdFO0VBQ0UsWUFBQTtBQVRKO0FDeUJFO0VEWkUsa0JBQUE7RUNjRiwrQkFBQTtFQUFBLGtCQUFBO0VBQ0UsT0FBQTtFRFhBLFFBQUE7RUNjRixvQkFBQTtBRHZCRjs7QUFlQTs7RUNhRSxzQkFBQTtBRHZCRjtBQWNFOztFQ2FBLHNCQUFBO0FEdkJGO0FBY0U7Ozs7RUNhQSxrQkFBQTtBRHJCRjtBQ3lCRTs7RUFBQSx3QkFBQTtBRHJCRjtBQ3lCRTs7RUFBQSxrQkFBQTtBRHJCRjtBQ3VCSTs7RURUQSxVQUFBO0FBVko7QUN1Qkk7O0VEVEEsWUFBQTtBQVZKO0FDd0JNOzs7O0VBR0YsZUFBQTtBRHJCSjtBQVlFOztFQ2NBLDBCQUFBO0FEdEJGO0FDMEJFOztFQUFBLGVBQUE7QUR0QkY7QUN5Qkk7O0VEWEUsYUFBQTtBQVZOO0FDd0JNOztFQUNBLGFBQUE7QURyQk47QUN5Qkk7OztFQUFBLHNCQUFBO0VBQ0UsZUFBQTtBRHBCTjtBQ3NCTTs7O0VBQ0EsV0FBQTtFQUNBLFdBQUE7RUFDQSxjQUFBO0FEbEJOO0FBWUk7OztFQ1VFLFdBQUE7RUFBQSxxQkFBQTtFQUFBLDRCQUFBO0VBQ0UsY0FBQTtFRE5GLGNBQUE7RUVoR0EsZ0JBQUE7RUFBQSxZQUFBO0VBQUEsZUFBQTtBRjJGTjtBQVVNOzs7RUNRQSxhQUFBO0FEYk47QUN0RkU7OztFQXFHTSxZQUFBO0FEVlI7QUVyR007OztFQUFBLFlBQUE7RURrSEksV0FBQTtBRFBWO0FDakdFOzs7RUE2R0UsWUFBQTtBRFBKO0FDWUU7OztFQUNFLGFBQUE7QURSSjtBQ1dJOztFQUNFLCtCQUFBO0VESEYsa0JBQUE7QUFKSjtBQ1VJOztFQUNFLGdDQUFBO0FEUE47QUNZRTs7RUFBQSxlQUFBO0VBQ0UscUJBQUE7QURSSjtBRW5JTTs7RUFBQSxxQkFBQTtFRGdKQSx1QkFBQTtFQUNBLHNCQUFBO0FEUk47QUMvSEU7O0VBMElFLGVBQUE7RUFDRSxzQkFBQTtBRFBOO0FBTUk7O0VDT0YsV0FBQTtFQUFBLGNBQUE7RUFDRSxXQUFBO0FEUko7QUNZSTs7RURKQSxzQkFBQTtFRTVKRSxrQkFBQTtFQUFBLGNBQUE7RURtS0EscUJBQUE7RURIRixXQUFBO0FBSko7QUNsSkU7O0VBNkpJLFlBQUE7QURQTjtBQ1VNOztFREhBLFNBQUE7RUNTQSxjQUFBO0VBQUEsVUFBQTtFQUFBLHNCQUFBO0FEVE47QUNTTTs7Ozs7Ozs7OztFQUVFLHlCQUFBO0FEQ1I7QUNJTTs7RURBQSxlQUFBO0FBQU47QUNJUTs7OztFQUNFLGlCQUFBO0FEQ1Y7QUNFUTs7OztFQUFBLG9CQUFBO0FESVI7QUFBUTs7OztFQ0FBLG9CQUFBO0FETVI7QUNOUTs7OztFQUNFLG9CQUFBO0FEV1Y7QUNSUTs7OztFQUFBLG9CQUFBO0FEY1I7QUFOUTs7OztFQ0pBLG9CQUFBO0FEZ0JSO0FDaEJROzs7O0VBQ0Usb0JBQUE7QURxQlY7QUNsQlE7O0VBQ0UsY0FBQTtBRHFCVjtBQ2xCUTs7OztFQUFBLHFCQUFBO0FEd0JSO0FDbEJJOzs7O0VBQUEsZ0JBQUE7QUR3Qko7QUNuQlE7Ozs7RUFBQSxvQkFBQTtBRHlCUjtBQ3JCUTs7RUFBQSxlQUFBO0FEeUJSO0FBVlE7Ozs7RUNYQSxpQkFBQTtBRDJCUjtBQzNCUTs7OztFQUNFLGdCQUFBO0FEZ0NWO0FDM0JJOzs7O0VBQ0UsZ0JBQUE7QURnQ047QUM1QlE7Ozs7RUFBQSxlQUFBO0FEa0NSO0FDOUJROztFQUFBLGtCQUFBO0VBQUEsUUFBQTtFQUNFLFFBQUE7RURpQkosc0JBQUE7RUNkRSxlQUFBO0FEa0NSO0FDalJFOztFQStPTSxXQUFBO0VBQ0UsT0FBQTtBRHNDVjtBQ25DUTs7RUFDRSxrQkFBQTtFRHFCTixxQkFBQTtFQ2hCQSx1QkFBQTtFQUFBLG9CQUFBO0VBQ0UsWUFBQTtFQUNBLFdBQUE7RUFDQSxtQ0FBQTtFQUNBLGVBQUE7QURvQ047QUFoQkk7O0VFM1JFLHFCQUFBO0VBQUEscUJBQUE7QUZnVE47QUMvQkU7O0VBQUEsdUJBQUE7RUFDRSxlQUFBO0VBQ0Esa0JBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7QURtQ0o7QUNqQ0k7O0VBQ0EseUJBQUE7RUFDQSxzQkFBQTtFRGtCRSxjQUFBO0VDaEJGLGVBQUE7QURvQ0o7QUFmRTs7OztFQ2ZBLGNBQUE7QURvQ0Y7QUNsQ0k7Ozs7RUFDQSx5QkFBQTtBRHVDSjtBQ25DSTs7RUFDRSxrQkFBQTtBRHNDTjtBQ25DTTs7RURtQkEseUJBQUE7RUNmSixhQUFBO0VBQUEsY0FBQTtBRHFDRjtBQ2pDSTs7RUFBQSw0QkFBQTtFQUFBLGFBQUE7QURzQ0o7QUFmSTs7RUNqQkEsV0FBQTtFQUFBLGdCQUFBO0VBQ0UsVUFBQTtFRG9CQSxXQUFBO0VDakJGLFlBQUE7RUFBQSxtQ0FBQTtBRHFDSjtBQ3pWRTs7RUF1VEksWUFBQTtBRHNDTjtBQ2hDTTs7RUFDQSxzQkFBQTtBRG1DTjtBQ2hDSTs7RUFDRSxzQkFBQTtBRG1DTjtBQzlCTTs7Ozs7Ozs7Ozs7Ozs7OztFQVFBLHFCQUFBO0FEd0NOOztBQy9CSTs7RUFBQSxnQkFBQTtFQUFBLDRCQUFBO0FEcUNKO0FDckNJO0VBQUEsaUJBQUE7RUFBQSxnQkFBQTtBRHlDSjtBQ3pDSTtFQUFBLFVBQUE7RUFBQSxzQkFBQTtBRDZDSjtBQzdDSTtFQVFFLHFCQUFBO0FEd0NOO0FDbENFO0VBQUEsdUJBQUE7QURxQ0Y7QUMvQkU7RUFDRSxVQUFBO0VBQ0EsZUFBQTtFRG1CQSxzQkFBQTtFQ2hCRixxQkFBQTtBRGdDRjtBQVpFO0VDaEJFLFVBQUE7RUFDRSxlQUFBO0VEa0JGLHFCQUFBO0FBY0o7QUFYRTtFQ2JBLG1DQUFBO0FEMkJGO0FDeEJJO0VBQ0EsbUNBQUE7RURlQSxzQkFBQTtFQ1pGLDRCQUFBO0FEeUJGO0FDdEJJOztFQUdGLGtCQUFBO0FEdUJGO0FDbkJFO0VBQ0UsYUFBQTtFQUNBLDBCQUFBO0VBQ0Esc0JBQUE7RURZQSw0QkFBQTtFQ1RGLG1CQUFBO0FEb0JGO0FDbEJJO0VEV0UscUJBQUE7RUNSSixvQkFBQTtFQUNFLHFCQUFBO0FEbUJKO0FDOWFFO0VBOFpFLGVBQUE7RUFDQSxtQkFBQTtBRG1CSjtBQ2ZNO0VBQ0EsYUFBQTtFRFVBLFNBQUE7RUV4YkEsNEJBQUE7RURpYkUsZ0JBQUE7RUFDQSxnQkFBQTtFRFVGLG9CQUFBO0FBUU47QUNaTTtFQUNBLHFCQUFBO0VBQ0EsbUJBQUE7RUFDQSxrQkFBQTtFQUNBLGtCQUFBO0VEUUEsdUJBQUE7QUFPTjtBQ1ZNO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0VBQ0EscUJBQUE7RURPQSxrQ0FBQTtBQU1OO0FDdmNFO0VBK2JJLGNBQUE7RUFDQSxrQkFBQTtFQUNBLG9CQUFBO0VETUUsZ0JBQUE7RUVqZEYsZUFBQTtFRDhjRSxpQ0FBQTtBRFdSO0FDUFE7RUFDQSxpQkFBQTtFRE1GLG1CQUFBO0FBSU47QUNuZEU7RUErY0ksb0JBQUE7RURJRSxjQUFBO0FBSVI7QUFBSTtFQ0FBLHFCQUFBO0FER0o7QUNDSTtFREVFLGFBQUE7QUFBTjtBQUdJO0VDSUEscUJBQUE7QURKSjtBQ09NO0VERkEsZUFBQTtFRS9lQSxlQUFBO0VEb2ZFLGdCQUFBO0FETFI7QUNyZUU7RUErZUUsY0FBQTtFQUNFLGVBQUE7QURQTjtBQU1JO0VDUUEsc0JBQUE7QURYSjtBQU9JO0VDYUEseUJBQUE7QURqQko7QUNpQkk7RUFBQSx1QkFBQTtBRGRKOztBQ2NJOzs7Ozs7Ozs7Ozs7OztFQVVBLFdBQUE7QURQSjtBQ09JOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0VBQUEsWUFBQTtBRHVCSjtBQ3ZCSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztFQWdCQSxVQUFBO0FEcUNKO0FDckNJO0VBQUE7O0lBQUEsV0FBQTtFRDBDRjtFQzFDRTs7OztJQUFBLFVBQUE7RURnREY7RUNoREU7Ozs7SUFBQSxZQUFBO0VEc0RGO0FBQ0Y7QUN2REk7RUFBQSxVQUFBO0VBQUEsWUFBQTtFQUFBLHNCQUFBO0VBY0UscUJBQUE7RUR1QkYsZUFBQTtBQXlCSjtBQzVDTTtFQUNFLFVBQUE7RUR1QkosWUFBQTtFQ3JCRSxxQkFBQTtFQUFBLGVBQUE7QUQrQ047QUFyQkU7O0VDdEJJLFVBQUE7QUQrQ047QUMvQ007RUFFRSxXQUFBO0FEZ0RSO0FBcEJJO0VDdkJGLFVBQUE7RUFDRSxXQUFBO0FEOENKO0FDNUNJO0VBQ0EsVUFBQTtBRDhDSjtBQzFDRTtFQUNFLFlBQUE7QUQ0Q0o7QUN0Q0U7RUFBQSxzQkFBQTtBRHlDRjtBQ3BDRTs7RUR1QkUsY0FBQTtBQWlCSjtBQ3RuQkU7O0VBbWxCSSxXQUFBO0VEc0JBLGFBQUE7QUFrQk47QUNqQ1E7RURxQkYsaUJBQUE7QUFlTjtBQVpJOztFQ2ZGLGtCQUFBO0FEK0JGO0FFNW9CTTtFRGtuQkEsK0JBQUE7QUQ2Qk47QUNyb0JFO0VBOG1CRSwrQkFBQTtBRDBCSjtBQ3RCSTtFQUFBLG9CQUFBO0FEeUJKO0FDM29CRTtFQXduQkEscUJBQUE7QURzQkY7QUFORTtFQ1RFLFlBQUE7RUFDRSxrQkFBQTtFRFdGLGNBQUE7RUVycEJFLFNBQUE7RUQ2b0JFLHNCQUFBO0VEV0osd0NBQUE7RUNORix1Q0FBQTtBRGVGO0FDWkk7RUFDQSxzQkFBQTtFQUNBLFdBQUE7QURjSjtBQ1pJO0VEUUUsY0FBQTtFQ0xKLGtDQUFBO0FEYUY7QUFKSTtFQ0xBLGlCQUFBO0VBQ0UsK0JBQUE7QURZTjtBQ1BNO0VBQ0EsY0FBQTtBRFNOO0FDSlE7RURJQSxrQkFBQTtBQUdSO0FDR0k7RURBQSxhQUFBO0FBQUo7QUNHTTtFQUNBLGtCQUFBO0VBQ0EseUJBQUE7RUFDQSxZQUFBO0VBQ0EsV0FBQTtFQUNBLGFBQUE7RUFDQSx1QkFBQTtFQUNBLFlBQUE7RUFDQSxXQUFBO0VEQUEsb0JBQUE7QUFBTjtBQ0tNO0VBQ0Esa0JBQUE7RUREQSxjQUFBO0VFdHNCQSxhQUFBO0FGc3NCTjtBQzVyQkU7RURnc0JNLFdBQUE7RUNJRixhQUFBO0FESk47QUNPUTtFQUNBLFlBQUE7RURGQSxXQUFBO0VDT04sZUFBQTtFQUNFLGlCQUFBO0FEUko7QUNjTTtFQUNBLG1CQUFBO0VBQ0Esa0JBQUE7QURaTjtBQ2NNO0VBR0YsZ0JBQUE7RUFFRSxrQkFBQTtFRFJBLGtCQUFBO0VDV0YsT0FBQTtFQUNFLG9DQUFBO0VBQ0EsaUNBQUE7QURoQk47QUNtQk07RUFFQSxtQkFBQTtBRGxCTjtBQ3FCTTtFQUNBLG1CQUFBO0VEVEEsZUFBQTtFQ1lGLFVBQUE7RUFDRSxnQkFBQTtFQUNBLDRCQUFBO0VBQ0Esd0JBQUE7RUFDQSxzQkFBQTtFQUNBLHFCQUFBO0VBQ0EsV0FBQTtFQUNBLG1CQUFBO0VEVkEsa0JBQUE7QUFUTjtBQzRCTTtFRGZBLFlBQUE7RUNvQkEsTUFBQTtFQUFBLFNBQUE7RUFBQSxRQUFBO0VBRUUsK0JBQUE7RURqQkYsd0NBQUE7RUNzQkksdUNBQUE7QUQvQlY7O0FDdUNVO0VBQUEsY0FsWk47QUQrV0o7QUN3Q1k7OztFQUdGLG9EQTluQk47QUR3bEJKO0FDMENVOztFQUNFLG1CQTFsQko7QURtakJSO0FDNENVOztFQUNFLGVBL2xCRjtBRHNqQlY7QUM0Q1U7O0VBQ0UsbUJEeGxCRztBQStpQmY7QUM4Q1U7O0VBQ0UsbUJBdG1CSjtBRDJqQlI7QUM4Q1U7O0VBQ0UsbUJBMW1CSjtBRCtqQlI7QUM4Q1U7O0VBQ0Usb0JEeG5CSztBQTZrQmpCO0FDc0RNOztFQUNFLDhDQTlvQkE7QUQybEJSO0FDdURROztFRDlCSSxtR0NwbkJKO0FEK2xCUjtBQzJEVTs7RUUxdUJHLG1CRndGTDtBRDJsQlI7QUMwRFU7O0VBQUEsbUJBcnBCRjtBRCtsQlI7QUMwRFU7O0VBQUEsa0JBenBCRjtBRG1tQlI7QUE4Qk07RUNtQ0EsbUJBQUE7QUQ5RE47QUNrRU07RUFBQSwrQkFBQTtBRC9ETjtBQ29FTTtFQUNFLGlCQTVsQko7QUQwaEJKO0FDcUVRO0VBRUEsK0JBQUE7QURwRVI7QUFrQ1E7RUNzQ0E7SUFDRSxjQTd3QkE7RUR3c0JSO0VDeUVJOzs7SUVweEJPLGVGR0g7RUQ2c0JSO0VBaUNROzs7SUN5Q0EsYUF2eEJBO0VEa3RCUjtBQUNGO0FBa0NNO0VBQ0UsYUFBQTtBQWhDUjtBQW1DTTtFQ21EQSxlQTV5Qkk7QUR5dEJWO0FBb0NNOztFQ2tEQSxhQS95Qkk7QUQ2dEJWO0FBcUNNO0VDb0RJLGVBdHpCQTtBRGd1QlY7QUN1Rlk7RURqREosY0N0d0JFO0FEbXVCVjtBQ3VGVTtFQUNFLHlCQTd2Qk47QUR3cUJOO0FDd0ZVO0VBQ0UscUJBbGpCUjtBRDRkSjtBQzBGWTtFRGpESiwyQkFBQTtFQ29ERSxjQXQwQkE7RUFzMEJBLG9EQWx4Qk47QUQwckJKO0FBd0NRO0VDb0RFLCtCQUFBO0FEekZWO0FDK0ZVO0VBQ0Usc0JBcHlCUjtFRGl2QkUsYUFBQTtBQXpDTjs7QUFpREk7RUN3RE0sY0FoNEJSO0FEMnhCRjtBQ3lHVTs7RUFDRSxtQkE1NUJWO0FEc3pCRjtBQzZHTTs7O0VEekRFLDhDQ2gyQko7QURpekJKO0FDaUhROztFQUNBLG1CQXZ4QkE7QUR5cUJSO0FDa0hROztFRDdESSxlQzd0QkY7QUQ0cUJWO0FDb0hROztFRC9ESSxtQkF0dEJHO0FBcXFCZjtBQ29IWTs7RUQvREEsbUJDbHVCSjtBRGlyQlI7QUNrSFU7O0VHcjhCRyxtQkhrS0w7QURxckJSO0FDa0hVOztFQUFBLG9CRGp6Qk87QUFtc0JqQjtBQ3NIUTs7RUQvREksOENDcHdCSjtBRGl0QlI7QUFzRFU7O0VDbUVKLG1HQTEwQkU7QURxdEJSO0FJbjJCYTs7RUo0NUJELG1CQ3R3Qko7QURpdEJSO0FBd0RVOztFQ3FFRixtQkE5MEJBO0FEcXRCUjtBQzZIUTs7RUFDRSxrQkFuMUJGO0FEeXRCUjtBQ21JUTtFQUNFLG1CQUFBO0FEaklWO0FDdUlNO0VBQ0EsK0JBQUE7QURySU47QUE4RE07RUFDRSxpQkM1c0JKO0VENnNCSSxtQkMvMkJKO0FEbXpCSjtBQStETTtFQUNFLG1CQ24zQko7QURzekJKO0FBZ0VNO0VBRUUsK0JBQUE7RUFDQSxtQkN6M0JKO0FEMHpCSjtBQWlFUTtFQUNFO0lBQ0UsY0N6N0JSO0VEMDNCRjtFQWlFUTs7O0lBRUUsZUM3N0JSO0VEKzNCRjtFQWdFUTs7O0lBRUUsYUNqOEJSO0VEbzRCRjtBQUNGO0FBaUVNO0VBQ0UsYUFBQTtBQS9EUjtBQWtFTTtFQUNFLGVDMzhCSjtBRDI0Qko7QUFtRU07RUFDRSxlQy84Qko7QUQ4NEJKO0FBb0VNOztFQUVFLGFDcDlCSjtBRGs1Qko7QUFxRU07RUFDRSxjQ3g5Qko7QURxNUJKO0FBcUVRO0VBQ0UseUJDdDJCSjtBRG15Qk47QUFzRVE7RUFDRSxxQkM3NEJOO0FEeTBCSjtBQXdFTTtFQUNFLDJCQUFBO0VBQ0EsY0NyK0JKO0VEcytCSSw4Q0M5OUJKO0FEdzVCSjtBQXdFUTtFQUNFLCtCQUFBO0FBdEVWO0FBMkVJO0VBQ0Usc0JDMzRCRjtFRDQ0QkUsYUFBQTtBQXpFTjtBQUNBLHk0akdBQXk0akciLCJmaWxlIjoidmVuZG9yL2xpYnMvcXVpbGwvZWRpdG9yLmRpc3QuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGNoYXJzZXQgXCJVVEYtOFwiO1xuLnFsLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW46IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cbi5xbC1jb250YWluZXIucWwtZGlzYWJsZWQgLnFsLWVkaXRvciB1bFtkYXRhLWNoZWNrZWRdID4gbGk6OmJlZm9yZSB7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xufVxuLnFsLWNvbnRhaW5lci5xbC1kaXNhYmxlZCAucWwtdG9vbHRpcCB7XG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcbn1cblxuLnFsLWNsaXBib2FyZCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgb3ZlcmZsb3cteTogaGlkZGVuO1xuICBsZWZ0OiAtNjI1MHJlbTtcbiAgaGVpZ2h0OiAwLjA2MjVyZW07XG4gIHRvcDogNTAlO1xufVxuW2Rpcj1ydGxdIC5xbC1jbGlwYm9hcmQge1xuICBsZWZ0OiBhdXRvO1xuICByaWdodDogLTYyNTByZW07XG59XG5cbi5xbC1lZGl0b3Ige1xuICBvdmVyZmxvdy15OiBhdXRvO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHRhYi1zaXplOiA0O1xuICAtbW96LXRhYi1zaXplOiA0O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBkaXNwbGF5OiBibG9jaztcbiAgb3V0bGluZTogbm9uZTtcbiAgd29yZC13cmFwOiBicmVhay13b3JkO1xuICB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7XG59XG4ucWwtZWRpdG9yID4gKiB7XG4gIGN1cnNvcjogdGV4dDtcbn1cbi5xbC1lZGl0b3IucWwtYmxhbms6OmJlZm9yZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgY29udGVudDogYXR0cihkYXRhLXBsYWNlaG9sZGVyKTtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG59XG5cbi5xbC1zbm93LFxuLnFsLWJ1YmJsZSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG4ucWwtc25vdyAqLFxuLnFsLWJ1YmJsZSAqIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cbi5xbC1zbm93IC5xbC1vdXQtYm90dG9tLFxuLnFsLXNub3cgLnFsLW91dC10b3AsXG4ucWwtYnViYmxlIC5xbC1vdXQtYm90dG9tLFxuLnFsLWJ1YmJsZSAucWwtb3V0LXRvcCB7XG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcbn1cbi5xbC1zbm93IC5xbC1oaWRkZW4sXG4ucWwtYnViYmxlIC5xbC1oaWRkZW4ge1xuICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG59XG4ucWwtc25vdyAucWwtZXZlbixcbi5xbC1idWJibGUgLnFsLWV2ZW4ge1xuICBmaWxsLXJ1bGU6IGV2ZW5vZGQ7XG59XG4ucWwtc25vdyAucWwtZW1wdHksXG4ucWwtYnViYmxlIC5xbC1lbXB0eSB7XG4gIGZpbGw6IG5vbmU7XG59XG4ucWwtc25vdyAucWwtdHJhbnNwYXJlbnQsXG4ucWwtYnViYmxlIC5xbC10cmFuc3BhcmVudCB7XG4gIG9wYWNpdHk6IDAuNDtcbn1cbi5xbC1zbm93IC5xbC10aGluLFxuLnFsLXNub3cgLnFsLXN0cm9rZS5xbC10aGluLFxuLnFsLWJ1YmJsZSAucWwtdGhpbixcbi5xbC1idWJibGUgLnFsLXN0cm9rZS5xbC10aGluIHtcbiAgc3Ryb2tlLXdpZHRoOiAxO1xufVxuLnFsLXNub3cgLnFsLWVkaXRvciBhLFxuLnFsLWJ1YmJsZSAucWwtZWRpdG9yIGEge1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbn1cbi5xbC1zbm93IC5xbC1kaXJlY3Rpb24ucWwtYWN0aXZlIHN2ZzpsYXN0LWNoaWxkLFxuLnFsLWJ1YmJsZSAucWwtZGlyZWN0aW9uLnFsLWFjdGl2ZSBzdmc6bGFzdC1jaGlsZCB7XG4gIGRpc3BsYXk6IGlubGluZTtcbn1cbi5xbC1zbm93IC5xbC1kaXJlY3Rpb24ucWwtYWN0aXZlIHN2ZzpmaXJzdC1jaGlsZCxcbi5xbC1idWJibGUgLnFsLWRpcmVjdGlvbi5xbC1hY3RpdmUgc3ZnOmZpcnN0LWNoaWxkIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbi5xbC1zbm93IC5xbC1kaXJlY3Rpb24gc3ZnOmxhc3QtY2hpbGQsXG4ucWwtYnViYmxlIC5xbC1kaXJlY3Rpb24gc3ZnOmxhc3QtY2hpbGQge1xuICBkaXNwbGF5OiBub25lO1xufVxuLnFsLXNub3cucWwtdG9vbGJhciwgLnFsLXNub3cgLnFsLXRvb2xiYXIsXG4ucWwtYnViYmxlLnFsLXRvb2xiYXIsXG4ucWwtYnViYmxlIC5xbC10b29sYmFyIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgcGFkZGluZzogMC41cmVtO1xufVxuLnFsLXNub3cucWwtdG9vbGJhcjo6YWZ0ZXIsIC5xbC1zbm93IC5xbC10b29sYmFyOjphZnRlcixcbi5xbC1idWJibGUucWwtdG9vbGJhcjo6YWZ0ZXIsXG4ucWwtYnViYmxlIC5xbC10b29sYmFyOjphZnRlciB7XG4gIGNsZWFyOiBib3RoO1xuICBjb250ZW50OiBcIlwiO1xuICBkaXNwbGF5OiB0YWJsZTtcbn1cbi5xbC1zbm93LnFsLXRvb2xiYXIgYnV0dG9uLCAucWwtc25vdyAucWwtdG9vbGJhciBidXR0b24sXG4ucWwtYnViYmxlLnFsLXRvb2xiYXIgYnV0dG9uLFxuLnFsLWJ1YmJsZSAucWwtdG9vbGJhciBidXR0b24ge1xuICBmbG9hdDogbGVmdDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBwYWRkaW5nOiAwLjE4NzVyZW0gMC4zMTI1cmVtO1xuICBoZWlnaHQ6IDEuNXJlbTtcbiAgd2lkdGg6IDEuNzVyZW07XG4gIGJhY2tncm91bmQ6IG5vbmU7XG4gIGJvcmRlcjogbm9uZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuLnFsLXNub3cucWwtdG9vbGJhciBidXR0b246YWN0aXZlOmhvdmVyLCAucWwtc25vdyAucWwtdG9vbGJhciBidXR0b246YWN0aXZlOmhvdmVyLFxuLnFsLWJ1YmJsZS5xbC10b29sYmFyIGJ1dHRvbjphY3RpdmU6aG92ZXIsXG4ucWwtYnViYmxlIC5xbC10b29sYmFyIGJ1dHRvbjphY3RpdmU6aG92ZXIge1xuICBvdXRsaW5lOiBub25lO1xufVxuW2Rpcj1ydGxdIC5xbC1zbm93LnFsLXRvb2xiYXIgYnV0dG9uLCBbZGlyPXJ0bF0gLnFsLXNub3cgLnFsLXRvb2xiYXIgYnV0dG9uLFxuW2Rpcj1ydGxdIC5xbC1idWJibGUucWwtdG9vbGJhciBidXR0b24sXG5bZGlyPXJ0bF0gLnFsLWJ1YmJsZSAucWwtdG9vbGJhciBidXR0b24ge1xuICBmbG9hdDogcmlnaHQ7XG59XG4ucWwtc25vdy5xbC10b29sYmFyIGJ1dHRvbiBzdmcsIC5xbC1zbm93IC5xbC10b29sYmFyIGJ1dHRvbiBzdmcsXG4ucWwtYnViYmxlLnFsLXRvb2xiYXIgYnV0dG9uIHN2Zyxcbi5xbC1idWJibGUgLnFsLXRvb2xiYXIgYnV0dG9uIHN2ZyB7XG4gIGhlaWdodDogMTAwJTtcbiAgZmxvYXQ6IGxlZnQ7XG59XG5bZGlyPXJ0bF0gLnFsLXNub3cucWwtdG9vbGJhciBidXR0b24gc3ZnLCBbZGlyPXJ0bF0gLnFsLXNub3cgLnFsLXRvb2xiYXIgYnV0dG9uIHN2ZyxcbltkaXI9cnRsXSAucWwtYnViYmxlLnFsLXRvb2xiYXIgYnV0dG9uIHN2ZyxcbltkaXI9cnRsXSAucWwtYnViYmxlIC5xbC10b29sYmFyIGJ1dHRvbiBzdmcge1xuICBmbG9hdDogcmlnaHQ7XG59XG4ucWwtc25vdy5xbC10b29sYmFyIGlucHV0LnFsLWltYWdlW3R5cGU9ZmlsZV0sIC5xbC1zbm93IC5xbC10b29sYmFyIGlucHV0LnFsLWltYWdlW3R5cGU9ZmlsZV0sXG4ucWwtYnViYmxlLnFsLXRvb2xiYXIgaW5wdXQucWwtaW1hZ2VbdHlwZT1maWxlXSxcbi5xbC1idWJibGUgLnFsLXRvb2xiYXIgaW5wdXQucWwtaW1hZ2VbdHlwZT1maWxlXSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4ucWwtc25vdyAucWwtdG9vbHRpcCxcbi5xbC1idWJibGUgLnFsLXRvb2x0aXAge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMC42MjVyZW0pO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG59XG4ucWwtc25vdyAucWwtdG9vbHRpcC5xbC1mbGlwLFxuLnFsLWJ1YmJsZSAucWwtdG9vbHRpcC5xbC1mbGlwIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0wLjYyNXJlbSk7XG59XG4ucWwtc25vdyAucWwtdG9vbHRpcCBhLFxuLnFsLWJ1YmJsZSAucWwtdG9vbHRpcCBhIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG4ucWwtc25vdyAucWwtZm9ybWF0cyxcbi5xbC1idWJibGUgLnFsLWZvcm1hdHMge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIG1hcmdpbi1yaWdodDogMC45Mzc1cmVtO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xufVxuW2Rpcj1ydGxdIC5xbC1zbm93IC5xbC1mb3JtYXRzLFxuW2Rpcj1ydGxdIC5xbC1idWJibGUgLnFsLWZvcm1hdHMge1xuICBtYXJnaW4tcmlnaHQ6IDA7XG4gIG1hcmdpbi1sZWZ0OiAwLjkzNzVyZW07XG59XG4ucWwtc25vdyAucWwtZm9ybWF0czo6YWZ0ZXIsXG4ucWwtYnViYmxlIC5xbC1mb3JtYXRzOjphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICBjbGVhcjogYm90aDtcbn1cbi5xbC1zbm93IC5xbC1waWNrZXIsXG4ucWwtYnViYmxlIC5xbC1waWNrZXIge1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGhlaWdodDogMS41cmVtO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGZsb2F0OiBsZWZ0O1xufVxuW2Rpcj1ydGxdIC5xbC1zbm93IC5xbC1waWNrZXIsXG5bZGlyPXJ0bF0gLnFsLWJ1YmJsZSAucWwtcGlja2VyIHtcbiAgZmxvYXQ6IHJpZ2h0O1xufVxuLnFsLXNub3cgLnFsLXBpY2tlci5xbC1leHBhbmRlZCAucWwtcGlja2VyLW9wdGlvbnMsXG4ucWwtYnViYmxlIC5xbC1waWNrZXIucWwtZXhwYW5kZWQgLnFsLXBpY2tlci1vcHRpb25zIHtcbiAgdG9wOiAxMDAlO1xuICBkaXNwbGF5OiBibG9jaztcbiAgei1pbmRleDogMTtcbiAgbWFyZ2luLXRvcDogLTAuMDYyNXJlbTtcbn1cbi5xbC1zbm93IC5xbC1waWNrZXIucWwtaGVhZGVyIC5xbC1waWNrZXItbGFiZWxbZGF0YS1sYWJlbF06bm90KFtkYXRhLWxhYmVsPVwiXCJdKTo6YmVmb3JlLFxuLnFsLXNub3cgLnFsLXBpY2tlci5xbC1oZWFkZXIgLnFsLXBpY2tlci1pdGVtW2RhdGEtbGFiZWxdOm5vdChbZGF0YS1sYWJlbD1cIlwiXSk6OmJlZm9yZSwgLnFsLXNub3cgLnFsLXBpY2tlci5xbC1mb250IC5xbC1waWNrZXItbGFiZWxbZGF0YS1sYWJlbF06bm90KFtkYXRhLWxhYmVsPVwiXCJdKTo6YmVmb3JlLFxuLnFsLXNub3cgLnFsLXBpY2tlci5xbC1mb250IC5xbC1waWNrZXItaXRlbVtkYXRhLWxhYmVsXTpub3QoW2RhdGEtbGFiZWw9XCJcIl0pOjpiZWZvcmUsIC5xbC1zbm93IC5xbC1waWNrZXIucWwtc2l6ZSAucWwtcGlja2VyLWxhYmVsW2RhdGEtbGFiZWxdOm5vdChbZGF0YS1sYWJlbD1cIlwiXSk6OmJlZm9yZSxcbi5xbC1zbm93IC5xbC1waWNrZXIucWwtc2l6ZSAucWwtcGlja2VyLWl0ZW1bZGF0YS1sYWJlbF06bm90KFtkYXRhLWxhYmVsPVwiXCJdKTo6YmVmb3JlLFxuLnFsLWJ1YmJsZSAucWwtcGlja2VyLnFsLWhlYWRlciAucWwtcGlja2VyLWxhYmVsW2RhdGEtbGFiZWxdOm5vdChbZGF0YS1sYWJlbD1cIlwiXSk6OmJlZm9yZSxcbi5xbC1idWJibGUgLnFsLXBpY2tlci5xbC1oZWFkZXIgLnFsLXBpY2tlci1pdGVtW2RhdGEtbGFiZWxdOm5vdChbZGF0YS1sYWJlbD1cIlwiXSk6OmJlZm9yZSxcbi5xbC1idWJibGUgLnFsLXBpY2tlci5xbC1mb250IC5xbC1waWNrZXItbGFiZWxbZGF0YS1sYWJlbF06bm90KFtkYXRhLWxhYmVsPVwiXCJdKTo6YmVmb3JlLFxuLnFsLWJ1YmJsZSAucWwtcGlja2VyLnFsLWZvbnQgLnFsLXBpY2tlci1pdGVtW2RhdGEtbGFiZWxdOm5vdChbZGF0YS1sYWJlbD1cIlwiXSk6OmJlZm9yZSxcbi5xbC1idWJibGUgLnFsLXBpY2tlci5xbC1zaXplIC5xbC1waWNrZXItbGFiZWxbZGF0YS1sYWJlbF06bm90KFtkYXRhLWxhYmVsPVwiXCJdKTo6YmVmb3JlLFxuLnFsLWJ1YmJsZSAucWwtcGlja2VyLnFsLXNpemUgLnFsLXBpY2tlci1pdGVtW2RhdGEtbGFiZWxdOm5vdChbZGF0YS1sYWJlbD1cIlwiXSk6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IGF0dHIoZGF0YS1sYWJlbCk7XG59XG4ucWwtc25vdyAucWwtcGlja2VyLnFsLWhlYWRlcixcbi5xbC1idWJibGUgLnFsLXBpY2tlci5xbC1oZWFkZXIge1xuICB3aWR0aDogNi4xMjVyZW07XG59XG4ucWwtc25vdyAucWwtcGlja2VyLnFsLWhlYWRlciAucWwtcGlja2VyLWxhYmVsOjpiZWZvcmUsXG4ucWwtc25vdyAucWwtcGlja2VyLnFsLWhlYWRlciAucWwtcGlja2VyLWl0ZW06OmJlZm9yZSxcbi5xbC1idWJibGUgLnFsLXBpY2tlci5xbC1oZWFkZXIgLnFsLXBpY2tlci1sYWJlbDo6YmVmb3JlLFxuLnFsLWJ1YmJsZSAucWwtcGlja2VyLnFsLWhlYWRlciAucWwtcGlja2VyLWl0ZW06OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiTm9ybWFsXCI7XG59XG4ucWwtc25vdyAucWwtcGlja2VyLnFsLWhlYWRlciAucWwtcGlja2VyLWxhYmVsW2RhdGEtdmFsdWU9XCIxXCJdOjpiZWZvcmUsXG4ucWwtc25vdyAucWwtcGlja2VyLnFsLWhlYWRlciAucWwtcGlja2VyLWl0ZW1bZGF0YS12YWx1ZT1cIjFcIl06OmJlZm9yZSxcbi5xbC1idWJibGUgLnFsLXBpY2tlci5xbC1oZWFkZXIgLnFsLXBpY2tlci1sYWJlbFtkYXRhLXZhbHVlPVwiMVwiXTo6YmVmb3JlLFxuLnFsLWJ1YmJsZSAucWwtcGlja2VyLnFsLWhlYWRlciAucWwtcGlja2VyLWl0ZW1bZGF0YS12YWx1ZT1cIjFcIl06OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiSGVhZGluZyAxXCI7XG59XG4ucWwtc25vdyAucWwtcGlja2VyLnFsLWhlYWRlciAucWwtcGlja2VyLWxhYmVsW2RhdGEtdmFsdWU9XCIyXCJdOjpiZWZvcmUsXG4ucWwtc25vdyAucWwtcGlja2VyLnFsLWhlYWRlciAucWwtcGlja2VyLWl0ZW1bZGF0YS12YWx1ZT1cIjJcIl06OmJlZm9yZSxcbi5xbC1idWJibGUgLnFsLXBpY2tlci5xbC1oZWFkZXIgLnFsLXBpY2tlci1sYWJlbFtkYXRhLXZhbHVlPVwiMlwiXTo6YmVmb3JlLFxuLnFsLWJ1YmJsZSAucWwtcGlja2VyLnFsLWhlYWRlciAucWwtcGlja2VyLWl0ZW1bZGF0YS12YWx1ZT1cIjJcIl06OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiSGVhZGluZyAyXCI7XG59XG4ucWwtc25vdyAucWwtcGlja2VyLnFsLWhlYWRlciAucWwtcGlja2VyLWxhYmVsW2RhdGEtdmFsdWU9XCIzXCJdOjpiZWZvcmUsXG4ucWwtc25vdyAucWwtcGlja2VyLnFsLWhlYWRlciAucWwtcGlja2VyLWl0ZW1bZGF0YS12YWx1ZT1cIjNcIl06OmJlZm9yZSxcbi5xbC1idWJibGUgLnFsLXBpY2tlci5xbC1oZWFkZXIgLnFsLXBpY2tlci1sYWJlbFtkYXRhLXZhbHVlPVwiM1wiXTo6YmVmb3JlLFxuLnFsLWJ1YmJsZSAucWwtcGlja2VyLnFsLWhlYWRlciAucWwtcGlja2VyLWl0ZW1bZGF0YS12YWx1ZT1cIjNcIl06OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiSGVhZGluZyAzXCI7XG59XG4ucWwtc25vdyAucWwtcGlja2VyLnFsLWhlYWRlciAucWwtcGlja2VyLWxhYmVsW2RhdGEtdmFsdWU9XCI0XCJdOjpiZWZvcmUsXG4ucWwtc25vdyAucWwtcGlja2VyLnFsLWhlYWRlciAucWwtcGlja2VyLWl0ZW1bZGF0YS12YWx1ZT1cIjRcIl06OmJlZm9yZSxcbi5xbC1idWJibGUgLnFsLXBpY2tlci5xbC1oZWFkZXIgLnFsLXBpY2tlci1sYWJlbFtkYXRhLXZhbHVlPVwiNFwiXTo6YmVmb3JlLFxuLnFsLWJ1YmJsZSAucWwtcGlja2VyLnFsLWhlYWRlciAucWwtcGlja2VyLWl0ZW1bZGF0YS12YWx1ZT1cIjRcIl06OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiSGVhZGluZyA0XCI7XG59XG4ucWwtc25vdyAucWwtcGlja2VyLnFsLWhlYWRlciAucWwtcGlja2VyLWxhYmVsW2RhdGEtdmFsdWU9XCI1XCJdOjpiZWZvcmUsXG4ucWwtc25vdyAucWwtcGlja2VyLnFsLWhlYWRlciAucWwtcGlja2VyLWl0ZW1bZGF0YS12YWx1ZT1cIjVcIl06OmJlZm9yZSxcbi5xbC1idWJibGUgLnFsLXBpY2tlci5xbC1oZWFkZXIgLnFsLXBpY2tlci1sYWJlbFtkYXRhLXZhbHVlPVwiNVwiXTo6YmVmb3JlLFxuLnFsLWJ1YmJsZSAucWwtcGlja2VyLnFsLWhlYWRlciAucWwtcGlja2VyLWl0ZW1bZGF0YS12YWx1ZT1cIjVcIl06OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiSGVhZGluZyA1XCI7XG59XG4ucWwtc25vdyAucWwtcGlja2VyLnFsLWhlYWRlciAucWwtcGlja2VyLWxhYmVsW2RhdGEtdmFsdWU9XCI2XCJdOjpiZWZvcmUsXG4ucWwtc25vdyAucWwtcGlja2VyLnFsLWhlYWRlciAucWwtcGlja2VyLWl0ZW1bZGF0YS12YWx1ZT1cIjZcIl06OmJlZm9yZSxcbi5xbC1idWJibGUgLnFsLXBpY2tlci5xbC1oZWFkZXIgLnFsLXBpY2tlci1sYWJlbFtkYXRhLXZhbHVlPVwiNlwiXTo6YmVmb3JlLFxuLnFsLWJ1YmJsZSAucWwtcGlja2VyLnFsLWhlYWRlciAucWwtcGlja2VyLWl0ZW1bZGF0YS12YWx1ZT1cIjZcIl06OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiSGVhZGluZyA2XCI7XG59XG4ucWwtc25vdyAucWwtcGlja2VyLnFsLWZvbnQsXG4ucWwtYnViYmxlIC5xbC1waWNrZXIucWwtZm9udCB7XG4gIHdpZHRoOiA2Ljc1cmVtO1xufVxuLnFsLXNub3cgLnFsLXBpY2tlci5xbC1mb250IC5xbC1waWNrZXItbGFiZWw6OmJlZm9yZSxcbi5xbC1zbm93IC5xbC1waWNrZXIucWwtZm9udCAucWwtcGlja2VyLWl0ZW06OmJlZm9yZSxcbi5xbC1idWJibGUgLnFsLXBpY2tlci5xbC1mb250IC5xbC1waWNrZXItbGFiZWw6OmJlZm9yZSxcbi5xbC1idWJibGUgLnFsLXBpY2tlci5xbC1mb250IC5xbC1waWNrZXItaXRlbTo6YmVmb3JlIHtcbiAgY29udGVudDogXCJTYW5zIFNlcmlmXCI7XG59XG4ucWwtc25vdyAucWwtcGlja2VyLnFsLWZvbnQgLnFsLXBpY2tlci1sYWJlbFtkYXRhLXZhbHVlPXNlcmlmXTo6YmVmb3JlLFxuLnFsLXNub3cgLnFsLXBpY2tlci5xbC1mb250IC5xbC1waWNrZXItaXRlbVtkYXRhLXZhbHVlPXNlcmlmXTo6YmVmb3JlLFxuLnFsLWJ1YmJsZSAucWwtcGlja2VyLnFsLWZvbnQgLnFsLXBpY2tlci1sYWJlbFtkYXRhLXZhbHVlPXNlcmlmXTo6YmVmb3JlLFxuLnFsLWJ1YmJsZSAucWwtcGlja2VyLnFsLWZvbnQgLnFsLXBpY2tlci1pdGVtW2RhdGEtdmFsdWU9c2VyaWZdOjpiZWZvcmUge1xuICBjb250ZW50OiBcIlNlcmlmXCI7XG59XG4ucWwtc25vdyAucWwtcGlja2VyLnFsLWZvbnQgLnFsLXBpY2tlci1sYWJlbFtkYXRhLXZhbHVlPW1vbm9zcGFjZV06OmJlZm9yZSxcbi5xbC1zbm93IC5xbC1waWNrZXIucWwtZm9udCAucWwtcGlja2VyLWl0ZW1bZGF0YS12YWx1ZT1tb25vc3BhY2VdOjpiZWZvcmUsXG4ucWwtYnViYmxlIC5xbC1waWNrZXIucWwtZm9udCAucWwtcGlja2VyLWxhYmVsW2RhdGEtdmFsdWU9bW9ub3NwYWNlXTo6YmVmb3JlLFxuLnFsLWJ1YmJsZSAucWwtcGlja2VyLnFsLWZvbnQgLnFsLXBpY2tlci1pdGVtW2RhdGEtdmFsdWU9bW9ub3NwYWNlXTo6YmVmb3JlIHtcbiAgY29udGVudDogXCJNb25vc3BhY2VcIjtcbn1cbi5xbC1zbm93IC5xbC1waWNrZXIucWwtc2l6ZSxcbi5xbC1idWJibGUgLnFsLXBpY2tlci5xbC1zaXplIHtcbiAgd2lkdGg6IDYuMTI1cmVtO1xufVxuLnFsLXNub3cgLnFsLXBpY2tlci5xbC1zaXplIC5xbC1waWNrZXItbGFiZWw6OmJlZm9yZSxcbi5xbC1zbm93IC5xbC1waWNrZXIucWwtc2l6ZSAucWwtcGlja2VyLWl0ZW06OmJlZm9yZSxcbi5xbC1idWJibGUgLnFsLXBpY2tlci5xbC1zaXplIC5xbC1waWNrZXItbGFiZWw6OmJlZm9yZSxcbi5xbC1idWJibGUgLnFsLXBpY2tlci5xbC1zaXplIC5xbC1waWNrZXItaXRlbTo6YmVmb3JlIHtcbiAgY29udGVudDogXCJOb3JtYWxcIjtcbn1cbi5xbC1zbm93IC5xbC1waWNrZXIucWwtc2l6ZSAucWwtcGlja2VyLWxhYmVsW2RhdGEtdmFsdWU9c21hbGxdOjpiZWZvcmUsXG4ucWwtc25vdyAucWwtcGlja2VyLnFsLXNpemUgLnFsLXBpY2tlci1pdGVtW2RhdGEtdmFsdWU9c21hbGxdOjpiZWZvcmUsXG4ucWwtYnViYmxlIC5xbC1waWNrZXIucWwtc2l6ZSAucWwtcGlja2VyLWxhYmVsW2RhdGEtdmFsdWU9c21hbGxdOjpiZWZvcmUsXG4ucWwtYnViYmxlIC5xbC1waWNrZXIucWwtc2l6ZSAucWwtcGlja2VyLWl0ZW1bZGF0YS12YWx1ZT1zbWFsbF06OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiU21hbGxcIjtcbn1cbi5xbC1zbm93IC5xbC1waWNrZXIucWwtc2l6ZSAucWwtcGlja2VyLWxhYmVsW2RhdGEtdmFsdWU9bGFyZ2VdOjpiZWZvcmUsXG4ucWwtc25vdyAucWwtcGlja2VyLnFsLXNpemUgLnFsLXBpY2tlci1pdGVtW2RhdGEtdmFsdWU9bGFyZ2VdOjpiZWZvcmUsXG4ucWwtYnViYmxlIC5xbC1waWNrZXIucWwtc2l6ZSAucWwtcGlja2VyLWxhYmVsW2RhdGEtdmFsdWU9bGFyZ2VdOjpiZWZvcmUsXG4ucWwtYnViYmxlIC5xbC1waWNrZXIucWwtc2l6ZSAucWwtcGlja2VyLWl0ZW1bZGF0YS12YWx1ZT1sYXJnZV06OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiTGFyZ2VcIjtcbn1cbi5xbC1zbm93IC5xbC1waWNrZXIucWwtc2l6ZSAucWwtcGlja2VyLWxhYmVsW2RhdGEtdmFsdWU9aHVnZV06OmJlZm9yZSxcbi5xbC1zbm93IC5xbC1waWNrZXIucWwtc2l6ZSAucWwtcGlja2VyLWl0ZW1bZGF0YS12YWx1ZT1odWdlXTo6YmVmb3JlLFxuLnFsLWJ1YmJsZSAucWwtcGlja2VyLnFsLXNpemUgLnFsLXBpY2tlci1sYWJlbFtkYXRhLXZhbHVlPWh1Z2VdOjpiZWZvcmUsXG4ucWwtYnViYmxlIC5xbC1waWNrZXIucWwtc2l6ZSAucWwtcGlja2VyLWl0ZW1bZGF0YS12YWx1ZT1odWdlXTo6YmVmb3JlIHtcbiAgY29udGVudDogXCJIdWdlXCI7XG59XG4ucWwtc25vdyAucWwtcGlja2VyOm5vdCgucWwtY29sb3ItcGlja2VyKTpub3QoLnFsLWljb24tcGlja2VyKSBzdmcsXG4ucWwtYnViYmxlIC5xbC1waWNrZXI6bm90KC5xbC1jb2xvci1waWNrZXIpOm5vdCgucWwtaWNvbi1waWNrZXIpIHN2ZyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIHJpZ2h0OiAwO1xuICBtYXJnaW4tdG9wOiAtMC41NjI1cmVtO1xuICB3aWR0aDogMS4xMjVyZW07XG59XG5bZGlyPXJ0bF0gLnFsLXNub3cgLnFsLXBpY2tlcjpub3QoLnFsLWNvbG9yLXBpY2tlcik6bm90KC5xbC1pY29uLXBpY2tlcikgc3ZnLFxuW2Rpcj1ydGxdIC5xbC1idWJibGUgLnFsLXBpY2tlcjpub3QoLnFsLWNvbG9yLXBpY2tlcik6bm90KC5xbC1pY29uLXBpY2tlcikgc3ZnIHtcbiAgcmlnaHQ6IGF1dG87XG4gIGxlZnQ6IDA7XG59XG4ucWwtc25vdyAucWwtcGlja2VyLWxhYmVsLFxuLnFsLWJ1YmJsZSAucWwtcGlja2VyLWxhYmVsIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHBhZGRpbmctcmlnaHQ6IDAuMTI1cmVtO1xuICBwYWRkaW5nLWxlZnQ6IDAuNXJlbTtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJTtcbiAgYm9yZGVyOiAwLjA2MjVyZW0gc29saWQgdHJhbnNwYXJlbnQ7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbi5xbC1zbm93IC5xbC1waWNrZXItbGFiZWw6OmJlZm9yZSxcbi5xbC1idWJibGUgLnFsLXBpY2tlci1sYWJlbDo6YmVmb3JlIHtcbiAgbGluZS1oZWlnaHQ6IDEuMzc1cmVtO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG4ucWwtc25vdyAucWwtcGlja2VyLW9wdGlvbnMsXG4ucWwtYnViYmxlIC5xbC1waWNrZXItb3B0aW9ucyB7XG4gIHBhZGRpbmc6IDAuMjVyZW0gMC41cmVtO1xuICBtaW4td2lkdGg6IDEwMCU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgZGlzcGxheTogbm9uZTtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbn1cbi5xbC1zbm93IC5xbC1waWNrZXItb3B0aW9ucyAucWwtcGlja2VyLWl0ZW0sXG4ucWwtYnViYmxlIC5xbC1waWNrZXItb3B0aW9ucyAucWwtcGlja2VyLWl0ZW0ge1xuICBwYWRkaW5nLWJvdHRvbTogMC4zMTI1cmVtO1xuICBwYWRkaW5nLXRvcDogMC4zMTI1cmVtO1xuICBkaXNwbGF5OiBibG9jaztcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuLnFsLXNub3cgLnFsLWNvbG9yLXBpY2tlcixcbi5xbC1zbm93IC5xbC1pY29uLXBpY2tlcixcbi5xbC1idWJibGUgLnFsLWNvbG9yLXBpY2tlcixcbi5xbC1idWJibGUgLnFsLWljb24tcGlja2VyIHtcbiAgd2lkdGg6IDEuNzVyZW07XG59XG4ucWwtc25vdyAucWwtY29sb3ItcGlja2VyIC5xbC1waWNrZXItbGFiZWwsXG4ucWwtc25vdyAucWwtaWNvbi1waWNrZXIgLnFsLXBpY2tlci1sYWJlbCxcbi5xbC1idWJibGUgLnFsLWNvbG9yLXBpY2tlciAucWwtcGlja2VyLWxhYmVsLFxuLnFsLWJ1YmJsZSAucWwtaWNvbi1waWNrZXIgLnFsLXBpY2tlci1sYWJlbCB7XG4gIHBhZGRpbmc6IDAuMTI1cmVtIDAuMjVyZW07XG59XG4ucWwtc25vdyAucWwtaWNvbi1waWNrZXIgLnFsLXBpY2tlci1vcHRpb25zLFxuLnFsLWJ1YmJsZSAucWwtaWNvbi1waWNrZXIgLnFsLXBpY2tlci1vcHRpb25zIHtcbiAgcGFkZGluZzogMC4yNXJlbSAwO1xufVxuLnFsLXNub3cgLnFsLWljb24tcGlja2VyIC5xbC1waWNrZXItaXRlbSxcbi5xbC1idWJibGUgLnFsLWljb24tcGlja2VyIC5xbC1waWNrZXItaXRlbSB7XG4gIHBhZGRpbmc6IDAuMTI1cmVtIDAuMjVyZW07XG4gIHdpZHRoOiAxLjVyZW07XG4gIGhlaWdodDogMS41cmVtO1xufVxuLnFsLXNub3cgLnFsLWNvbG9yLXBpY2tlciAucWwtcGlja2VyLW9wdGlvbnMsXG4ucWwtYnViYmxlIC5xbC1jb2xvci1waWNrZXIgLnFsLXBpY2tlci1vcHRpb25zIHtcbiAgcGFkZGluZzogMC4xODc1cmVtIDAuMzEyNXJlbTtcbiAgd2lkdGg6IDkuNXJlbTtcbn1cbi5xbC1zbm93IC5xbC1jb2xvci1waWNrZXIgLnFsLXBpY2tlci1pdGVtLFxuLnFsLWJ1YmJsZSAucWwtY29sb3ItcGlja2VyIC5xbC1waWNrZXItaXRlbSB7XG4gIGZsb2F0OiBsZWZ0O1xuICBtYXJnaW46IDAuMTI1cmVtO1xuICBwYWRkaW5nOiAwO1xuICB3aWR0aDogMXJlbTtcbiAgaGVpZ2h0OiAxcmVtO1xuICBib3JkZXI6IDAuMDYyNXJlbSBzb2xpZCB0cmFuc3BhcmVudDtcbn1cbltkaXI9cnRsXSAucWwtc25vdyAucWwtY29sb3ItcGlja2VyIC5xbC1waWNrZXItaXRlbSxcbltkaXI9cnRsXSAucWwtYnViYmxlIC5xbC1jb2xvci1waWNrZXIgLnFsLXBpY2tlci1pdGVtIHtcbiAgZmxvYXQ6IHJpZ2h0O1xufVxuLnFsLXNub3cgLnFsLWNvbG9yLXBpY2tlci5xbC1iYWNrZ3JvdW5kIC5xbC1waWNrZXItaXRlbSxcbi5xbC1idWJibGUgLnFsLWNvbG9yLXBpY2tlci5xbC1iYWNrZ3JvdW5kIC5xbC1waWNrZXItaXRlbSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG59XG4ucWwtc25vdyAucWwtY29sb3ItcGlja2VyLnFsLWNvbG9yIC5xbC1waWNrZXItaXRlbSxcbi5xbC1idWJibGUgLnFsLWNvbG9yLXBpY2tlci5xbC1jb2xvciAucWwtcGlja2VyLWl0ZW0ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwO1xufVxuW2Rpcj1ydGxdIC5xbC1zbm93IC5xbC1pdGFsaWMgc3ZnLFxuW2Rpcj1ydGxdIC5xbC1zbm93IC5xbC1saXN0IHN2ZyxcbltkaXI9cnRsXSAucWwtc25vdyAucWwtaW5kZW50IHN2ZyxcbltkaXI9cnRsXSAucWwtc25vdyAucWwtZGlyZWN0aW9uIHN2ZyxcbltkaXI9cnRsXSAucWwtc25vdyAucWwtYWxpZ24gc3ZnLFxuW2Rpcj1ydGxdIC5xbC1zbm93IC5xbC1saW5rIHN2ZyxcbltkaXI9cnRsXSAucWwtc25vdyAucWwtaW1hZ2Ugc3ZnLFxuW2Rpcj1ydGxdIC5xbC1zbm93IC5xbC1jbGVhbiBzdmcsXG5bZGlyPXJ0bF0gLnFsLWJ1YmJsZSAucWwtaXRhbGljIHN2ZyxcbltkaXI9cnRsXSAucWwtYnViYmxlIC5xbC1saXN0IHN2ZyxcbltkaXI9cnRsXSAucWwtYnViYmxlIC5xbC1pbmRlbnQgc3ZnLFxuW2Rpcj1ydGxdIC5xbC1idWJibGUgLnFsLWRpcmVjdGlvbiBzdmcsXG5bZGlyPXJ0bF0gLnFsLWJ1YmJsZSAucWwtYWxpZ24gc3ZnLFxuW2Rpcj1ydGxdIC5xbC1idWJibGUgLnFsLWxpbmsgc3ZnLFxuW2Rpcj1ydGxdIC5xbC1idWJibGUgLnFsLWltYWdlIHN2ZyxcbltkaXI9cnRsXSAucWwtYnViYmxlIC5xbC1jbGVhbiBzdmcge1xuICB0cmFuc2Zvcm06IHNjYWxlWCgtMSk7XG59XG5cbi5xbC1zbm93LnFsLXRvb2xiYXIsXG4ucWwtc25vdyAucWwtdG9vbGJhciB7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIGJhY2tncm91bmQtY2xpcDogcGFkZGluZy1ib3g7XG59XG4ucWwtc25vdyAucWwtZWRpdG9yIHtcbiAgbWluLWhlaWdodDogMTVyZW07XG4gIGJhY2tncm91bmQ6ICNmZmY7XG59XG4ucWwtc25vdyAucWwtcGlja2VyLnFsLWV4cGFuZGVkIC5xbC1waWNrZXItbGFiZWwge1xuICB6LWluZGV4OiAyO1xuICBjb2xvcjogI2NjYyAhaW1wb3J0YW50O1xufVxuLnFsLXNub3cgLnFsLXBpY2tlci5xbC1leHBhbmRlZCAucWwtcGlja2VyLWxhYmVsIC5xbC1maWxsIHtcbiAgZmlsbDogI2NjYyAhaW1wb3J0YW50O1xufVxuLnFsLXNub3cgLnFsLXBpY2tlci5xbC1leHBhbmRlZCAucWwtcGlja2VyLWxhYmVsIC5xbC1zdHJva2Uge1xuICBzdHJva2U6ICNjY2MgIWltcG9ydGFudDtcbn1cbi5xbC1zbm93IC5xbC1zdHJva2Uge1xuICBmaWxsOiBub25lO1xuICBzdHJva2Utd2lkdGg6IDI7XG4gIHN0cm9rZS1saW5lam9pbjogcm91bmQ7XG4gIHN0cm9rZS1saW5lY2FwOiByb3VuZDtcbn1cbi5xbC1zbm93IC5xbC1zdHJva2UtbWl0ZXIge1xuICBmaWxsOiBub25lO1xuICBzdHJva2Utd2lkdGg6IDI7XG4gIHN0cm9rZS1taXRlcmxpbWl0OiAxMDtcbn1cbi5xbC1zbm93IC5xbC1waWNrZXItbGFiZWwge1xuICBib3JkZXI6IDAuMDYyNXJlbSBzb2xpZCB0cmFuc3BhcmVudDtcbn1cbi5xbC1zbm93IC5xbC1waWNrZXItb3B0aW9ucyB7XG4gIGJvcmRlcjogMC4wNjI1cmVtIHNvbGlkIHRyYW5zcGFyZW50O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmctYm94O1xufVxuLnFsLXNub3cgLnFsLWNvbG9yLXBpY2tlciAucWwtcGlja2VyLWl0ZW0ucWwtc2VsZWN0ZWQsXG4ucWwtc25vdyAucWwtY29sb3ItcGlja2VyIC5xbC1waWNrZXItaXRlbTpob3ZlciB7XG4gIGJvcmRlci1jb2xvcjogIzAwMDtcbn1cbi5xbC1zbm93IC5xbC10b29sdGlwIHtcbiAgZGlzcGxheTogZmxleDtcbiAgcGFkZGluZzogMC4zMTI1cmVtIDAuNzVyZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY2xpcDogcGFkZGluZy1ib3g7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG59XG4ucWwtc25vdyAucWwtdG9vbHRpcDo6YmVmb3JlIHtcbiAgY29udGVudDogXCJWaXNpdCBVUkw6XCI7XG4gIG1hcmdpbi1yaWdodDogMC41cmVtO1xuICBsaW5lLWhlaWdodDogMS42MjVyZW07XG59XG5bZGlyPXJ0bF0gLnFsLXNub3cgLnFsLXRvb2x0aXA6OmJlZm9yZSB7XG4gIG1hcmdpbi1yaWdodDogMDtcbiAgbWFyZ2luLWxlZnQ6IDAuNXJlbTtcbn1cbi5xbC1zbm93IC5xbC10b29sdGlwIGlucHV0W3R5cGU9dGV4dF0ge1xuICBkaXNwbGF5OiBub25lO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDAuMTg3NXJlbSAwLjMxMjVyZW07XG4gIHdpZHRoOiAxMC42MjVyZW07XG4gIGhlaWdodDogMS42MjVyZW07XG4gIGZvbnQtc2l6ZTogMC44MTI1cmVtO1xufVxuLnFsLXNub3cgLnFsLXRvb2x0aXAgYS5xbC1wcmV2aWV3IHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICBtYXgtd2lkdGg6IDEyLjVyZW07XG4gIG92ZXJmbG93LXg6IGhpZGRlbjtcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG59XG4ucWwtc25vdyAucWwtdG9vbHRpcCBhLnFsLWFjdGlvbjo6YWZ0ZXIge1xuICBjb250ZW50OiBcIkVkaXRcIjtcbiAgbWFyZ2luLWxlZnQ6IDFyZW07XG4gIHBhZGRpbmctcmlnaHQ6IDAuNXJlbTtcbiAgYm9yZGVyLXJpZ2h0OiAwLjA2MjVyZW0gc29saWQgI2NjYztcbn1cbltkaXI9cnRsXSAucWwtc25vdyAucWwtdG9vbHRpcCBhLnFsLWFjdGlvbjo6YWZ0ZXIge1xuICBtYXJnaW4tbGVmdDogMDtcbiAgbWFyZ2luLXJpZ2h0OiAxcmVtO1xuICBwYWRkaW5nLWxlZnQ6IDAuNXJlbTtcbiAgcGFkZGluZy1yaWdodDogMDtcbiAgYm9yZGVyLXJpZ2h0OiAwO1xuICBib3JkZXItbGVmdDogMC4wNjI1cmVtIHNvbGlkICNjY2M7XG59XG4ucWwtc25vdyAucWwtdG9vbHRpcCBhLnFsLXJlbW92ZTo6YmVmb3JlIHtcbiAgY29udGVudDogXCJSZW1vdmVcIjtcbiAgbWFyZ2luLWxlZnQ6IDAuNXJlbTtcbn1cbltkaXI9cnRsXSAucWwtc25vdyAucWwtdG9vbHRpcCBhLnFsLXJlbW92ZTo6YmVmb3JlIHtcbiAgbWFyZ2luLXJpZ2h0OiAwLjVyZW07XG4gIG1hcmdpbi1sZWZ0OiAwO1xufVxuLnFsLXNub3cgLnFsLXRvb2x0aXAgYSB7XG4gIGxpbmUtaGVpZ2h0OiAxLjYyNXJlbTtcbn1cbi5xbC1zbm93IC5xbC10b29sdGlwLnFsLWVkaXRpbmcgYS5xbC1wcmV2aWV3LCAucWwtc25vdyAucWwtdG9vbHRpcC5xbC1lZGl0aW5nIGEucWwtcmVtb3ZlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbi5xbC1zbm93IC5xbC10b29sdGlwLnFsLWVkaXRpbmcgaW5wdXRbdHlwZT10ZXh0XSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cbi5xbC1zbm93IC5xbC10b29sdGlwLnFsLWVkaXRpbmcgYS5xbC1hY3Rpb246OmFmdGVyIHtcbiAgY29udGVudDogXCJTYXZlXCI7XG4gIGJvcmRlci1yaWdodDogMDtcbiAgcGFkZGluZy1yaWdodDogMDtcbn1cbltkaXI9cnRsXSAucWwtc25vdyAucWwtdG9vbHRpcC5xbC1lZGl0aW5nIGEucWwtYWN0aW9uOjphZnRlciB7XG4gIGJvcmRlci1sZWZ0OiAwO1xuICBwYWRkaW5nLWxlZnQ6IDA7XG59XG4ucWwtc25vdyAucWwtdG9vbHRpcFtkYXRhLW1vZGU9bGlua106OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiRW50ZXIgbGluazpcIjtcbn1cbi5xbC1zbm93IC5xbC10b29sdGlwW2RhdGEtbW9kZT1mb3JtdWxhXTo6YmVmb3JlIHtcbiAgY29udGVudDogXCJFbnRlciBmb3JtdWxhOlwiO1xufVxuLnFsLXNub3cgLnFsLXRvb2x0aXBbZGF0YS1tb2RlPXZpZGVvXTo6YmVmb3JlIHtcbiAgY29udGVudDogXCJFbnRlciB2aWRlbzpcIjtcbn1cblxuLnFsLWJ1YmJsZS5xbC10b29sYmFyIGJ1dHRvbjpob3Zlcixcbi5xbC1idWJibGUucWwtdG9vbGJhciBidXR0b246Zm9jdXMsXG4ucWwtYnViYmxlLnFsLXRvb2xiYXIgYnV0dG9uLnFsLWFjdGl2ZSxcbi5xbC1idWJibGUucWwtdG9vbGJhciAucWwtcGlja2VyLWxhYmVsOmhvdmVyLFxuLnFsLWJ1YmJsZS5xbC10b29sYmFyIC5xbC1waWNrZXItbGFiZWwucWwtYWN0aXZlLFxuLnFsLWJ1YmJsZS5xbC10b29sYmFyIC5xbC1waWNrZXItaXRlbTpob3Zlcixcbi5xbC1idWJibGUucWwtdG9vbGJhciAucWwtcGlja2VyLWl0ZW0ucWwtc2VsZWN0ZWQsXG4ucWwtYnViYmxlIC5xbC10b29sYmFyIGJ1dHRvbjpob3Zlcixcbi5xbC1idWJibGUgLnFsLXRvb2xiYXIgYnV0dG9uOmZvY3VzLFxuLnFsLWJ1YmJsZSAucWwtdG9vbGJhciBidXR0b24ucWwtYWN0aXZlLFxuLnFsLWJ1YmJsZSAucWwtdG9vbGJhciAucWwtcGlja2VyLWxhYmVsOmhvdmVyLFxuLnFsLWJ1YmJsZSAucWwtdG9vbGJhciAucWwtcGlja2VyLWxhYmVsLnFsLWFjdGl2ZSxcbi5xbC1idWJibGUgLnFsLXRvb2xiYXIgLnFsLXBpY2tlci1pdGVtOmhvdmVyLFxuLnFsLWJ1YmJsZSAucWwtdG9vbGJhciAucWwtcGlja2VyLWl0ZW0ucWwtc2VsZWN0ZWQge1xuICBjb2xvcjogI2ZmZjtcbn1cbi5xbC1idWJibGUucWwtdG9vbGJhciBidXR0b246aG92ZXIgLnFsLXN0cm9rZSxcbi5xbC1idWJibGUucWwtdG9vbGJhciBidXR0b246Zm9jdXMgLnFsLXN0cm9rZSxcbi5xbC1idWJibGUucWwtdG9vbGJhciBidXR0b24ucWwtYWN0aXZlIC5xbC1zdHJva2UsXG4ucWwtYnViYmxlLnFsLXRvb2xiYXIgLnFsLXBpY2tlci1sYWJlbDpob3ZlciAucWwtc3Ryb2tlLFxuLnFsLWJ1YmJsZS5xbC10b29sYmFyIC5xbC1waWNrZXItbGFiZWwucWwtYWN0aXZlIC5xbC1zdHJva2UsXG4ucWwtYnViYmxlLnFsLXRvb2xiYXIgLnFsLXBpY2tlci1pdGVtOmhvdmVyIC5xbC1zdHJva2UsXG4ucWwtYnViYmxlLnFsLXRvb2xiYXIgLnFsLXBpY2tlci1pdGVtLnFsLXNlbGVjdGVkIC5xbC1zdHJva2UsXG4ucWwtYnViYmxlLnFsLXRvb2xiYXIgYnV0dG9uOmhvdmVyIC5xbC1zdHJva2UtbWl0ZXIsXG4ucWwtYnViYmxlLnFsLXRvb2xiYXIgYnV0dG9uOmZvY3VzIC5xbC1zdHJva2UtbWl0ZXIsXG4ucWwtYnViYmxlLnFsLXRvb2xiYXIgYnV0dG9uLnFsLWFjdGl2ZSAucWwtc3Ryb2tlLW1pdGVyLFxuLnFsLWJ1YmJsZS5xbC10b29sYmFyIC5xbC1waWNrZXItbGFiZWw6aG92ZXIgLnFsLXN0cm9rZS1taXRlcixcbi5xbC1idWJibGUucWwtdG9vbGJhciAucWwtcGlja2VyLWxhYmVsLnFsLWFjdGl2ZSAucWwtc3Ryb2tlLW1pdGVyLFxuLnFsLWJ1YmJsZS5xbC10b29sYmFyIC5xbC1waWNrZXItaXRlbTpob3ZlciAucWwtc3Ryb2tlLW1pdGVyLFxuLnFsLWJ1YmJsZS5xbC10b29sYmFyIC5xbC1waWNrZXItaXRlbS5xbC1zZWxlY3RlZCAucWwtc3Ryb2tlLW1pdGVyLFxuLnFsLWJ1YmJsZSAucWwtdG9vbGJhciBidXR0b246aG92ZXIgLnFsLXN0cm9rZSxcbi5xbC1idWJibGUgLnFsLXRvb2xiYXIgYnV0dG9uOmZvY3VzIC5xbC1zdHJva2UsXG4ucWwtYnViYmxlIC5xbC10b29sYmFyIGJ1dHRvbi5xbC1hY3RpdmUgLnFsLXN0cm9rZSxcbi5xbC1idWJibGUgLnFsLXRvb2xiYXIgLnFsLXBpY2tlci1sYWJlbDpob3ZlciAucWwtc3Ryb2tlLFxuLnFsLWJ1YmJsZSAucWwtdG9vbGJhciAucWwtcGlja2VyLWxhYmVsLnFsLWFjdGl2ZSAucWwtc3Ryb2tlLFxuLnFsLWJ1YmJsZSAucWwtdG9vbGJhciAucWwtcGlja2VyLWl0ZW06aG92ZXIgLnFsLXN0cm9rZSxcbi5xbC1idWJibGUgLnFsLXRvb2xiYXIgLnFsLXBpY2tlci1pdGVtLnFsLXNlbGVjdGVkIC5xbC1zdHJva2UsXG4ucWwtYnViYmxlIC5xbC10b29sYmFyIGJ1dHRvbjpob3ZlciAucWwtc3Ryb2tlLW1pdGVyLFxuLnFsLWJ1YmJsZSAucWwtdG9vbGJhciBidXR0b246Zm9jdXMgLnFsLXN0cm9rZS1taXRlcixcbi5xbC1idWJibGUgLnFsLXRvb2xiYXIgYnV0dG9uLnFsLWFjdGl2ZSAucWwtc3Ryb2tlLW1pdGVyLFxuLnFsLWJ1YmJsZSAucWwtdG9vbGJhciAucWwtcGlja2VyLWxhYmVsOmhvdmVyIC5xbC1zdHJva2UtbWl0ZXIsXG4ucWwtYnViYmxlIC5xbC10b29sYmFyIC5xbC1waWNrZXItbGFiZWwucWwtYWN0aXZlIC5xbC1zdHJva2UtbWl0ZXIsXG4ucWwtYnViYmxlIC5xbC10b29sYmFyIC5xbC1waWNrZXItaXRlbTpob3ZlciAucWwtc3Ryb2tlLW1pdGVyLFxuLnFsLWJ1YmJsZSAucWwtdG9vbGJhciAucWwtcGlja2VyLWl0ZW0ucWwtc2VsZWN0ZWQgLnFsLXN0cm9rZS1taXRlciB7XG4gIHN0cm9rZTogI2ZmZjtcbn1cbi5xbC1idWJibGUucWwtdG9vbGJhciBidXR0b246aG92ZXIgLnFsLWZpbGwsXG4ucWwtYnViYmxlLnFsLXRvb2xiYXIgYnV0dG9uOmZvY3VzIC5xbC1maWxsLFxuLnFsLWJ1YmJsZS5xbC10b29sYmFyIGJ1dHRvbi5xbC1hY3RpdmUgLnFsLWZpbGwsXG4ucWwtYnViYmxlLnFsLXRvb2xiYXIgLnFsLXBpY2tlci1sYWJlbDpob3ZlciAucWwtZmlsbCxcbi5xbC1idWJibGUucWwtdG9vbGJhciAucWwtcGlja2VyLWxhYmVsLnFsLWFjdGl2ZSAucWwtZmlsbCxcbi5xbC1idWJibGUucWwtdG9vbGJhciAucWwtcGlja2VyLWl0ZW06aG92ZXIgLnFsLWZpbGwsXG4ucWwtYnViYmxlLnFsLXRvb2xiYXIgLnFsLXBpY2tlci1pdGVtLnFsLXNlbGVjdGVkIC5xbC1maWxsLFxuLnFsLWJ1YmJsZS5xbC10b29sYmFyIGJ1dHRvbjpob3ZlciAucWwtc3Ryb2tlLnFsLWZpbGwsXG4ucWwtYnViYmxlLnFsLXRvb2xiYXIgYnV0dG9uOmZvY3VzIC5xbC1zdHJva2UucWwtZmlsbCxcbi5xbC1idWJibGUucWwtdG9vbGJhciBidXR0b24ucWwtYWN0aXZlIC5xbC1zdHJva2UucWwtZmlsbCxcbi5xbC1idWJibGUucWwtdG9vbGJhciAucWwtcGlja2VyLWxhYmVsOmhvdmVyIC5xbC1zdHJva2UucWwtZmlsbCxcbi5xbC1idWJibGUucWwtdG9vbGJhciAucWwtcGlja2VyLWxhYmVsLnFsLWFjdGl2ZSAucWwtc3Ryb2tlLnFsLWZpbGwsXG4ucWwtYnViYmxlLnFsLXRvb2xiYXIgLnFsLXBpY2tlci1pdGVtOmhvdmVyIC5xbC1zdHJva2UucWwtZmlsbCxcbi5xbC1idWJibGUucWwtdG9vbGJhciAucWwtcGlja2VyLWl0ZW0ucWwtc2VsZWN0ZWQgLnFsLXN0cm9rZS5xbC1maWxsLFxuLnFsLWJ1YmJsZSAucWwtdG9vbGJhciBidXR0b246aG92ZXIgLnFsLWZpbGwsXG4ucWwtYnViYmxlIC5xbC10b29sYmFyIGJ1dHRvbjpmb2N1cyAucWwtZmlsbCxcbi5xbC1idWJibGUgLnFsLXRvb2xiYXIgYnV0dG9uLnFsLWFjdGl2ZSAucWwtZmlsbCxcbi5xbC1idWJibGUgLnFsLXRvb2xiYXIgLnFsLXBpY2tlci1sYWJlbDpob3ZlciAucWwtZmlsbCxcbi5xbC1idWJibGUgLnFsLXRvb2xiYXIgLnFsLXBpY2tlci1sYWJlbC5xbC1hY3RpdmUgLnFsLWZpbGwsXG4ucWwtYnViYmxlIC5xbC10b29sYmFyIC5xbC1waWNrZXItaXRlbTpob3ZlciAucWwtZmlsbCxcbi5xbC1idWJibGUgLnFsLXRvb2xiYXIgLnFsLXBpY2tlci1pdGVtLnFsLXNlbGVjdGVkIC5xbC1maWxsLFxuLnFsLWJ1YmJsZSAucWwtdG9vbGJhciBidXR0b246aG92ZXIgLnFsLXN0cm9rZS5xbC1maWxsLFxuLnFsLWJ1YmJsZSAucWwtdG9vbGJhciBidXR0b246Zm9jdXMgLnFsLXN0cm9rZS5xbC1maWxsLFxuLnFsLWJ1YmJsZSAucWwtdG9vbGJhciBidXR0b24ucWwtYWN0aXZlIC5xbC1zdHJva2UucWwtZmlsbCxcbi5xbC1idWJibGUgLnFsLXRvb2xiYXIgLnFsLXBpY2tlci1sYWJlbDpob3ZlciAucWwtc3Ryb2tlLnFsLWZpbGwsXG4ucWwtYnViYmxlIC5xbC10b29sYmFyIC5xbC1waWNrZXItbGFiZWwucWwtYWN0aXZlIC5xbC1zdHJva2UucWwtZmlsbCxcbi5xbC1idWJibGUgLnFsLXRvb2xiYXIgLnFsLXBpY2tlci1pdGVtOmhvdmVyIC5xbC1zdHJva2UucWwtZmlsbCxcbi5xbC1idWJibGUgLnFsLXRvb2xiYXIgLnFsLXBpY2tlci1pdGVtLnFsLXNlbGVjdGVkIC5xbC1zdHJva2UucWwtZmlsbCB7XG4gIGZpbGw6ICNmZmY7XG59XG5AbWVkaWEgKHBvaW50ZXI6IGNvYXJzZSkge1xuICAucWwtYnViYmxlLnFsLXRvb2xiYXIgYnV0dG9uOmhvdmVyOm5vdCgucWwtYWN0aXZlKSxcbiAgLnFsLWJ1YmJsZSAucWwtdG9vbGJhciBidXR0b246aG92ZXI6bm90KC5xbC1hY3RpdmUpIHtcbiAgICBjb2xvcjogI2NjYztcbiAgfVxuICAucWwtYnViYmxlLnFsLXRvb2xiYXIgYnV0dG9uOmhvdmVyOm5vdCgucWwtYWN0aXZlKSAucWwtZmlsbCxcbiAgLnFsLWJ1YmJsZS5xbC10b29sYmFyIGJ1dHRvbjpob3Zlcjpub3QoLnFsLWFjdGl2ZSkgLnFsLXN0cm9rZS5xbC1maWxsLFxuICAucWwtYnViYmxlIC5xbC10b29sYmFyIGJ1dHRvbjpob3Zlcjpub3QoLnFsLWFjdGl2ZSkgLnFsLWZpbGwsXG4gIC5xbC1idWJibGUgLnFsLXRvb2xiYXIgYnV0dG9uOmhvdmVyOm5vdCgucWwtYWN0aXZlKSAucWwtc3Ryb2tlLnFsLWZpbGwge1xuICAgIGZpbGw6ICNjY2M7XG4gIH1cbiAgLnFsLWJ1YmJsZS5xbC10b29sYmFyIGJ1dHRvbjpob3Zlcjpub3QoLnFsLWFjdGl2ZSkgLnFsLXN0cm9rZSxcbiAgLnFsLWJ1YmJsZS5xbC10b29sYmFyIGJ1dHRvbjpob3Zlcjpub3QoLnFsLWFjdGl2ZSkgLnFsLXN0cm9rZS1taXRlcixcbiAgLnFsLWJ1YmJsZSAucWwtdG9vbGJhciBidXR0b246aG92ZXI6bm90KC5xbC1hY3RpdmUpIC5xbC1zdHJva2UsXG4gIC5xbC1idWJibGUgLnFsLXRvb2xiYXIgYnV0dG9uOmhvdmVyOm5vdCgucWwtYWN0aXZlKSAucWwtc3Ryb2tlLW1pdGVyIHtcbiAgICBzdHJva2U6ICNjY2M7XG4gIH1cbn1cbi5xbC1idWJibGUgLnFsLXN0cm9rZSB7XG4gIGZpbGw6IG5vbmU7XG4gIHN0cm9rZTogI2NjYztcbiAgc3Ryb2tlLWxpbmVqb2luOiByb3VuZDtcbiAgc3Ryb2tlLWxpbmVjYXA6IHJvdW5kO1xuICBzdHJva2Utd2lkdGg6IDI7XG59XG4ucWwtYnViYmxlIC5xbC1zdHJva2UtbWl0ZXIge1xuICBmaWxsOiBub25lO1xuICBzdHJva2U6ICNjY2M7XG4gIHN0cm9rZS1taXRlcmxpbWl0OiAxMDtcbiAgc3Ryb2tlLXdpZHRoOiAyO1xufVxuLnFsLWJ1YmJsZSAucWwtZmlsbCxcbi5xbC1idWJibGUgLnFsLXN0cm9rZS5xbC1maWxsIHtcbiAgZmlsbDogI2NjYztcbn1cbi5xbC1idWJibGUgLnFsLXBpY2tlciB7XG4gIGNvbG9yOiAjY2NjO1xufVxuLnFsLWJ1YmJsZSAucWwtcGlja2VyLnFsLWV4cGFuZGVkIC5xbC1waWNrZXItbGFiZWwge1xuICB6LWluZGV4OiAyO1xuICBjb2xvcjogIzc3Nztcbn1cbi5xbC1idWJibGUgLnFsLXBpY2tlci5xbC1leHBhbmRlZCAucWwtcGlja2VyLWxhYmVsIC5xbC1maWxsIHtcbiAgZmlsbDogIzc3Nztcbn1cbi5xbC1idWJibGUgLnFsLXBpY2tlci5xbC1leHBhbmRlZCAucWwtcGlja2VyLWxhYmVsIC5xbC1zdHJva2Uge1xuICBzdHJva2U6ICM3Nzc7XG59XG4ucWwtYnViYmxlIC5xbC1waWNrZXItb3B0aW9ucyB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM0NDQ7XG59XG4ucWwtYnViYmxlIC5xbC1jb2xvci1waWNrZXIgLnFsLXBpY2tlci1sYWJlbCBzdmcsXG4ucWwtYnViYmxlIC5xbC1pY29uLXBpY2tlciAucWwtcGlja2VyLWxhYmVsIHN2ZyB7XG4gIHJpZ2h0OiAwLjI1cmVtO1xufVxuW2Rpcj1ydGxdIC5xbC1idWJibGUgLnFsLWNvbG9yLXBpY2tlciAucWwtcGlja2VyLWxhYmVsIHN2ZyxcbltkaXI9cnRsXSAucWwtYnViYmxlIC5xbC1pY29uLXBpY2tlciAucWwtcGlja2VyLWxhYmVsIHN2ZyB7XG4gIHJpZ2h0OiBhdXRvO1xuICBsZWZ0OiAwLjI1cmVtO1xufVxuLnFsLWJ1YmJsZSAucWwtY29sb3ItcGlja2VyIC5xbC1jb2xvci1waWNrZXIgc3ZnIHtcbiAgbWFyZ2luOiAwLjA2MjVyZW07XG59XG4ucWwtYnViYmxlIC5xbC1jb2xvci1waWNrZXIgLnFsLXBpY2tlci1pdGVtLnFsLXNlbGVjdGVkLFxuLnFsLWJ1YmJsZSAucWwtY29sb3ItcGlja2VyIC5xbC1waWNrZXItaXRlbTpob3ZlciB7XG4gIGJvcmRlci1jb2xvcjogI2ZmZjtcbn1cbi5xbC1idWJibGUgLnFsLXRvb2xiYXIgLnFsLWZvcm1hdHMge1xuICBtYXJnaW46IDAuNXJlbSAwLjc1cmVtIDAuNXJlbSAwO1xufVxuW2Rpcj1ydGxdIC5xbC1idWJibGUgLnFsLXRvb2xiYXIgLnFsLWZvcm1hdHMge1xuICBtYXJnaW46IDAuNXJlbSAwIDAuNXJlbSAwLjc1cmVtO1xufVxuLnFsLWJ1YmJsZSAucWwtdG9vbGJhciAucWwtZm9ybWF0czpmaXJzdC1jaGlsZCB7XG4gIG1hcmdpbi1sZWZ0OiAwLjc1cmVtO1xufVxuW2Rpcj1ydGxdIC5xbC1idWJibGUgLnFsLXRvb2xiYXIgLnFsLWZvcm1hdHM6Zmlyc3QtY2hpbGQge1xuICBtYXJnaW4tcmlnaHQ6IDAuNzVyZW07XG59XG4ucWwtYnViYmxlIC5xbC10b29sdGlwLWFycm93IHtcbiAgY29udGVudDogXCIgXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGxlZnQ6IDUwJTtcbiAgbWFyZ2luLWxlZnQ6IC0wLjM3NXJlbTtcbiAgYm9yZGVyLXJpZ2h0OiAwLjM3NXJlbSBzb2xpZCB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLWxlZnQ6IDAuMzc1cmVtIHNvbGlkIHRyYW5zcGFyZW50O1xufVxuLnFsLWJ1YmJsZSAucWwtdG9vbHRpcCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM0NDQ7XG4gIGNvbG9yOiAjZmZmO1xufVxuLnFsLWJ1YmJsZSAucWwtdG9vbHRpcDpub3QoLnFsLWZsaXApIC5xbC10b29sdGlwLWFycm93IHtcbiAgdG9wOiAtMC4zNzVyZW07XG4gIGJvcmRlci1ib3R0b206IDAuMzc1cmVtIHNvbGlkICM0NDQ7XG59XG4ucWwtYnViYmxlIC5xbC10b29sdGlwLnFsLWZsaXAgLnFsLXRvb2x0aXAtYXJyb3cge1xuICBib3R0b206IC0wLjM3NXJlbTtcbiAgYm9yZGVyLXRvcDogMC4zNzVyZW0gc29saWQgIzQ0NDtcbn1cbi5xbC1idWJibGUgLnFsLXRvb2x0aXAucWwtZWRpdGluZyAucWwtdG9vbHRpcC1lZGl0b3Ige1xuICBkaXNwbGF5OiBibG9jaztcbn1cbi5xbC1idWJibGUgLnFsLXRvb2x0aXAucWwtZWRpdGluZyAucWwtZm9ybWF0cyB7XG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcbn1cbi5xbC1idWJibGUgLnFsLXRvb2x0aXAtZWRpdG9yIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbi5xbC1idWJibGUgLnFsLXRvb2x0aXAtZWRpdG9yIGlucHV0W3R5cGU9dGV4dF0ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHBhZGRpbmc6IDAuNjI1cmVtIDEuMjVyZW07XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7XG4gIG91dGxpbmU6IG5vbmU7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICBib3JkZXI6IG5vbmU7XG4gIGNvbG9yOiAjZmZmO1xuICBmb250LXNpemU6IDAuODEyNXJlbTtcbn1cbi5xbC1idWJibGUgLnFsLXRvb2x0aXAtZWRpdG9yIGEge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHJpZ2h0OiAxLjI1cmVtO1xuICB0b3A6IDAuNjI1cmVtO1xufVxuW2Rpcj1ydGxdIC5xbC1idWJibGUgLnFsLXRvb2x0aXAtZWRpdG9yIGEge1xuICByaWdodDogYXV0bztcbiAgbGVmdDogMS4yNXJlbTtcbn1cbi5xbC1idWJibGUgLnFsLXRvb2x0aXAtZWRpdG9yIGE6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiw5dcIjtcbiAgY29sb3I6ICNjY2M7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4ucWwtYnViYmxlLnFsLWNvbnRhaW5lcjpub3QoLnFsLWRpc2FibGVkKSBhIHtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuLnFsLWJ1YmJsZS5xbC1jb250YWluZXI6bm90KC5xbC1kaXNhYmxlZCkgYTo6YmVmb3JlLCAucWwtYnViYmxlLnFsLWNvbnRhaW5lcjpub3QoLnFsLWRpc2FibGVkKSBhOjphZnRlciB7XG4gIG1hcmdpbi1sZWZ0OiA1MCU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICBsZWZ0OiAwO1xuICB0cmFuc2l0aW9uOiB2aXNpYmlsaXR5IDBzIGVhc2UgMjAwbXM7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC0xMDAlKTtcbn1cbi5xbC1idWJibGUucWwtY29udGFpbmVyOm5vdCgucWwtZGlzYWJsZWQpIGE6aG92ZXI6OmJlZm9yZSwgLnFsLWJ1YmJsZS5xbC1jb250YWluZXI6bm90KC5xbC1kaXNhYmxlZCkgYTpob3Zlcjo6YWZ0ZXIge1xuICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xufVxuLnFsLWJ1YmJsZS5xbC1jb250YWluZXI6bm90KC5xbC1kaXNhYmxlZCkgYTo6YmVmb3JlIHtcbiAgY29udGVudDogYXR0cihocmVmKTtcbiAgdG9wOiAtMC4zMTI1cmVtO1xuICB6LWluZGV4OiAxO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwYWRkaW5nOiAwLjMxMjVyZW0gMC45Mzc1cmVtO1xuICBib3JkZXItcmFkaXVzOiAwLjkzNzVyZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICM0NDQ7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgY29sb3I6ICNmZmY7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc2l6ZTogMC43NXJlbTtcbn1cbi5xbC1idWJibGUucWwtY29udGFpbmVyOm5vdCgucWwtZGlzYWJsZWQpIGE6OmFmdGVyIHtcbiAgY29udGVudDogXCIgXCI7XG4gIHRvcDogMDtcbiAgaGVpZ2h0OiAwO1xuICB3aWR0aDogMDtcbiAgYm9yZGVyLXRvcDogMC4zNzVyZW0gc29saWQgIzQ0NDtcbiAgYm9yZGVyLXJpZ2h0OiAwLjM3NXJlbSBzb2xpZCB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLWxlZnQ6IDAuMzc1cmVtIHNvbGlkIHRyYW5zcGFyZW50O1xufVxuXG4ubGlnaHQtc3R5bGUgLnFsLWVkaXRvci5xbC1ibGFuazpiZWZvcmUge1xuICBjb2xvcjogI2E4YjFiYjtcbn1cbi5saWdodC1zdHlsZSAucWwtc25vdy5xbC10b29sYmFyIC5xbC1waWNrZXItb3B0aW9ucywgLmxpZ2h0LXN0eWxlIC5xbC1zbm93IC5xbC10b29sYmFyIC5xbC1waWNrZXItb3B0aW9ucyxcbi5saWdodC1zdHlsZSAucWwtYnViYmxlLnFsLXRvb2xiYXIgLnFsLXBpY2tlci1vcHRpb25zLFxuLmxpZ2h0LXN0eWxlIC5xbC1idWJibGUgLnFsLXRvb2xiYXIgLnFsLXBpY2tlci1vcHRpb25zIHtcbiAgYm94LXNoYWRvdzogMCAwLjI1cmVtIDFyZW0gcmdiYSgxNDcsIDE1OCwgMTcwLCAwLjQ1KTtcbn1cbi5saWdodC1zdHlsZSAucWwtc25vdyAucWwtcGlja2VyLnFsLWhlYWRlciAucWwtcGlja2VyLWl0ZW1bZGF0YS12YWx1ZT1cIjFcIl06OmJlZm9yZSxcbi5saWdodC1zdHlsZSAucWwtYnViYmxlIC5xbC1waWNrZXIucWwtaGVhZGVyIC5xbC1waWNrZXItaXRlbVtkYXRhLXZhbHVlPVwiMVwiXTo6YmVmb3JlIHtcbiAgZm9udC1zaXplOiAyLjM3NXJlbTtcbn1cbi5saWdodC1zdHlsZSAucWwtc25vdyAucWwtcGlja2VyLnFsLWhlYWRlciAucWwtcGlja2VyLWl0ZW1bZGF0YS12YWx1ZT1cIjJcIl06OmJlZm9yZSxcbi5saWdodC1zdHlsZSAucWwtYnViYmxlIC5xbC1waWNrZXIucWwtaGVhZGVyIC5xbC1waWNrZXItaXRlbVtkYXRhLXZhbHVlPVwiMlwiXTo6YmVmb3JlIHtcbiAgZm9udC1zaXplOiAycmVtO1xufVxuLmxpZ2h0LXN0eWxlIC5xbC1zbm93IC5xbC1waWNrZXIucWwtaGVhZGVyIC5xbC1waWNrZXItaXRlbVtkYXRhLXZhbHVlPVwiM1wiXTo6YmVmb3JlLFxuLmxpZ2h0LXN0eWxlIC5xbC1idWJibGUgLnFsLXBpY2tlci5xbC1oZWFkZXIgLnFsLXBpY2tlci1pdGVtW2RhdGEtdmFsdWU9XCIzXCJdOjpiZWZvcmUge1xuICBmb250LXNpemU6IDEuNjI1cmVtO1xufVxuLmxpZ2h0LXN0eWxlIC5xbC1zbm93IC5xbC1waWNrZXIucWwtaGVhZGVyIC5xbC1waWNrZXItaXRlbVtkYXRhLXZhbHVlPVwiNFwiXTo6YmVmb3JlLFxuLmxpZ2h0LXN0eWxlIC5xbC1idWJibGUgLnFsLXBpY2tlci5xbC1oZWFkZXIgLnFsLXBpY2tlci1pdGVtW2RhdGEtdmFsdWU9XCI0XCJdOjpiZWZvcmUge1xuICBmb250LXNpemU6IDEuMzc1cmVtO1xufVxuLmxpZ2h0LXN0eWxlIC5xbC1zbm93IC5xbC1waWNrZXIucWwtaGVhZGVyIC5xbC1waWNrZXItaXRlbVtkYXRhLXZhbHVlPVwiNVwiXTo6YmVmb3JlLFxuLmxpZ2h0LXN0eWxlIC5xbC1idWJibGUgLnFsLXBpY2tlci5xbC1oZWFkZXIgLnFsLXBpY2tlci1pdGVtW2RhdGEtdmFsdWU9XCI1XCJdOjpiZWZvcmUge1xuICBmb250LXNpemU6IDEuMTI1cmVtO1xufVxuLmxpZ2h0LXN0eWxlIC5xbC1zbm93IC5xbC1waWNrZXIucWwtaGVhZGVyIC5xbC1waWNrZXItaXRlbVtkYXRhLXZhbHVlPVwiNlwiXTo6YmVmb3JlLFxuLmxpZ2h0LXN0eWxlIC5xbC1idWJibGUgLnFsLXBpY2tlci5xbC1oZWFkZXIgLnFsLXBpY2tlci1pdGVtW2RhdGEtdmFsdWU9XCI2XCJdOjpiZWZvcmUge1xuICBmb250LXNpemU6IDAuOTM3NXJlbTtcbn1cbi5saWdodC1zdHlsZSAucWwtc25vdyAucWwtcGlja2VyLnFsLWZvbnQgLnFsLXBpY2tlci1pdGVtW2RhdGEtdmFsdWU9c2VyaWZdOjpiZWZvcmUsXG4ubGlnaHQtc3R5bGUgLnFsLWJ1YmJsZSAucWwtcGlja2VyLnFsLWZvbnQgLnFsLXBpY2tlci1pdGVtW2RhdGEtdmFsdWU9c2VyaWZdOjpiZWZvcmUge1xuICBmb250LWZhbWlseTogXCJSdWJpa1wiLCBcIlRpbWVzIE5ldyBSb21hblwiLCBzZXJpZjtcbn1cbi5saWdodC1zdHlsZSAucWwtc25vdyAucWwtcGlja2VyLnFsLWZvbnQgLnFsLXBpY2tlci1pdGVtW2RhdGEtdmFsdWU9bW9ub3NwYWNlXTo6YmVmb3JlLFxuLmxpZ2h0LXN0eWxlIC5xbC1idWJibGUgLnFsLXBpY2tlci5xbC1mb250IC5xbC1waWNrZXItaXRlbVtkYXRhLXZhbHVlPW1vbm9zcGFjZV06OmJlZm9yZSB7XG4gIGZvbnQtZmFtaWx5OiBcIlNGTW9uby1SZWd1bGFyXCIsIE1lbmxvLCBNb25hY28sIENvbnNvbGFzLCBcIkxpYmVyYXRpb24gTW9ub1wiLCBcIkNvdXJpZXIgTmV3XCIsIG1vbm9zcGFjZTtcbn1cbi5saWdodC1zdHlsZSAucWwtc25vdyAucWwtcGlja2VyLnFsLXNpemUgLnFsLXBpY2tlci1pdGVtW2RhdGEtdmFsdWU9c21hbGxdOjpiZWZvcmUsXG4ubGlnaHQtc3R5bGUgLnFsLWJ1YmJsZSAucWwtcGlja2VyLnFsLXNpemUgLnFsLXBpY2tlci1pdGVtW2RhdGEtdmFsdWU9c21hbGxdOjpiZWZvcmUge1xuICBmb250LXNpemU6IDAuODEzcmVtO1xufVxuLmxpZ2h0LXN0eWxlIC5xbC1zbm93IC5xbC1waWNrZXIucWwtc2l6ZSAucWwtcGlja2VyLWl0ZW1bZGF0YS12YWx1ZT1sYXJnZV06OmJlZm9yZSxcbi5saWdodC1zdHlsZSAucWwtYnViYmxlIC5xbC1waWNrZXIucWwtc2l6ZSAucWwtcGlja2VyLWl0ZW1bZGF0YS12YWx1ZT1sYXJnZV06OmJlZm9yZSB7XG4gIGZvbnQtc2l6ZTogMS4wNjNyZW07XG59XG4ubGlnaHQtc3R5bGUgLnFsLXNub3cgLnFsLXBpY2tlci5xbC1zaXplIC5xbC1waWNrZXItaXRlbVtkYXRhLXZhbHVlPWh1Z2VdOjpiZWZvcmUsXG4ubGlnaHQtc3R5bGUgLnFsLWJ1YmJsZSAucWwtcGlja2VyLnFsLXNpemUgLnFsLXBpY2tlci1pdGVtW2RhdGEtdmFsdWU9aHVnZV06OmJlZm9yZSB7XG4gIGZvbnQtc2l6ZTogMS4yNXJlbTtcbn1cbi5saWdodC1zdHlsZSAucWwtc25vdyAucWwtZWRpdG9yLnFsLWJsYW5rOjpiZWZvcmUge1xuICBwYWRkaW5nOiAwIDEuMzc1cmVtO1xufVxuLmxpZ2h0LXN0eWxlIC5xbC1zbm93LnFsLWNvbnRhaW5lciB7XG4gIGJvcmRlcjogMC4wNjI1cmVtIHNvbGlkICNkNGQ4ZGQ7XG59XG4ubGlnaHQtc3R5bGUgLnFsLXNub3cgLnFsLWVkaXRvciB7XG4gIHBhZGRpbmc6IDEuMzc1cmVtO1xufVxuLmxpZ2h0LXN0eWxlIC5xbC1zbm93LnFsLXRvb2xiYXIsIC5saWdodC1zdHlsZSAucWwtc25vdyAucWwtdG9vbGJhciB7XG4gIGJvcmRlcjogMC4wNjI1cmVtIHNvbGlkICNkNGQ4ZGQ7XG59XG5AbWVkaWEgKHBvaW50ZXI6IGNvYXJzZSkge1xuICAubGlnaHQtc3R5bGUgLnFsLXNub3cucWwtdG9vbGJhciBidXR0b246aG92ZXI6bm90KC5xbC1hY3RpdmUpLCAubGlnaHQtc3R5bGUgLnFsLXNub3cgLnFsLXRvb2xiYXIgYnV0dG9uOmhvdmVyOm5vdCgucWwtYWN0aXZlKSB7XG4gICAgY29sb3I6ICM2Nzc3ODg7XG4gIH1cbiAgLmxpZ2h0LXN0eWxlIC5xbC1zbm93LnFsLXRvb2xiYXIgYnV0dG9uOmhvdmVyOm5vdCgucWwtYWN0aXZlKSAucWwtc3Ryb2tlLFxuICAubGlnaHQtc3R5bGUgLnFsLXNub3cucWwtdG9vbGJhciBidXR0b246aG92ZXI6bm90KC5xbC1hY3RpdmUpIC5xbC1zdHJva2UtbWl0ZXIsIC5saWdodC1zdHlsZSAucWwtc25vdyAucWwtdG9vbGJhciBidXR0b246aG92ZXI6bm90KC5xbC1hY3RpdmUpIC5xbC1zdHJva2UsXG4gIC5saWdodC1zdHlsZSAucWwtc25vdyAucWwtdG9vbGJhciBidXR0b246aG92ZXI6bm90KC5xbC1hY3RpdmUpIC5xbC1zdHJva2UtbWl0ZXIge1xuICAgIHN0cm9rZTogIzY3Nzc4ODtcbiAgfVxuICAubGlnaHQtc3R5bGUgLnFsLXNub3cucWwtdG9vbGJhciBidXR0b246aG92ZXI6bm90KC5xbC1hY3RpdmUpIC5xbC1maWxsLFxuICAubGlnaHQtc3R5bGUgLnFsLXNub3cucWwtdG9vbGJhciBidXR0b246aG92ZXI6bm90KC5xbC1hY3RpdmUpIC5xbC1zdHJva2UucWwtZmlsbCwgLmxpZ2h0LXN0eWxlIC5xbC1zbm93IC5xbC10b29sYmFyIGJ1dHRvbjpob3Zlcjpub3QoLnFsLWFjdGl2ZSkgLnFsLWZpbGwsXG4gIC5saWdodC1zdHlsZSAucWwtc25vdyAucWwtdG9vbGJhciBidXR0b246aG92ZXI6bm90KC5xbC1hY3RpdmUpIC5xbC1zdHJva2UucWwtZmlsbCB7XG4gICAgZmlsbDogIzY3Nzc4ODtcbiAgfVxufVxuLmxpZ2h0LXN0eWxlIC5xbC1zbm93LnFsLXRvb2xiYXIgKyAucWwtY29udGFpbmVyLnFsLXNub3cge1xuICBib3JkZXItdG9wOiAwO1xufVxuLmxpZ2h0LXN0eWxlIC5xbC1zbm93IC5xbC1zdHJva2Uge1xuICBzdHJva2U6ICM2Nzc3ODg7XG59XG4ubGlnaHQtc3R5bGUgLnFsLXNub3cgLnFsLWZpbGwsXG4ubGlnaHQtc3R5bGUgLnFsLXNub3cgLnFsLXN0cm9rZS5xbC1maWxsIHtcbiAgZmlsbDogIzY3Nzc4ODtcbn1cbi5saWdodC1zdHlsZSAucWwtc25vdyAucWwtc3Ryb2tlLW1pdGVyIHtcbiAgc3Ryb2tlOiAjNjc3Nzg4O1xufVxuLmxpZ2h0LXN0eWxlIC5xbC1zbm93IC5xbC1waWNrZXIge1xuICBjb2xvcjogIzY3Nzc4ODtcbn1cbi5saWdodC1zdHlsZSAucWwtc25vdyAucWwtcGlja2VyLnFsLWV4cGFuZGVkIC5xbC1waWNrZXItb3B0aW9ucyB7XG4gIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG4ubGlnaHQtc3R5bGUgLnFsLXNub3cgLnFsLXBpY2tlci5xbC1leHBhbmRlZCAucWwtcGlja2VyLWxhYmVsIHtcbiAgYm9yZGVyLWNvbG9yOiAjZDRkOGRkO1xufVxuLmxpZ2h0LXN0eWxlIC5xbC1zbm93IC5xbC10b29sdGlwIHtcbiAgYm9yZGVyOiAwIHNvbGlkIHRyYW5zcGFyZW50O1xuICBjb2xvcjogIzY3Nzc4ODtcbiAgYm94LXNoYWRvdzogMCAwLjI1cmVtIDFyZW0gcmdiYSgxNDcsIDE1OCwgMTcwLCAwLjQ1KTtcbn1cbi5saWdodC1zdHlsZSAucWwtc25vdyAucWwtdG9vbHRpcCBpbnB1dFt0eXBlPXRleHRdIHtcbiAgYm9yZGVyOiAwLjA2MjVyZW0gc29saWQgI2Q0ZDhkZDtcbn1cbi5saWdodC1zdHlsZSAucWwtYnViYmxlIC5xbC10b29sdGlwIHtcbiAgYm9yZGVyLXJhZGl1czogMC4yNXJlbTtcbiAgei1pbmRleDogMTA5MDtcbn1cblxuLmRhcmstc3R5bGUgLnFsLWVkaXRvci5xbC1ibGFuazpiZWZvcmUge1xuICBjb2xvcjogIzgyOTViYTtcbn1cbi5kYXJrLXN0eWxlIC5xbC1zbm93IC5xbC10b29sdGlwLFxuLmRhcmstc3R5bGUgLnFsLWJ1YmJsZSAucWwtdG9vbHRpcCB7XG4gIGJhY2tncm91bmQ6ICMxYzIyMmY7XG59XG4uZGFyay1zdHlsZSAucWwtc25vdy5xbC10b29sYmFyIC5xbC1waWNrZXItb3B0aW9ucywgLmRhcmstc3R5bGUgLnFsLXNub3cgLnFsLXRvb2xiYXIgLnFsLXBpY2tlci1vcHRpb25zLFxuLmRhcmstc3R5bGUgLnFsLWJ1YmJsZS5xbC10b29sYmFyIC5xbC1waWNrZXItb3B0aW9ucyxcbi5kYXJrLXN0eWxlIC5xbC1idWJibGUgLnFsLXRvb2xiYXIgLnFsLXBpY2tlci1vcHRpb25zIHtcbiAgYm94LXNoYWRvdzogMCAwLjI1cmVtIDFyZW0gcmdiYSgwLCAwLCAwLCAwLjI1KTtcbn1cbi5kYXJrLXN0eWxlIC5xbC1zbm93IC5xbC1waWNrZXIucWwtaGVhZGVyIC5xbC1waWNrZXItaXRlbVtkYXRhLXZhbHVlPVwiMVwiXTo6YmVmb3JlLFxuLmRhcmstc3R5bGUgLnFsLWJ1YmJsZSAucWwtcGlja2VyLnFsLWhlYWRlciAucWwtcGlja2VyLWl0ZW1bZGF0YS12YWx1ZT1cIjFcIl06OmJlZm9yZSB7XG4gIGZvbnQtc2l6ZTogMi4zNzVyZW07XG59XG4uZGFyay1zdHlsZSAucWwtc25vdyAucWwtcGlja2VyLnFsLWhlYWRlciAucWwtcGlja2VyLWl0ZW1bZGF0YS12YWx1ZT1cIjJcIl06OmJlZm9yZSxcbi5kYXJrLXN0eWxlIC5xbC1idWJibGUgLnFsLXBpY2tlci5xbC1oZWFkZXIgLnFsLXBpY2tlci1pdGVtW2RhdGEtdmFsdWU9XCIyXCJdOjpiZWZvcmUge1xuICBmb250LXNpemU6IDJyZW07XG59XG4uZGFyay1zdHlsZSAucWwtc25vdyAucWwtcGlja2VyLnFsLWhlYWRlciAucWwtcGlja2VyLWl0ZW1bZGF0YS12YWx1ZT1cIjNcIl06OmJlZm9yZSxcbi5kYXJrLXN0eWxlIC5xbC1idWJibGUgLnFsLXBpY2tlci5xbC1oZWFkZXIgLnFsLXBpY2tlci1pdGVtW2RhdGEtdmFsdWU9XCIzXCJdOjpiZWZvcmUge1xuICBmb250LXNpemU6IDEuNjI1cmVtO1xufVxuLmRhcmstc3R5bGUgLnFsLXNub3cgLnFsLXBpY2tlci5xbC1oZWFkZXIgLnFsLXBpY2tlci1pdGVtW2RhdGEtdmFsdWU9XCI0XCJdOjpiZWZvcmUsXG4uZGFyay1zdHlsZSAucWwtYnViYmxlIC5xbC1waWNrZXIucWwtaGVhZGVyIC5xbC1waWNrZXItaXRlbVtkYXRhLXZhbHVlPVwiNFwiXTo6YmVmb3JlIHtcbiAgZm9udC1zaXplOiAxLjM3NXJlbTtcbn1cbi5kYXJrLXN0eWxlIC5xbC1zbm93IC5xbC1waWNrZXIucWwtaGVhZGVyIC5xbC1waWNrZXItaXRlbVtkYXRhLXZhbHVlPVwiNVwiXTo6YmVmb3JlLFxuLmRhcmstc3R5bGUgLnFsLWJ1YmJsZSAucWwtcGlja2VyLnFsLWhlYWRlciAucWwtcGlja2VyLWl0ZW1bZGF0YS12YWx1ZT1cIjVcIl06OmJlZm9yZSB7XG4gIGZvbnQtc2l6ZTogMS4xMjVyZW07XG59XG4uZGFyay1zdHlsZSAucWwtc25vdyAucWwtcGlja2VyLnFsLWhlYWRlciAucWwtcGlja2VyLWl0ZW1bZGF0YS12YWx1ZT1cIjZcIl06OmJlZm9yZSxcbi5kYXJrLXN0eWxlIC5xbC1idWJibGUgLnFsLXBpY2tlci5xbC1oZWFkZXIgLnFsLXBpY2tlci1pdGVtW2RhdGEtdmFsdWU9XCI2XCJdOjpiZWZvcmUge1xuICBmb250LXNpemU6IDAuOTM3NXJlbTtcbn1cbi5kYXJrLXN0eWxlIC5xbC1zbm93IC5xbC1waWNrZXIucWwtZm9udCAucWwtcGlja2VyLWl0ZW1bZGF0YS12YWx1ZT1zZXJpZl06OmJlZm9yZSxcbi5kYXJrLXN0eWxlIC5xbC1idWJibGUgLnFsLXBpY2tlci5xbC1mb250IC5xbC1waWNrZXItaXRlbVtkYXRhLXZhbHVlPXNlcmlmXTo6YmVmb3JlIHtcbiAgZm9udC1mYW1pbHk6IFwiUnViaWtcIiwgXCJUaW1lcyBOZXcgUm9tYW5cIiwgc2VyaWY7XG59XG4uZGFyay1zdHlsZSAucWwtc25vdyAucWwtcGlja2VyLnFsLWZvbnQgLnFsLXBpY2tlci1pdGVtW2RhdGEtdmFsdWU9bW9ub3NwYWNlXTo6YmVmb3JlLFxuLmRhcmstc3R5bGUgLnFsLWJ1YmJsZSAucWwtcGlja2VyLnFsLWZvbnQgLnFsLXBpY2tlci1pdGVtW2RhdGEtdmFsdWU9bW9ub3NwYWNlXTo6YmVmb3JlIHtcbiAgZm9udC1mYW1pbHk6IFwiU0ZNb25vLVJlZ3VsYXJcIiwgTWVubG8sIE1vbmFjbywgQ29uc29sYXMsIFwiTGliZXJhdGlvbiBNb25vXCIsIFwiQ291cmllciBOZXdcIiwgbW9ub3NwYWNlO1xufVxuLmRhcmstc3R5bGUgLnFsLXNub3cgLnFsLXBpY2tlci5xbC1zaXplIC5xbC1waWNrZXItaXRlbVtkYXRhLXZhbHVlPXNtYWxsXTo6YmVmb3JlLFxuLmRhcmstc3R5bGUgLnFsLWJ1YmJsZSAucWwtcGlja2VyLnFsLXNpemUgLnFsLXBpY2tlci1pdGVtW2RhdGEtdmFsdWU9c21hbGxdOjpiZWZvcmUge1xuICBmb250LXNpemU6IDAuODEzcmVtO1xufVxuLmRhcmstc3R5bGUgLnFsLXNub3cgLnFsLXBpY2tlci5xbC1zaXplIC5xbC1waWNrZXItaXRlbVtkYXRhLXZhbHVlPWxhcmdlXTo6YmVmb3JlLFxuLmRhcmstc3R5bGUgLnFsLWJ1YmJsZSAucWwtcGlja2VyLnFsLXNpemUgLnFsLXBpY2tlci1pdGVtW2RhdGEtdmFsdWU9bGFyZ2VdOjpiZWZvcmUge1xuICBmb250LXNpemU6IDEuMDYzcmVtO1xufVxuLmRhcmstc3R5bGUgLnFsLXNub3cgLnFsLXBpY2tlci5xbC1zaXplIC5xbC1waWNrZXItaXRlbVtkYXRhLXZhbHVlPWh1Z2VdOjpiZWZvcmUsXG4uZGFyay1zdHlsZSAucWwtYnViYmxlIC5xbC1waWNrZXIucWwtc2l6ZSAucWwtcGlja2VyLWl0ZW1bZGF0YS12YWx1ZT1odWdlXTo6YmVmb3JlIHtcbiAgZm9udC1zaXplOiAxLjI1cmVtO1xufVxuLmRhcmstc3R5bGUgLnFsLXNub3cgLnFsLWVkaXRvci5xbC1ibGFuazo6YmVmb3JlIHtcbiAgcGFkZGluZzogMCAxLjM3NXJlbTtcbn1cbi5kYXJrLXN0eWxlIC5xbC1zbm93LnFsLWNvbnRhaW5lciB7XG4gIGJvcmRlcjogMC4wNjI1cmVtIHNvbGlkICM1NDY5OTA7XG59XG4uZGFyay1zdHlsZSAucWwtc25vdyAucWwtZWRpdG9yIHtcbiAgcGFkZGluZzogMS4zNzVyZW07XG4gIGJhY2tncm91bmQ6ICMyODMxNDQ7XG59XG4uZGFyay1zdHlsZSAucWwtc25vdyAucWwtcGlja2VyLW9wdGlvbnMge1xuICBiYWNrZ3JvdW5kOiAjMjgzMTQ0O1xufVxuLmRhcmstc3R5bGUgLnFsLXNub3cucWwtdG9vbGJhciwgLmRhcmstc3R5bGUgLnFsLXNub3cgLnFsLXRvb2xiYXIge1xuICBib3JkZXI6IDAuMDYyNXJlbSBzb2xpZCAjNTQ2OTkwO1xuICBiYWNrZ3JvdW5kOiAjMjgzMTQ0O1xufVxuQG1lZGlhIChwb2ludGVyOiBjb2Fyc2UpIHtcbiAgLmRhcmstc3R5bGUgLnFsLXNub3cucWwtdG9vbGJhciBidXR0b246aG92ZXI6bm90KC5xbC1hY3RpdmUpLCAuZGFyay1zdHlsZSAucWwtc25vdyAucWwtdG9vbGJhciBidXR0b246aG92ZXI6bm90KC5xbC1hY3RpdmUpIHtcbiAgICBjb2xvcjogI2ExYjBjYjtcbiAgfVxuICAuZGFyay1zdHlsZSAucWwtc25vdy5xbC10b29sYmFyIGJ1dHRvbjpob3Zlcjpub3QoLnFsLWFjdGl2ZSkgLnFsLXN0cm9rZSxcbiAgLmRhcmstc3R5bGUgLnFsLXNub3cucWwtdG9vbGJhciBidXR0b246aG92ZXI6bm90KC5xbC1hY3RpdmUpIC5xbC1zdHJva2UtbWl0ZXIsIC5kYXJrLXN0eWxlIC5xbC1zbm93IC5xbC10b29sYmFyIGJ1dHRvbjpob3Zlcjpub3QoLnFsLWFjdGl2ZSkgLnFsLXN0cm9rZSxcbiAgLmRhcmstc3R5bGUgLnFsLXNub3cgLnFsLXRvb2xiYXIgYnV0dG9uOmhvdmVyOm5vdCgucWwtYWN0aXZlKSAucWwtc3Ryb2tlLW1pdGVyIHtcbiAgICBzdHJva2U6ICNhMWIwY2I7XG4gIH1cbiAgLmRhcmstc3R5bGUgLnFsLXNub3cucWwtdG9vbGJhciBidXR0b246aG92ZXI6bm90KC5xbC1hY3RpdmUpIC5xbC1maWxsLFxuICAuZGFyay1zdHlsZSAucWwtc25vdy5xbC10b29sYmFyIGJ1dHRvbjpob3Zlcjpub3QoLnFsLWFjdGl2ZSkgLnFsLXN0cm9rZS5xbC1maWxsLCAuZGFyay1zdHlsZSAucWwtc25vdyAucWwtdG9vbGJhciBidXR0b246aG92ZXI6bm90KC5xbC1hY3RpdmUpIC5xbC1maWxsLFxuICAuZGFyay1zdHlsZSAucWwtc25vdyAucWwtdG9vbGJhciBidXR0b246aG92ZXI6bm90KC5xbC1hY3RpdmUpIC5xbC1zdHJva2UucWwtZmlsbCB7XG4gICAgZmlsbDogI2ExYjBjYjtcbiAgfVxufVxuLmRhcmstc3R5bGUgLnFsLXNub3cucWwtdG9vbGJhciArIC5xbC1jb250YWluZXIucWwtc25vdyB7XG4gIGJvcmRlci10b3A6IDA7XG59XG4uZGFyay1zdHlsZSAucWwtc25vdyAucWwtc3Ryb2tlLW1pdGVyIHtcbiAgc3Ryb2tlOiAjYTFiMGNiO1xufVxuLmRhcmstc3R5bGUgLnFsLXNub3cgLnFsLXN0cm9rZSB7XG4gIHN0cm9rZTogI2ExYjBjYjtcbn1cbi5kYXJrLXN0eWxlIC5xbC1zbm93IC5xbC1maWxsLFxuLmRhcmstc3R5bGUgLnFsLXNub3cgLnFsLXN0cm9rZS5xbC1maWxsIHtcbiAgZmlsbDogI2ExYjBjYjtcbn1cbi5kYXJrLXN0eWxlIC5xbC1zbm93IC5xbC1waWNrZXIge1xuICBjb2xvcjogI2ExYjBjYjtcbn1cbi5kYXJrLXN0eWxlIC5xbC1zbm93IC5xbC1waWNrZXIucWwtZXhwYW5kZWQgLnFsLXBpY2tlci1vcHRpb25zIHtcbiAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cbi5kYXJrLXN0eWxlIC5xbC1zbm93IC5xbC1waWNrZXIucWwtZXhwYW5kZWQgLnFsLXBpY2tlci1sYWJlbCB7XG4gIGJvcmRlci1jb2xvcjogIzU0Njk5MDtcbn1cbi5kYXJrLXN0eWxlIC5xbC1zbm93IC5xbC10b29sdGlwIHtcbiAgYm9yZGVyOiAwIHNvbGlkIHRyYW5zcGFyZW50O1xuICBjb2xvcjogI2ExYjBjYjtcbiAgYm94LXNoYWRvdzogMCAwLjI1cmVtIDFyZW0gcmdiYSgwLCAwLCAwLCAwLjI1KTtcbn1cbi5kYXJrLXN0eWxlIC5xbC1zbm93IC5xbC10b29sdGlwIGlucHV0W3R5cGU9dGV4dF0ge1xuICBib3JkZXI6IDAuMDYyNXJlbSBzb2xpZCAjNTQ2OTkwO1xufVxuLmRhcmstc3R5bGUgLnFsLWJ1YmJsZSAucWwtdG9vbHRpcCB7XG4gIGJvcmRlci1yYWRpdXM6IDAuMjVyZW07XG4gIHotaW5kZXg6IDEwOTA7XG59XG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGY4O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkluWmxibVJ2Y2k5c2FXSnpMM0YxYVd4c0wyVmthWFJ2Y2k1elkzTnpJaXdpZG1WdVpHOXlMM05qYzNNdlgyTjFjM1J2YlMxMllYSnBZV0pzWlhNdlgzTjFjSEJ2Y25RdWMyTnpjeUlzSW5abGJtUnZjaTl6WTNOekwxOWliMjkwYzNSeVlYQXRaWGgwWlc1a1pXUXZYM1poY21saFlteGxjeTV6WTNOeklpd2lkbVZ1Wkc5eUwzTmpjM012WDJKdmIzUnpkSEpoY0MxbGVIUmxibVJsWkM5ZmRtRnlhV0ZpYkdWekxXUmhjbXN1YzJOemN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaU8wRkJVVUU3UlVGRFJUdEZRVU5CTzBWQlEwRTdPMEZCUlVFN1JVRkRSVHM3UVVGSFJqdEZRVU5GT3pzN1FVRkpTanRGUVVORk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlEwRTdPMEZEVFVrN1JVUklSanRGUVVOQk96czdRVUZKU2p0RlFVTkZPMFZCUTBFN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlEwRTdSVUZEUVRzN1FVRkZRVHRGUVVORk96dEJRVWRHTzBWQlEwVTdSVUZEUVR0RlFVTkJPMFZCUTBFN1JVRkRRVHRGUVVOQk96czdRVUZMU2p0QlFVRkJPMFZCUlVVN08wRkJSVUU3UVVGQlFUdEZRVU5GT3p0QlFVZEdPMEZCUVVFN1FVRkJRVHRCUVVGQk8wVkJSVVU3TzBGQlIwWTdRVUZCUVR0RlFVTkZPenRCUVVkR08wRkJRVUU3UlVGRFJUczdRVUZIUmp0QlFVRkJPMFZCUTBVN08wRkJSMFk3UVVGQlFUdEZRVU5GT3p0QlFVZEdPMEZCUVVFN1FVRkJRVHRCUVVGQk8wVkJSVVU3TzBGQlIwWTdRVUZCUVR0RlFVTkZPenRCUVVsQk8wRkJRVUU3UlVGRFJUczdRVUZIUmp0QlFVRkJPMFZCUTBVN08wRkJTVW83UVVGQlFUdEZRVU5GT3p0QlFVZEdPMEZCUVVFN1FVRkJRVHRGUVVWRk8wVkJRMEU3TzBGQlJVRTdRVUZCUVR0QlFVRkJPMFZCUTBVN1JVRkRRVHRGUVVOQk96dEJRVWRHTzBGQlFVRTdRVUZCUVR0RlFVTkZPMFZCUTBFN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlEwRTdPMEZCUlVFN1FVRkJRVHRCUVVGQk8wVkJRMFU3TzBGRGRFZEdPMEZCUVVFN1FVRkJRVHRGUkRCSFJUczdRVUZIUmp0QlFVRkJPMEZCUVVFN1JVRkRSVHRGUVVOQk96dEJReTlIUmp0QlFVRkJPMEZCUVVFN1JVUnJTRWs3TzBGQlMwNDdRVUZCUVR0QlFVRkJPMFZCUTBVN08wRkJTVW83UVVGQlFUdEZRVU5GTzBWQlEwRTdPMEZCUlVFN1FVRkJRVHRGUVVORk96dEJRVWRHTzBGQlFVRTdSVUZEUlR0RlFVTkJPenRCUVVsS08wRkJRVUU3UlVGRFJUdEZRVU5CTzBWQlEwRTdPMEZETjBsRk8wRkJRVUU3UlVSblNrRTdSVUZEUVRzN1FVRkhSanRCUVVGQk8wVkJRMFU3UlVGRFFUdEZRVU5CT3p0QlFVbEtPMEZCUVVFN1JVRkRSVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CT3p0QlEyaExSVHRCUVVGQk8wVkViVXRCT3p0QlFVZEdPMEZCUVVFN1JVRkRSVHRGUVVOQk8wVkJRMEU3UlVGRFFUczdRVUZOUVR0QlFVRkJPMEZCUVVFN1FVRkJRVHRCUVVGQk8wRkJRVUU3UVVGQlFUdEJRVUZCTzBGQlFVRTdRVUZCUVR0RlFVVkZPenRCUVVsS08wRkJRVUU3UlVGRFJUczdRVUZKUlR0QlFVRkJPMEZCUVVFN1FVRkJRVHRGUVVORk96dEJRVWRHTzBGQlFVRTdRVUZCUVR0QlFVRkJPMFZCUTBVN08wRkJSMFk3UVVGQlFUdEJRVUZCTzBGQlFVRTdSVUZEUlRzN1FVRkhSanRCUVVGQk8wRkJRVUU3UVVGQlFUdEZRVU5GT3p0QlFVZEdPMEZCUVVFN1FVRkJRVHRCUVVGQk8wVkJRMFU3TzBGQlIwWTdRVUZCUVR0QlFVRkJPMEZCUVVFN1JVRkRSVHM3UVVGSFJqdEJRVUZCTzBGQlFVRTdRVUZCUVR0RlFVTkZPenRCUVV0T08wRkJRVUU3UlVGRFJUczdRVUZKUlR0QlFVRkJPMEZCUVVFN1FVRkJRVHRGUVVORk96dEJRVWRHTzBGQlFVRTdRVUZCUVR0QlFVRkJPMFZCUTBVN08wRkJSMFk3UVVGQlFUdEJRVUZCTzBGQlFVRTdSVUZEUlRzN1FVRkxUanRCUVVGQk8wVkJRMFU3TzBGQlNVVTdRVUZCUVR0QlFVRkJPMEZCUVVFN1JVRkRSVHM3UVVGSFJqdEJRVUZCTzBGQlFVRTdRVUZCUVR0RlFVTkZPenRCUVVkR08wRkJRVUU3UVVGQlFUdEJRVUZCTzBWQlEwVTdPMEZCUjBZN1FVRkJRVHRCUVVGQk8wRkJRVUU3UlVGRFJUczdRVUZMVGp0QlFVRkJPMFZCUTBVN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUczdRVU40VVVFN1FVRkJRVHRGUkRKUlJUdEZRVU5CT3p0QlFVdE9PMEZCUVVFN1JVRkRSVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlEwRTdSVUZEUVR0RlFVTkJPenRCUVVWQk8wRkJRVUU3UlVGRFJUdEZRVU5CT3p0QlFVbEtPMEZCUVVFN1JVRkRSVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CT3p0QlFVVkJPMEZCUVVFN1JVRkRSVHRGUVVOQk8wVkJRMEU3UlVGRFFUczdRVUZKU2p0QlFVRkJPMEZCUVVFN1FVRkJRVHRGUVVWRk96dEJRVVZCTzBGQlFVRTdRVUZCUVR0QlFVRkJPMFZCUTBVN08wRkJTMFk3UVVGQlFUdEZRVU5GT3p0QlFVZEdPMEZCUVVFN1JVRkRSVHRGUVVOQk8wVkJRMEU3TzBGQlMwWTdRVUZCUVR0RlFVTkZPMFZCUTBFN08wRkJSMFk3UVVGQlFUdEZRVU5GTzBWQlEwRTdSVUZEUVR0RlFVTkJPMFZCUTBFN1JVRkRRVHM3UVVOcVZrRTdRVUZCUVR0RlJHOVdSVHM3UVVGSlNqdEJRVUZCTzBWQlEwVTdPMEZCUjBZN1FVRkJRVHRGUVVORk96dEJRVXRHTzBGQlFVRTdRVUZCUVR0QlFVRkJPMEZCUVVFN1FVRkJRVHRCUVVGQk8wRkJRVUU3UVVGQlFUdEJRVUZCTzBGQlFVRTdRVUZCUVR0QlFVRkJPMEZCUVVFN1FVRkJRVHRCUVVGQk8wVkJVVVU3T3p0QlFVMUtPMEZCUVVFN1JVRkZSVHRGUVVOQk96dEJRVWRHTzBWQlEwVTdSVUZEUVRzN1FVRkhSanRGUVVORk8wVkJRMEU3TzBGQlJVRTdSVUZEUlRzN1FVRkhSanRGUVVORk96dEJRVWxLTzBWQlEwVTdSVUZEUVR0RlFVTkJPMFZCUTBFN08wRkJSMFk3UlVGRFJUdEZRVU5CTzBWQlEwRTdPMEZCUjBZN1JVRkRSVHM3UVVGSFJqdEZRVU5GTzBWQlEwRTdSVUZEUVRzN1FVRkhSanRCUVVGQk8wVkJSVVU3TzBGQlIwWTdSVUZEUlR0RlFVTkJPMFZCUTBFN1JVRkRRVHRGUVVOQk96dEJRVVZCTzBWQlEwVTdSVUZEUVR0RlFVTkJPenRCUXpsaFFUdEZSR2xpUlR0RlFVTkJPenRCUVVsS08wVkJRMFU3UlVGRFFUdEZRVU5CTzBWQlEwRTdSVUZEUVR0RlFVTkJPenRCUVVkR08wVkJRMFU3UlVGRFFUdEZRVU5CTzBWQlEwRTdSVUZEUVRzN1FVRkhSanRGUVVORk8wVkJRMEU3UlVGRFFUdEZRVU5CT3p0QlF6TmpRVHRGUkRoalJUdEZRVU5CTzBWQlEwRTdSVUZEUVR0RlFVTkJPMFZCUTBFN08wRkJTVW83UlVGRFJUdEZRVU5CT3p0QlEzcGtRVHRGUkRSa1JUdEZRVU5CT3p0QlFVbEtPMFZCUTBVN08wRkJSMFk3UlVGRlJUczdRVUZIUmp0RlFVTkZPenRCUVVkR08wVkJRMFU3UlVGRFFUdEZRVU5CT3p0QlEycG1RVHRGUkc5bVJUdEZRVU5CT3p0QlFVbEtPMFZCUTBVN08wRkJSMFk3UlVGRFJUczdRVUZIUmp0RlFVTkZPenM3UVVGUlJqdEJRVUZCTzBGQlFVRTdRVUZCUVR0QlFVRkJPMEZCUVVFN1FVRkJRVHRCUVVGQk8wRkJRVUU3UVVGQlFUdEJRVUZCTzBGQlFVRTdRVUZCUVR0QlFVRkJPMFZCVDBVN08wRkJSMFk3UVVGQlFUdEJRVUZCTzBGQlFVRTdRVUZCUVR0QlFVRkJPMEZCUVVFN1FVRkJRVHRCUVVGQk8wRkJRVUU3UVVGQlFUdEJRVUZCTzBGQlFVRTdRVUZCUVR0QlFVRkJPMEZCUVVFN1FVRkJRVHRCUVVGQk8wRkJRVUU3UVVGQlFUdEJRVUZCTzBGQlFVRTdRVUZCUVR0QlFVRkJPMEZCUVVFN1FVRkJRVHRCUVVGQk8wRkJRVUU3UlVGalJUczdRVUZGUmp0QlFVRkJPMEZCUVVFN1FVRkJRVHRCUVVGQk8wRkJRVUU3UVVGQlFUdEJRVUZCTzBGQlFVRTdRVUZCUVR0QlFVRkJPMEZCUVVFN1FVRkJRVHRCUVVGQk8wRkJRVUU3UVVGQlFUdEJRVUZCTzBGQlFVRTdRVUZCUVR0QlFVRkJPMEZCUVVFN1FVRkJRVHRCUVVGQk8wRkJRVUU3UVVGQlFUdEJRVUZCTzBGQlFVRTdRVUZCUVR0RlFXTkZPenRCUVVkR08wVkJRMFU3UVVGQlFUdEpRVU5GT3p0RlFVVkdPMEZCUVVFN1FVRkJRVHRCUVVGQk8wbEJSVVU3TzBWQlJVWTdRVUZCUVR0QlFVRkJPMEZCUVVFN1NVRkZSVHM3TzBGQlMwNDdSVUZEUlR0RlFVTkJPMFZCUTBFN1JVRkRRVHRGUVVOQk96dEJRVWRHTzBWQlEwVTdSVUZEUVR0RlFVTkJPMFZCUTBFN08wRkJSMFk3UVVGQlFUdEZRVVZGT3p0QlFVZEdPMFZCUTBVN08wRkJSVUU3UlVGRFJUdEZRVU5CT3p0QlFVVkJPMFZCUTBVN08wRkJSMFk3UlVGRFJUczdRVUZMVGp0RlFVTkZPenRCUVVkR08wRkJRVUU3UlVGRlJUczdRVU12YlVKRk8wRkJRVUU3UlVScmJrSkJPMFZCUTBFN08wRkJTMFk3UlVGRFJUczdRVUZIUmp0QlFVRkJPMFZCUlVVN08wRkJTVW83UlVGRFJUczdRVU51YjBKRk8wVkVjMjlDUVRzN1FVRkhSanRGUVVORk96dEJRekZ2UWtFN1JVUTJiMEpGT3p0QlFVdE9PMFZCUTBVN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlEwRTdPMEZCUjBZN1JVRkRSVHRGUVVOQk96dEJRVVZCTzBWQlEwVTdSVUZEUVRzN1FVRkhSanRGUVVORk8wVkJRMEU3TzBGQlNVRTdSVUZEUlRzN1FVRkhSanRGUVVORk96dEJRVXRPTzBWQlEwVTdPMEZCUlVFN1JVRkRSVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CTzBWQlEwRTdSVUZEUVR0RlFVTkJPMFZCUTBFN08wRkJSMFk3UlVGRFJUdEZRVU5CTzBWQlEwRTdPMEZEZG5OQ1FUdEZSREJ6UWtVN1JVRkRRVHM3UVVGSFJqdEZRVU5GTzBWQlEwRTdSVUZEUVR0RlFVTkJPenRCUVV0T08wVkJRMFU3UlVGRFFUczdRVUZGUVR0RlFVVkZPMFZCUTBFN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUczdRVUZIUmp0RlFVVkZPenRCUVVkR08wVkJRMFU3UlVGRFFUdEZRVU5CTzBWQlEwRTdSVUZEUVR0RlFVTkJPMFZCUTBFN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUczdRVUZIUmp0RlFVTkZPMFZCUTBFN1JVRkRRVHRGUVVOQk8wVkJRMEU3UlVGRFFUdEZRVU5CT3pzN1FVRlJSanRGUVVORkxFOUZhRmh2UWpzN1FVWnhXSEJDTzBGQlFVRTdRVUZCUVR0RlFVVkZMRmxGTjIxQ1N6czdRVVpyYmtKSU8wRkJRVUU3UlVGRFJTeFhSVFZxUWtjN08wRkdLMnBDVER0QlFVRkJPMFZCUTBVc1YwVXZha0pIT3p0QlJtdHJRa3c3UVVGQlFUdEZRVU5GTEZkRmJHdENSenM3UVVaeGEwSk1PMEZCUVVFN1JVRkRSU3hYUlhKclFrYzdPMEZHZDJ0Q1REdEJRVUZCTzBWQlEwVXNWMFY0YTBKSE96dEJSakpyUWt3N1FVRkJRVHRGUVVORkxGZEZhRzFDU3pzN1FVWnhiVUpRTzBGQlFVRTdSVUZEUlN4aFJTOXRRbEU3TzBGR2EyNUNWanRCUVVGQk8wVkJRMFVzWVVWc2JrSlpPenRCUm5WdVFtUTdRVUZCUVR0RlFVTkZMRmRGTjIxQ1J6czdRVVpuYmtKTU8wRkJRVUU3UlVGRFJTeFhSV3h1UWtjN08wRkdjVzVDVER0QlFVRkJPMFZCUTBVc1YwVjJia0pIT3p0QlJqaHVRbFE3UlVGRFJUczdRVUZIUmp0RlFVTkZPenRCUVVkR08wVkJRMFVzVTBWMmFVSmpPenRCUmpCcFFtaENPMFZCUlVVN08wRkJSVUU3UlVGRFJUdEpRVU5GTEU5Rk0zVkNRenM3UlVZMmRVSklPMEZCUVVFN1FVRkJRVHRKUVVWRkxGRkZMM1ZDUXpzN1JVWnBka0pJTzBGQlFVRTdRVUZCUVR0SlFVVkZMRTFGYm5aQ1F6czdPMEZHZDNaQ1VEdEZRVU5GT3p0QlFVZEdPMFZCUTBVc1VVVTNka0pMT3p0QlJtZDNRbEE3UVVGQlFUdEZRVVZGTEUxRmJIZENTenM3UVVaeGQwSlFPMFZCUTBVc1VVVjBkMEpMT3p0QlJuZDNRbEE3UlVGRFJTeFBSWHAzUWtzN08wRkdNbmRDVER0RlFVTkZMR05GT1hOQ2QwSTdPMEZHYVhSQ01VSTdSVUZEUlN4alJTOWxWenM3UVVadFptWTdSVUZEUlR0RlFVTkJMRTlGZEhoQ1N6dEZSblY0UWt3c1dVVndkVUpMT3p0QlJuTjFRa3c3UlVGRFJUczdRVUZMVGp0RlFVTkZMR1ZGY25aQ1ZUdEZSbk4yUWxZN096dEJRVkZHTzBWQlEwVXNUMGQwTVVKUE96dEJTREl4UWxBN1FVRkJRVHRGUVVORkxGbEhhRE5DUlRzN1FVaHJNMEpLTzBGQlFVRTdRVUZCUVR0RlFVVkZMRmxITlRKQ1N6czdRVWhwTTBKSU8wRkJRVUU3UlVGRFJTeFhSV2gwUWtjN08wRkdiWFJDVER0QlFVRkJPMFZCUTBVc1YwVnVkRUpIT3p0QlJuTjBRa3c3UVVGQlFUdEZRVU5GTEZkRmRIUkNSenM3UVVaNWRFSk1PMEZCUVVFN1JVRkRSU3hYUlhwMFFrYzdPMEZHTkhSQ1REdEJRVUZCTzBWQlEwVXNWMFUxZEVKSE96dEJSaXQwUWt3N1FVRkJRVHRGUVVORkxGZEZjSFpDU3pzN1FVWjVka0pRTzBGQlFVRTdSVUZEUlN4aFJXNTNRbEU3TzBGR2MzZENWanRCUVVGQk8wVkJRMFVzWVVWMGQwSlpPenRCUmpKM1FtUTdRVUZCUVR0RlFVTkZMRmRGYW5kQ1J6czdRVVp2ZDBKTU8wRkJRVUU3UlVGRFJTeFhSWFIzUWtjN08wRkdlWGRDVER0QlFVRkJPMFZCUTBVc1YwVXpkMEpIT3p0QlJtdDRRbFE3UlVGRFJUczdRVUZIUmp0RlFVTkZPenRCUVVkR08wVkJRMFVzVTBVemNrSmpPMFZHTkhKQ1pDeFpSM0F6UWtVN08wRklkVE5DU2p0RlFVTkZMRmxIZUROQ1JUczdRVWd5TTBKS08wVkJSVVU3UlVGRFFTeFpSemt6UWtVN08wRklaelJDUmp0RlFVTkZPMGxCUTBVc1QwZHVPRUpET3p0RlNIRTRRa2c3UVVGQlFUdEJRVUZCTzBsQlJVVXNVVWQyT0VKRE96dEZTSGs0UWtnN1FVRkJRVHRCUVVGQk8wbEJSVVVzVFVjek9FSkRPenM3UVVobk9VSlFPMFZCUTBVN08wRkJSMFk3UlVGRFJTeFJSM0k1UWtzN08wRklkemxDVUR0RlFVTkZMRkZIZWpsQ1N6czdRVWcwT1VKUU8wRkJRVUU3UlVGRlJTeE5Sems1UWtzN08wRklhU3RDVUR0RlFVTkZMRTlIYkN0Q1N6czdRVWh2SzBKTU8wVkJRMFVzWTBWNk1rSjNRanM3UVVZME1rSXhRanRGUVVORkxHTkhiRFZDVnpzN1FVaHpOVUptTzBWQlEwVTdSVUZEUVN4UFJ5OHJRa3M3UlVobkwwSk1MRmxITVN0Q1N6czdRVWcwSzBKTU8wVkJRMFU3TzBGQlMwNDdSVUZEUlN4bFJXZzFRbFU3UlVacE5VSldJaXdpWm1sc1pTSTZJblpsYm1SdmNpOXNhV0p6TDNGMWFXeHNMMlZrYVhSdmNpNWpjM01pTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lJdkx5QkZaR2wwYjNKY2JpOHZJQ29xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpcGNibHh1UUhWelpTQW5MaTR2TGk0dmMyTnpjeTlmWW05dmRITjBjbUZ3TFdWNGRHVnVaR1ZrTDJsdVkyeDFaR1VuSUdGeklHeHBaMmgwTzF4dVFIVnpaU0FuTGk0dkxpNHZjMk56Y3k5ZlltOXZkSE4wY21Gd0xXVjRkR1Z1WkdWa0wybHVZMngxWkdVdFpHRnlheWNnWVhNZ1pHRnlhenRjYmtCcGJYQnZjblFnSnk0dUx5NHVMM05qYzNNdlgyTjFjM1J2YlMxMllYSnBZV0pzWlhNdmJHbGljeWM3WEc1Y2JpOHZJR052YlcxdmJpQnpkSGxzWlhOY2JpNXhiQzFqYjI1MFlXbHVaWElnZTF4dUlDQmthWE53YkdGNU9pQmliRzlqYXp0Y2JpQWdiV0Z5WjJsdU9pQXdPMXh1SUNCd2IzTnBkR2x2YmpvZ2NtVnNZWFJwZG1VN1hHNWNiaUFnSmk1eGJDMWthWE5oWW14bFpDQXVjV3d0WldScGRHOXlJSFZzVzJSaGRHRXRZMmhsWTJ0bFpGMGdQaUJzYVRvNlltVm1iM0psSUh0Y2JpQWdJQ0J3YjJsdWRHVnlMV1YyWlc1MGN6b2dibTl1WlR0Y2JpQWdmVnh1WEc0Z0lDWXVjV3d0WkdsellXSnNaV1FnTG5Gc0xYUnZiMngwYVhBZ2UxeHVJQ0FnSUhacGMybGlhV3hwZEhrNklHaHBaR1JsYmp0Y2JpQWdmVnh1ZlZ4dVhHNHVjV3d0WTJ4cGNHSnZZWEprSUh0Y2JpQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNCdmRtVnlabXh2ZHkxNU9pQm9hV1JrWlc0N1hHNGdJR3hsWm5RNklDMDJNalV3Y21WdE8xeHVJQ0JvWldsbmFIUTZJREF1TURZeU5YSmxiVHRjYmlBZ2RHOXdPaUExTUNVN1hHNWNiaUFnUUdsdVkyeDFaR1VnWVhCd0xYSjBiQ0I3WEc0Z0lDQWdiR1ZtZERvZ1lYVjBienRjYmlBZ0lDQnlhV2RvZERvZ0xUWXlOVEJ5WlcwN1hHNGdJSDFjYm4xY2JseHVMbkZzTFdWa2FYUnZjaUI3WEc0Z0lHOTJaWEptYkc5M0xYazZJR0YxZEc4N1hHNGdJR2hsYVdkb2REb2dNVEF3SlR0Y2JpQWdkR0ZpTFhOcGVtVTZJRFE3WEc0Z0lDMXRiM290ZEdGaUxYTnBlbVU2SURRN1hHNGdJR0p2ZUMxemFYcHBibWM2SUdKdmNtUmxjaTFpYjNnN1hHNGdJR1JwYzNCc1lYazZJR0pzYjJOck8xeHVJQ0J2ZFhSc2FXNWxPaUJ1YjI1bE8xeHVJQ0IzYjNKa0xYZHlZWEE2SUdKeVpXRnJMWGR2Y21RN1hHNGdJSGRvYVhSbExYTndZV05sT2lCd2NtVXRkM0poY0R0Y2JseHVJQ0ErSUNvZ2UxeHVJQ0FnSUdOMWNuTnZjam9nZEdWNGREdGNiaUFnZlZ4dVhHNGdJQ1l1Y1d3dFlteGhibXM2T21KbFptOXlaU0I3WEc0Z0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNBZ0lHTnZiblJsYm5RNklHRjBkSElvWkdGMFlTMXdiR0ZqWldodmJHUmxjaWs3WEc0Z0lDQWdabTl1ZEMxemRIbHNaVG9nYVhSaGJHbGpPMXh1SUNBZ0lHeGxablE2SURBN1hHNGdJQ0FnY21sbmFIUTZJREE3WEc0Z0lDQWdjRzlwYm5SbGNpMWxkbVZ1ZEhNNklHNXZibVU3WEc0Z0lIMWNibjFjYmx4dUx5OGdWR2hsYldWelhHNHVjV3d0YzI1dmR5eGNiaTV4YkMxaWRXSmliR1VnZTF4dUlDQmliM2d0YzJsNmFXNW5PaUJpYjNKa1pYSXRZbTk0TzF4dVhHNGdJQ29nZTF4dUlDQWdJR0p2ZUMxemFYcHBibWM2SUdKdmNtUmxjaTFpYjNnN1hHNGdJSDFjYmx4dUlDQXVjV3d0YjNWMExXSnZkSFJ2YlN4Y2JpQWdMbkZzTFc5MWRDMTBiM0FnZTF4dUlDQWdJSFpwYzJsaWFXeHBkSGs2SUdocFpHUmxianRjYmlBZ2ZWeHVYRzRnSUM1eGJDMW9hV1JrWlc0Z2UxeHVJQ0FnSUdScGMzQnNZWGs2SUc1dmJtVWdJV2x0Y0c5eWRHRnVkRHRjYmlBZ2ZWeHVYRzRnSUM1eGJDMWxkbVZ1SUh0Y2JpQWdJQ0JtYVd4c0xYSjFiR1U2SUdWMlpXNXZaR1E3WEc0Z0lIMWNibHh1SUNBdWNXd3RaVzF3ZEhrZ2UxeHVJQ0FnSUdacGJHdzZJRzV2Ym1VN1hHNGdJSDFjYmx4dUlDQXVjV3d0ZEhKaGJuTndZWEpsYm5RZ2UxeHVJQ0FnSUc5d1lXTnBkSGs2SURBdU5EdGNiaUFnZlZ4dVhHNGdJQzV4YkMxMGFHbHVMRnh1SUNBdWNXd3RjM1J5YjJ0bExuRnNMWFJvYVc0Z2UxeHVJQ0FnSUhOMGNtOXJaUzEzYVdSMGFEb2dNVHRjYmlBZ2ZWeHVYRzRnSUM1eGJDMWxaR2wwYjNJZ1lTQjdYRzRnSUNBZ2RHVjRkQzFrWldOdmNtRjBhVzl1T2lCMWJtUmxjbXhwYm1VN1hHNGdJSDFjYmx4dUlDQXVjV3d0WkdseVpXTjBhVzl1TG5Gc0xXRmpkR2wyWlNCN1hHNGdJQ0FnYzNabk9teGhjM1F0WTJocGJHUWdlMXh1SUNBZ0lDQWdaR2x6Y0d4aGVUb2dhVzVzYVc1bE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUhOMlp6cG1hWEp6ZEMxamFHbHNaQ0I3WEc0Z0lDQWdJQ0JrYVhOd2JHRjVPaUJ1YjI1bE8xeHVJQ0FnSUgxY2JpQWdmVnh1WEc0Z0lDNXhiQzFrYVhKbFkzUnBiMjRnYzNabk9teGhjM1F0WTJocGJHUWdlMXh1SUNBZ0lHUnBjM0JzWVhrNklHNXZibVU3WEc0Z0lIMWNibHh1SUNBbUxuRnNMWFJ2YjJ4aVlYSXNYRzRnSUNZZ0xuRnNMWFJ2YjJ4aVlYSWdlMXh1SUNBZ0lHSnZlQzF6YVhwcGJtYzZJR0p2Y21SbGNpMWliM2c3WEc0Z0lDQWdjR0ZrWkdsdVp6b2dNQzQxY21WdE8xeHVYRzRnSUNBZ0pqbzZZV1owWlhJZ2UxeHVJQ0FnSUNBZ1kyeGxZWEk2SUdKdmRHZzdYRzRnSUNBZ0lDQmpiMjUwWlc1ME9pQW5KenRjYmlBZ0lDQWdJR1JwYzNCc1lYazZJSFJoWW14bE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUdKMWRIUnZiaUI3WEc0Z0lDQWdJQ0JtYkc5aGREb2diR1ZtZER0Y2JpQWdJQ0FnSUdScGMzQnNZWGs2SUdsdWJHbHVaUzFpYkc5amF6dGNiaUFnSUNBZ0lIQmhaR1JwYm1jNklEQXVNVGczTlhKbGJTQXdMak14TWpWeVpXMDdYRzRnSUNBZ0lDQm9aV2xuYUhRNklERXVOWEpsYlR0Y2JpQWdJQ0FnSUhkcFpIUm9PaUF4TGpjMWNtVnRPMXh1SUNBZ0lDQWdZbUZqYTJkeWIzVnVaRG9nYm05dVpUdGNiaUFnSUNBZ0lHSnZjbVJsY2pvZ2JtOXVaVHRjYmlBZ0lDQWdJR04xY25OdmNqb2djRzlwYm5SbGNqdGNibHh1SUNBZ0lDQWdKanBoWTNScGRtVTZhRzkyWlhJZ2UxeHVJQ0FnSUNBZ0lDQnZkWFJzYVc1bE9pQnViMjVsTzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNCQWFXNWpiSFZrWlNCaGNIQXRjblJzSUh0Y2JpQWdJQ0FnSUNBZ1pteHZZWFE2SUhKcFoyaDBPMXh1SUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0J6ZG1jZ2UxeHVJQ0FnSUNBZ0lDQm9aV2xuYUhRNklERXdNQ1U3WEc0Z0lDQWdJQ0FnSUdac2IyRjBPaUJzWldaME8xeHVYRzRnSUNBZ0lDQWdJRUJwYm1Oc2RXUmxJR0Z3Y0MxeWRHd2dlMXh1SUNBZ0lDQWdJQ0FnSUdac2IyRjBPaUJ5YVdkb2REdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNibHh1SUNBZ0lHbHVjSFYwTG5Gc0xXbHRZV2RsVzNSNWNHVTlKMlpwYkdVblhTQjdYRzRnSUNBZ0lDQmthWE53YkdGNU9pQnViMjVsTzF4dUlDQWdJSDFjYmlBZ2ZWeHVYRzRnSUM1eGJDMTBiMjlzZEdsd0lIdGNiaUFnSUNCMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpWa29NQzQyTWpWeVpXMHBPMXh1SUNBZ0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNibHh1SUNBZ0lDWXVjV3d0Wm14cGNDQjdYRzRnSUNBZ0lDQjBjbUZ1YzJadmNtMDZJSFJ5WVc1emJHRjBaVmtvTFRBdU5qSTFjbVZ0S1R0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JoSUh0Y2JpQWdJQ0FnSUdOMWNuTnZjam9nY0c5cGJuUmxjanRjYmlBZ0lDQWdJSFJsZUhRdFpHVmpiM0poZEdsdmJqb2dibTl1WlR0Y2JpQWdJQ0I5WEc0Z0lIMWNibHh1SUNBdWNXd3RabTl5YldGMGN5QjdYRzRnSUNBZ1pHbHpjR3hoZVRvZ2FXNXNhVzVsTFdKc2IyTnJPMXh1SUNBZ0lHMWhjbWRwYmkxeWFXZG9kRG9nTUM0NU16YzFjbVZ0TzF4dUlDQWdJSFpsY25ScFkyRnNMV0ZzYVdkdU9pQnRhV1JrYkdVN1hHNWNiaUFnSUNCQWFXNWpiSFZrWlNCaGNIQXRjblJzSUh0Y2JpQWdJQ0FnSUcxaGNtZHBiaTF5YVdkb2REb2dNRHRjYmlBZ0lDQWdJRzFoY21kcGJpMXNaV1owT2lBd0xqa3pOelZ5WlcwN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnSmpvNllXWjBaWElnZTF4dUlDQWdJQ0FnWTI5dWRHVnVkRG9nSnljN1hHNGdJQ0FnSUNCa2FYTndiR0Y1T2lCMFlXSnNaVHRjYmlBZ0lDQWdJR05zWldGeU9pQmliM1JvTzF4dUlDQWdJSDFjYmlBZ2ZWeHVYRzRnSUM1eGJDMXdhV05yWlhJZ2UxeHVJQ0FnSUhabGNuUnBZMkZzTFdGc2FXZHVPaUJ0YVdSa2JHVTdYRzRnSUNBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHVJQ0FnSUdobGFXZG9kRG9nTVM0MWNtVnRPMXh1SUNBZ0lHUnBjM0JzWVhrNklHbHViR2x1WlMxaWJHOWphenRjYmlBZ0lDQm1iRzloZERvZ2JHVm1kRHRjYmx4dUlDQWdJRUJwYm1Oc2RXUmxJR0Z3Y0MxeWRHd2dlMXh1SUNBZ0lDQWdabXh2WVhRNklISnBaMmgwTzF4dUlDQWdJSDFjYmx4dUlDQWdJQ1l1Y1d3dFpYaHdZVzVrWldRZ0xuRnNMWEJwWTJ0bGNpMXZjSFJwYjI1eklIdGNiaUFnSUNBZ0lIUnZjRG9nTVRBd0pUdGNiaUFnSUNBZ0lHUnBjM0JzWVhrNklHSnNiMk5yTzF4dUlDQWdJQ0FnZWkxcGJtUmxlRG9nTVR0Y2JpQWdJQ0FnSUcxaGNtZHBiaTEwYjNBNklDMHdMakEyTWpWeVpXMDdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0ppNXhiQzFvWldGa1pYSXNYRzRnSUNBZ0ppNXhiQzFtYjI1MExGeHVJQ0FnSUNZdWNXd3RjMmw2WlNCN1hHNGdJQ0FnSUNBdWNXd3RjR2xqYTJWeUxXeGhZbVZzVzJSaGRHRXRiR0ZpWld4ZE9tNXZkQ2hiWkdGMFlTMXNZV0psYkQwbkoxMHBPanBpWldadmNtVXNYRzRnSUNBZ0lDQXVjV3d0Y0dsamEyVnlMV2wwWlcxYlpHRjBZUzFzWVdKbGJGMDZibTkwS0Z0a1lYUmhMV3hoWW1Wc1BTY25YU2s2T21KbFptOXlaU0I3WEc0Z0lDQWdJQ0FnSUdOdmJuUmxiblE2SUdGMGRISW9aR0YwWVMxc1lXSmxiQ2s3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVnh1WEc0Z0lDQWdKaTV4YkMxb1pXRmtaWElnZTF4dUlDQWdJQ0FnZDJsa2RHZzZJRFl1TVRJMWNtVnRPMXh1WEc0Z0lDQWdJQ0F1Y1d3dGNHbGphMlZ5TFd4aFltVnNMRnh1SUNBZ0lDQWdMbkZzTFhCcFkydGxjaTFwZEdWdElIdGNiaUFnSUNBZ0lDQWdKam82WW1WbWIzSmxJSHRjYmlBZ0lDQWdJQ0FnSUNCamIyNTBaVzUwT2lBblRtOXliV0ZzSnp0Y2JpQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJQ1piWkdGMFlTMTJZV3gxWlQwbk1TZGRPanBpWldadmNtVWdlMXh1SUNBZ0lDQWdJQ0FnSUdOdmJuUmxiblE2SUNkSVpXRmthVzVuSURFbk8xeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnSmx0a1lYUmhMWFpoYkhWbFBTY3lKMTA2T21KbFptOXlaU0I3WEc0Z0lDQWdJQ0FnSUNBZ1kyOXVkR1Z1ZERvZ0owaGxZV1JwYm1jZ01pYzdYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNBbVcyUmhkR0V0ZG1Gc2RXVTlKek1uWFRvNlltVm1iM0psSUh0Y2JpQWdJQ0FnSUNBZ0lDQmpiMjUwWlc1ME9pQW5TR1ZoWkdsdVp5QXpKenRjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lDWmJaR0YwWVMxMllXeDFaVDBuTkNkZE9qcGlaV1p2Y21VZ2UxeHVJQ0FnSUNBZ0lDQWdJR052Ym5SbGJuUTZJQ2RJWldGa2FXNW5JRFFuTzF4dUlDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdKbHRrWVhSaExYWmhiSFZsUFNjMUoxMDZPbUpsWm05eVpTQjdYRzRnSUNBZ0lDQWdJQ0FnWTI5dWRHVnVkRG9nSjBobFlXUnBibWNnTlNjN1hHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0FtVzJSaGRHRXRkbUZzZFdVOUp6WW5YVG82WW1WbWIzSmxJSHRjYmlBZ0lDQWdJQ0FnSUNCamIyNTBaVzUwT2lBblNHVmhaR2x1WnlBMkp6dGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNibHh1SUNBZ0lDWXVjV3d0Wm05dWRDQjdYRzRnSUNBZ0lDQjNhV1IwYURvZ05pNDNOWEpsYlR0Y2JseHVJQ0FnSUNBZ0xuRnNMWEJwWTJ0bGNpMXNZV0psYkN4Y2JpQWdJQ0FnSUM1eGJDMXdhV05yWlhJdGFYUmxiU0I3WEc0Z0lDQWdJQ0FnSUNZNk9tSmxabTl5WlNCN1hHNGdJQ0FnSUNBZ0lDQWdZMjl1ZEdWdWREb2dKMU5oYm5NZ1UyVnlhV1luTzF4dUlDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdKbHRrWVhSaExYWmhiSFZsUFNkelpYSnBaaWRkT2pwaVpXWnZjbVVnZTF4dUlDQWdJQ0FnSUNBZ0lHTnZiblJsYm5RNklDZFRaWEpwWmljN1hHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0FtVzJSaGRHRXRkbUZzZFdVOUoyMXZibTl6Y0dGalpTZGRPanBpWldadmNtVWdlMXh1SUNBZ0lDQWdJQ0FnSUdOdmJuUmxiblE2SUNkTmIyNXZjM0JoWTJVbk8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0ppNXhiQzF6YVhwbElIdGNiaUFnSUNBZ0lIZHBaSFJvT2lBMkxqRXlOWEpsYlR0Y2JseHVJQ0FnSUNBZ0xuRnNMWEJwWTJ0bGNpMXNZV0psYkN4Y2JpQWdJQ0FnSUM1eGJDMXdhV05yWlhJdGFYUmxiU0I3WEc0Z0lDQWdJQ0FnSUNZNk9tSmxabTl5WlNCN1hHNGdJQ0FnSUNBZ0lDQWdZMjl1ZEdWdWREb2dKMDV2Y20xaGJDYzdYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNBbVcyUmhkR0V0ZG1Gc2RXVTlKM050WVd4c0oxMDZPbUpsWm05eVpTQjdYRzRnSUNBZ0lDQWdJQ0FnWTI5dWRHVnVkRG9nSjFOdFlXeHNKenRjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lDWmJaR0YwWVMxMllXeDFaVDBuYkdGeVoyVW5YVG82WW1WbWIzSmxJSHRjYmlBZ0lDQWdJQ0FnSUNCamIyNTBaVzUwT2lBblRHRnlaMlVuTzF4dUlDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdKbHRrWVhSaExYWmhiSFZsUFNkb2RXZGxKMTA2T21KbFptOXlaU0I3WEc0Z0lDQWdJQ0FnSUNBZ1kyOXVkR1Z1ZERvZ0owaDFaMlVuTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dVhHNGdJQ0FnSmpwdWIzUW9MbkZzTFdOdmJHOXlMWEJwWTJ0bGNpazZibTkwS0M1eGJDMXBZMjl1TFhCcFkydGxjaWtnYzNabklIdGNiaUFnSUNBZ0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNiaUFnSUNBZ0lIUnZjRG9nTlRBbE8xeHVJQ0FnSUNBZ2NtbG5hSFE2SURBN1hHNGdJQ0FnSUNCdFlYSm5hVzR0ZEc5d09pQXRNQzQxTmpJMWNtVnRPMXh1SUNBZ0lDQWdkMmxrZEdnNklERXVNVEkxY21WdE8xeHVYRzRnSUNBZ0lDQkFhVzVqYkhWa1pTQmhjSEF0Y25Sc0lIdGNiaUFnSUNBZ0lDQWdjbWxuYUhRNklHRjFkRzg3WEc0Z0lDQWdJQ0FnSUd4bFpuUTZJREE3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVnh1SUNCOVhHNWNiaUFnTG5Gc0xYQnBZMnRsY2kxc1lXSmxiQ0I3WEc0Z0lDQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh1SUNBZ0lHUnBjM0JzWVhrNklHbHViR2x1WlMxaWJHOWphenRjYmlBZ0lDQndZV1JrYVc1bkxYSnBaMmgwT2lBd0xqRXlOWEpsYlR0Y2JpQWdJQ0J3WVdSa2FXNW5MV3hsWm5RNklEQXVOWEpsYlR0Y2JpQWdJQ0JvWldsbmFIUTZJREV3TUNVN1hHNGdJQ0FnZDJsa2RHZzZJREV3TUNVN1hHNGdJQ0FnWW05eVpHVnlPaUF3TGpBMk1qVnlaVzBnYzI5c2FXUWdkSEpoYm5Od1lYSmxiblE3WEc0Z0lDQWdZM1Z5YzI5eU9pQndiMmx1ZEdWeU8xeHVYRzRnSUNBZ0pqbzZZbVZtYjNKbElIdGNiaUFnSUNBZ0lHeHBibVV0YUdWcFoyaDBPaUF4TGpNM05YSmxiVHRjYmlBZ0lDQWdJR1JwYzNCc1lYazZJR2x1YkdsdVpTMWliRzlqYXp0Y2JpQWdJQ0I5WEc0Z0lIMWNibHh1SUNBdWNXd3RjR2xqYTJWeUxXOXdkR2x2Ym5NZ2UxeHVJQ0FnSUhCaFpHUnBibWM2SURBdU1qVnlaVzBnTUM0MWNtVnRPMXh1SUNBZ0lHMXBiaTEzYVdSMGFEb2dNVEF3SlR0Y2JpQWdJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEc0Z0lDQWdaR2x6Y0d4aGVUb2dibTl1WlR0Y2JpQWdJQ0IzYUdsMFpTMXpjR0ZqWlRvZ2JtOTNjbUZ3TzF4dVhHNGdJQ0FnTG5Gc0xYQnBZMnRsY2kxcGRHVnRJSHRjYmlBZ0lDQWdJSEJoWkdScGJtY3RZbTkwZEc5dE9pQXdMak14TWpWeVpXMDdYRzRnSUNBZ0lDQndZV1JrYVc1bkxYUnZjRG9nTUM0ek1USTFjbVZ0TzF4dUlDQWdJQ0FnWkdsemNHeGhlVG9nWW14dlkyczdYRzRnSUNBZ0lDQmpkWEp6YjNJNklIQnZhVzUwWlhJN1hHNGdJQ0FnZlZ4dUlDQjlYRzVjYmlBZ0xuRnNMV052Ykc5eUxYQnBZMnRsY2l4Y2JpQWdMbkZzTFdsamIyNHRjR2xqYTJWeUlIdGNiaUFnSUNCM2FXUjBhRG9nTVM0M05YSmxiVHRjYmx4dUlDQWdJQzV4YkMxd2FXTnJaWEl0YkdGaVpXd2dlMXh1SUNBZ0lDQWdjR0ZrWkdsdVp6b2dNQzR4TWpWeVpXMGdNQzR5TlhKbGJUdGNiaUFnSUNCOVhHNGdJSDFjYmx4dUlDQXVjV3d0YVdOdmJpMXdhV05yWlhJZ2UxeHVJQ0FnSUM1eGJDMXdhV05yWlhJdGIzQjBhVzl1Y3lCN1hHNGdJQ0FnSUNCd1lXUmthVzVuT2lBd0xqSTFjbVZ0SURBN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnTG5Gc0xYQnBZMnRsY2kxcGRHVnRJSHRjYmlBZ0lDQWdJSEJoWkdScGJtYzZJREF1TVRJMWNtVnRJREF1TWpWeVpXMDdYRzRnSUNBZ0lDQjNhV1IwYURvZ01TNDFjbVZ0TzF4dUlDQWdJQ0FnYUdWcFoyaDBPaUF4TGpWeVpXMDdYRzRnSUNBZ2ZWeHVJQ0I5WEc1Y2JpQWdMbkZzTFdOdmJHOXlMWEJwWTJ0bGNpQjdYRzRnSUNBZ0xuRnNMWEJwWTJ0bGNpMXZjSFJwYjI1eklIdGNiaUFnSUNBZ0lIQmhaR1JwYm1jNklEQXVNVGczTlhKbGJTQXdMak14TWpWeVpXMDdYRzRnSUNBZ0lDQjNhV1IwYURvZ09TNDFjbVZ0TzF4dUlDQWdJSDFjYmx4dUlDQWdJQzV4YkMxd2FXTnJaWEl0YVhSbGJTQjdYRzRnSUNBZ0lDQm1iRzloZERvZ2JHVm1kRHRjYmlBZ0lDQWdJRzFoY21kcGJqb2dNQzR4TWpWeVpXMDdYRzRnSUNBZ0lDQndZV1JrYVc1bk9pQXdPMXh1SUNBZ0lDQWdkMmxrZEdnNklERnlaVzA3WEc0Z0lDQWdJQ0JvWldsbmFIUTZJREZ5WlcwN1hHNGdJQ0FnSUNCaWIzSmtaWEk2SURBdU1EWXlOWEpsYlNCemIyeHBaQ0IwY21GdWMzQmhjbVZ1ZER0Y2JseHVJQ0FnSUNBZ1FHbHVZMngxWkdVZ1lYQndMWEowYkNCN1hHNGdJQ0FnSUNBZ0lHWnNiMkYwT2lCeWFXZG9kRHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzVjYmlBZ0lDQW1MbkZzTFdKaFkydG5jbTkxYm1RZ0xuRnNMWEJwWTJ0bGNpMXBkR1Z0SUh0Y2JpQWdJQ0FnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNObVptWTdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0ppNXhiQzFqYjJ4dmNpQXVjV3d0Y0dsamEyVnlMV2wwWlcwZ2UxeHVJQ0FnSUNBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0l6QXdNRHRjYmlBZ0lDQjlYRzRnSUgxY2JseHVJQ0JBYVc1amJIVmtaU0JoY0hBdGNuUnNJSHRjYmlBZ0lDQXVjV3d0YVhSaGJHbGpJSE4yWnl4Y2JpQWdJQ0F1Y1d3dGJHbHpkQ0J6ZG1jc1hHNGdJQ0FnTG5Gc0xXbHVaR1Z1ZENCemRtY3NYRzRnSUNBZ0xuRnNMV1JwY21WamRHbHZiaUJ6ZG1jc1hHNGdJQ0FnTG5Gc0xXRnNhV2R1SUhOMlp5eGNiaUFnSUNBdWNXd3RiR2x1YXlCemRtY3NYRzRnSUNBZ0xuRnNMV2x0WVdkbElITjJaeXhjYmlBZ0lDQXVjV3d0WTJ4bFlXNGdjM1puSUh0Y2JpQWdJQ0FnSUhSeVlXNXpabTl5YlRvZ2MyTmhiR1ZZS0MweEtUdGNiaUFnSUNCOVhHNGdJSDFjYm4xY2JseHVMbkZzTFhOdWIzY2dlMXh1SUNBbUxuRnNMWFJ2YjJ4aVlYSXNYRzRnSUM1eGJDMTBiMjlzWW1GeUlIdGNiaUFnSUNCaVlXTnJaM0p2ZFc1a09pQWpabVptTzF4dUlDQWdJR0poWTJ0bmNtOTFibVF0WTJ4cGNEb2djR0ZrWkdsdVp5MWliM2c3WEc0Z0lIMWNibHh1SUNBdWNXd3RaV1JwZEc5eUlIdGNiaUFnSUNCdGFXNHRhR1ZwWjJoME9pQXhOWEpsYlR0Y2JpQWdJQ0JpWVdOclozSnZkVzVrT2lBalptWm1PMXh1SUNCOVhHNWNiaUFnTG5Gc0xYQnBZMnRsY2k1eGJDMWxlSEJoYm1SbFpDQXVjV3d0Y0dsamEyVnlMV3hoWW1Wc0lIdGNiaUFnSUNCNkxXbHVaR1Y0T2lBeU8xeHVJQ0FnSUdOdmJHOXlPaUFqWTJOaklDRnBiWEJ2Y25SaGJuUTdYRzVjYmlBZ0lDQXVjV3d0Wm1sc2JDQjdYRzRnSUNBZ0lDQm1hV3hzT2lBalkyTmpJQ0ZwYlhCdmNuUmhiblE3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdMbkZzTFhOMGNtOXJaU0I3WEc0Z0lDQWdJQ0J6ZEhKdmEyVTZJQ05qWTJNZ0lXbHRjRzl5ZEdGdWREdGNiaUFnSUNCOVhHNGdJSDFjYmx4dUlDQXVjV3d0YzNSeWIydGxJSHRjYmlBZ0lDQm1hV3hzT2lCdWIyNWxPMXh1SUNBZ0lITjBjbTlyWlMxM2FXUjBhRG9nTWp0Y2JpQWdJQ0J6ZEhKdmEyVXRiR2x1WldwdmFXNDZJSEp2ZFc1a08xeHVJQ0FnSUhOMGNtOXJaUzFzYVc1bFkyRndPaUJ5YjNWdVpEdGNiaUFnZlZ4dVhHNGdJQzV4YkMxemRISnZhMlV0YldsMFpYSWdlMXh1SUNBZ0lHWnBiR3c2SUc1dmJtVTdYRzRnSUNBZ2MzUnliMnRsTFhkcFpIUm9PaUF5TzF4dUlDQWdJSE4wY205clpTMXRhWFJsY214cGJXbDBPaUF4TUR0Y2JpQWdmVnh1WEc0Z0lDNXhiQzF3YVdOclpYSXRiR0ZpWld3Z2UxeHVJQ0FnSUdKdmNtUmxjam9nTUM0d05qSTFjbVZ0SUhOdmJHbGtJSFJ5WVc1emNHRnlaVzUwTzF4dUlDQjlYRzVjYmlBZ0xuRnNMWEJwWTJ0bGNpMXZjSFJwYjI1eklIdGNiaUFnSUNCaWIzSmtaWEk2SURBdU1EWXlOWEpsYlNCemIyeHBaQ0IwY21GdWMzQmhjbVZ1ZER0Y2JpQWdJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFqWm1abU8xeHVJQ0FnSUdKaFkydG5jbTkxYm1RdFkyeHBjRG9nY0dGa1pHbHVaeTFpYjNnN1hHNGdJSDFjYmx4dUlDQXVjV3d0WTI5c2IzSXRjR2xqYTJWeUlDNXhiQzF3YVdOclpYSXRhWFJsYlM1eGJDMXpaV3hsWTNSbFpDeGNiaUFnTG5Gc0xXTnZiRzl5TFhCcFkydGxjaUF1Y1d3dGNHbGphMlZ5TFdsMFpXMDZhRzkyWlhJZ2UxeHVJQ0FnSUdKdmNtUmxjaTFqYjJ4dmNqb2dJekF3TUR0Y2JpQWdmVnh1WEc0Z0lDNXhiQzEwYjI5c2RHbHdJSHRjYmlBZ0lDQmthWE53YkdGNU9pQm1iR1Y0TzF4dUlDQWdJSEJoWkdScGJtYzZJREF1TXpFeU5YSmxiU0F3TGpjMWNtVnRPMXh1SUNBZ0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTm1abVk3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaQzFqYkdsd09pQndZV1JrYVc1bkxXSnZlRHRjYmlBZ0lDQjNhR2wwWlMxemNHRmpaVG9nYm05M2NtRndPMXh1WEc0Z0lDQWdKam82WW1WbWIzSmxJSHRjYmlBZ0lDQWdJR052Ym5SbGJuUTZJQ2RXYVhOcGRDQlZVa3c2Snp0Y2JpQWdJQ0FnSUcxaGNtZHBiaTF5YVdkb2REb2dNQzQxY21WdE8xeHVJQ0FnSUNBZ2JHbHVaUzFvWldsbmFIUTZJREV1TmpJMWNtVnRPMXh1WEc0Z0lDQWdJQ0JBYVc1amJIVmtaU0JoY0hBdGNuUnNJSHRjYmlBZ0lDQWdJQ0FnYldGeVoybHVMWEpwWjJoME9pQXdPMXh1SUNBZ0lDQWdJQ0J0WVhKbmFXNHRiR1ZtZERvZ01DNDFjbVZ0TzF4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmx4dUlDQWdJR2x1Y0hWMFczUjVjR1U5SjNSbGVIUW5YU0I3WEc0Z0lDQWdJQ0JrYVhOd2JHRjVPaUJ1YjI1bE8xeHVJQ0FnSUNBZ2JXRnlaMmx1T2lBd08xeHVJQ0FnSUNBZ2NHRmtaR2x1WnpvZ01DNHhPRGMxY21WdElEQXVNekV5TlhKbGJUdGNiaUFnSUNBZ0lIZHBaSFJvT2lBeE1DNDJNalZ5WlcwN1hHNGdJQ0FnSUNCb1pXbG5hSFE2SURFdU5qSTFjbVZ0TzF4dUlDQWdJQ0FnWm05dWRDMXphWHBsT2lBd0xqZ3hNalZ5WlcwN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnWVM1eGJDMXdjbVYyYVdWM0lIdGNiaUFnSUNBZ0lHUnBjM0JzWVhrNklHbHViR2x1WlMxaWJHOWphenRjYmlBZ0lDQWdJSFpsY25ScFkyRnNMV0ZzYVdkdU9pQjBiM0E3WEc0Z0lDQWdJQ0J0WVhndGQybGtkR2c2SURFeUxqVnlaVzA3WEc0Z0lDQWdJQ0J2ZG1WeVpteHZkeTE0T2lCb2FXUmtaVzQ3WEc0Z0lDQWdJQ0IwWlhoMExXOTJaWEptYkc5M09pQmxiR3hwY0hOcGN6dGNiaUFnSUNCOVhHNWNiaUFnSUNCaExuRnNMV0ZqZEdsdmJqbzZZV1owWlhJZ2UxeHVJQ0FnSUNBZ1kyOXVkR1Z1ZERvZ0owVmthWFFuTzF4dUlDQWdJQ0FnYldGeVoybHVMV3hsWm5RNklERnlaVzA3WEc0Z0lDQWdJQ0J3WVdSa2FXNW5MWEpwWjJoME9pQXdMalZ5WlcwN1hHNGdJQ0FnSUNCaWIzSmtaWEl0Y21sbmFIUTZJREF1TURZeU5YSmxiU0J6YjJ4cFpDQWpZMk5qTzF4dVhHNGdJQ0FnSUNCQWFXNWpiSFZrWlNCaGNIQXRjblJzSUh0Y2JpQWdJQ0FnSUNBZ2JXRnlaMmx1TFd4bFpuUTZJREE3WEc0Z0lDQWdJQ0FnSUcxaGNtZHBiaTF5YVdkb2REb2dNWEpsYlR0Y2JpQWdJQ0FnSUNBZ2NHRmtaR2x1Wnkxc1pXWjBPaUF3TGpWeVpXMDdYRzRnSUNBZ0lDQWdJSEJoWkdScGJtY3RjbWxuYUhRNklEQTdYRzRnSUNBZ0lDQWdJR0p2Y21SbGNpMXlhV2RvZERvZ01EdGNiaUFnSUNBZ0lDQWdZbTl5WkdWeUxXeGxablE2SURBdU1EWXlOWEpsYlNCemIyeHBaQ0FqWTJOak8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JseHVJQ0FnSUdFdWNXd3RjbVZ0YjNabE9qcGlaV1p2Y21VZ2UxeHVJQ0FnSUNBZ1kyOXVkR1Z1ZERvZ0oxSmxiVzkyWlNjN1hHNGdJQ0FnSUNCdFlYSm5hVzR0YkdWbWREb2dNQzQxY21WdE8xeHVYRzRnSUNBZ0lDQkFhVzVqYkhWa1pTQmhjSEF0Y25Sc0lIdGNiaUFnSUNBZ0lDQWdiV0Z5WjJsdUxYSnBaMmgwT2lBd0xqVnlaVzA3WEc0Z0lDQWdJQ0FnSUcxaGNtZHBiaTFzWldaME9pQXdPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNibHh1SUNBZ0lHRWdlMXh1SUNBZ0lDQWdiR2x1WlMxb1pXbG5hSFE2SURFdU5qSTFjbVZ0TzF4dUlDQWdJSDFjYmx4dUlDQWdJQ1l1Y1d3dFpXUnBkR2x1WnlCaExuRnNMWEJ5WlhacFpYY3NYRzRnSUNBZ0ppNXhiQzFsWkdsMGFXNW5JR0V1Y1d3dGNtVnRiM1psSUh0Y2JpQWdJQ0FnSUdScGMzQnNZWGs2SUc1dmJtVTdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0ppNXhiQzFsWkdsMGFXNW5JR2x1Y0hWMFczUjVjR1U5SjNSbGVIUW5YU0I3WEc0Z0lDQWdJQ0JrYVhOd2JHRjVPaUJwYm14cGJtVXRZbXh2WTJzN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnSmk1eGJDMWxaR2wwYVc1bklHRXVjV3d0WVdOMGFXOXVPanBoWm5SbGNpQjdYRzRnSUNBZ0lDQmpiMjUwWlc1ME9pQW5VMkYyWlNjN1hHNGdJQ0FnSUNCaWIzSmtaWEl0Y21sbmFIUTZJREE3WEc0Z0lDQWdJQ0J3WVdSa2FXNW5MWEpwWjJoME9pQXdPMXh1WEc0Z0lDQWdJQ0JBYVc1amJIVmtaU0JoY0hBdGNuUnNJSHRjYmlBZ0lDQWdJQ0FnWW05eVpHVnlMV3hsWm5RNklEQTdYRzRnSUNBZ0lDQWdJSEJoWkdScGJtY3RiR1ZtZERvZ01EdGNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNWNiaUFnSUNBbVcyUmhkR0V0Ylc5a1pUMG5iR2x1YXlkZE9qcGlaV1p2Y21VZ2UxeHVJQ0FnSUNBZ1kyOXVkR1Z1ZERvZ0owVnVkR1Z5SUd4cGJtczZKenRjYmlBZ0lDQjlYRzVjYmlBZ0lDQW1XMlJoZEdFdGJXOWtaVDBuWm05eWJYVnNZU2RkT2pwaVpXWnZjbVVnZTF4dUlDQWdJQ0FnWTI5dWRHVnVkRG9nSjBWdWRHVnlJR1p2Y20xMWJHRTZKenRjYmlBZ0lDQjlYRzVjYmlBZ0lDQW1XMlJoZEdFdGJXOWtaVDBuZG1sa1pXOG5YVG82WW1WbWIzSmxJSHRjYmlBZ0lDQWdJR052Ym5SbGJuUTZJQ2RGYm5SbGNpQjJhV1JsYnpvbk8xeHVJQ0FnSUgxY2JpQWdmVnh1ZlZ4dVhHNHVjV3d0WW5WaVlteGxJSHRjYmlBZ0ppNXhiQzEwYjI5c1ltRnlMRnh1SUNBdWNXd3RkRzl2YkdKaGNpQjdYRzRnSUNBZ1luVjBkRzl1T21odmRtVnlMRnh1SUNBZ0lHSjFkSFJ2YmpwbWIyTjFjeXhjYmlBZ0lDQmlkWFIwYjI0dWNXd3RZV04wYVhabExGeHVJQ0FnSUM1eGJDMXdhV05yWlhJdGJHRmlaV3c2YUc5MlpYSXNYRzRnSUNBZ0xuRnNMWEJwWTJ0bGNpMXNZV0psYkM1eGJDMWhZM1JwZG1Vc1hHNGdJQ0FnTG5Gc0xYQnBZMnRsY2kxcGRHVnRPbWh2ZG1WeUxGeHVJQ0FnSUM1eGJDMXdhV05yWlhJdGFYUmxiUzV4YkMxelpXeGxZM1JsWkNCN1hHNGdJQ0FnSUNCamIyeHZjam9nSTJabVpqdGNiaUFnSUNCOVhHNWNiaUFnSUNCaWRYUjBiMjQ2YUc5MlpYSWdMbkZzTFhOMGNtOXJaU3hjYmlBZ0lDQmlkWFIwYjI0NlptOWpkWE1nTG5Gc0xYTjBjbTlyWlN4Y2JpQWdJQ0JpZFhSMGIyNHVjV3d0WVdOMGFYWmxJQzV4YkMxemRISnZhMlVzWEc0Z0lDQWdMbkZzTFhCcFkydGxjaTFzWVdKbGJEcG9iM1psY2lBdWNXd3RjM1J5YjJ0bExGeHVJQ0FnSUM1eGJDMXdhV05yWlhJdGJHRmlaV3d1Y1d3dFlXTjBhWFpsSUM1eGJDMXpkSEp2YTJVc1hHNGdJQ0FnTG5Gc0xYQnBZMnRsY2kxcGRHVnRPbWh2ZG1WeUlDNXhiQzF6ZEhKdmEyVXNYRzRnSUNBZ0xuRnNMWEJwWTJ0bGNpMXBkR1Z0TG5Gc0xYTmxiR1ZqZEdWa0lDNXhiQzF6ZEhKdmEyVXNYRzRnSUNBZ1luVjBkRzl1T21odmRtVnlJQzV4YkMxemRISnZhMlV0YldsMFpYSXNYRzRnSUNBZ1luVjBkRzl1T21adlkzVnpJQzV4YkMxemRISnZhMlV0YldsMFpYSXNYRzRnSUNBZ1luVjBkRzl1TG5Gc0xXRmpkR2wyWlNBdWNXd3RjM1J5YjJ0bExXMXBkR1Z5TEZ4dUlDQWdJQzV4YkMxd2FXTnJaWEl0YkdGaVpXdzZhRzkyWlhJZ0xuRnNMWE4wY205clpTMXRhWFJsY2l4Y2JpQWdJQ0F1Y1d3dGNHbGphMlZ5TFd4aFltVnNMbkZzTFdGamRHbDJaU0F1Y1d3dGMzUnliMnRsTFcxcGRHVnlMRnh1SUNBZ0lDNXhiQzF3YVdOclpYSXRhWFJsYlRwb2IzWmxjaUF1Y1d3dGMzUnliMnRsTFcxcGRHVnlMRnh1SUNBZ0lDNXhiQzF3YVdOclpYSXRhWFJsYlM1eGJDMXpaV3hsWTNSbFpDQXVjV3d0YzNSeWIydGxMVzFwZEdWeUlIdGNiaUFnSUNBZ0lITjBjbTlyWlRvZ0kyWm1aanRjYmlBZ0lDQjlYRzRnSUNBZ1luVjBkRzl1T21odmRtVnlJQzV4YkMxbWFXeHNMRnh1SUNBZ0lHSjFkSFJ2YmpwbWIyTjFjeUF1Y1d3dFptbHNiQ3hjYmlBZ0lDQmlkWFIwYjI0dWNXd3RZV04wYVhabElDNXhiQzFtYVd4c0xGeHVJQ0FnSUM1eGJDMXdhV05yWlhJdGJHRmlaV3c2YUc5MlpYSWdMbkZzTFdacGJHd3NYRzRnSUNBZ0xuRnNMWEJwWTJ0bGNpMXNZV0psYkM1eGJDMWhZM1JwZG1VZ0xuRnNMV1pwYkd3c1hHNGdJQ0FnTG5Gc0xYQnBZMnRsY2kxcGRHVnRPbWh2ZG1WeUlDNXhiQzFtYVd4c0xGeHVJQ0FnSUM1eGJDMXdhV05yWlhJdGFYUmxiUzV4YkMxelpXeGxZM1JsWkNBdWNXd3RabWxzYkN4Y2JpQWdJQ0JpZFhSMGIyNDZhRzkyWlhJZ0xuRnNMWE4wY205clpTNXhiQzFtYVd4c0xGeHVJQ0FnSUdKMWRIUnZianBtYjJOMWN5QXVjV3d0YzNSeWIydGxMbkZzTFdacGJHd3NYRzRnSUNBZ1luVjBkRzl1TG5Gc0xXRmpkR2wyWlNBdWNXd3RjM1J5YjJ0bExuRnNMV1pwYkd3c1hHNGdJQ0FnTG5Gc0xYQnBZMnRsY2kxc1lXSmxiRHBvYjNabGNpQXVjV3d0YzNSeWIydGxMbkZzTFdacGJHd3NYRzRnSUNBZ0xuRnNMWEJwWTJ0bGNpMXNZV0psYkM1eGJDMWhZM1JwZG1VZ0xuRnNMWE4wY205clpTNXhiQzFtYVd4c0xGeHVJQ0FnSUM1eGJDMXdhV05yWlhJdGFYUmxiVHBvYjNabGNpQXVjV3d0YzNSeWIydGxMbkZzTFdacGJHd3NYRzRnSUNBZ0xuRnNMWEJwWTJ0bGNpMXBkR1Z0TG5Gc0xYTmxiR1ZqZEdWa0lDNXhiQzF6ZEhKdmEyVXVjV3d0Wm1sc2JDQjdYRzRnSUNBZ0lDQm1hV3hzT2lBalptWm1PMXh1SUNBZ0lIMWNibHh1SUNBZ0lFQnRaV1JwWVNBb2NHOXBiblJsY2pvZ1kyOWhjbk5sS1NCN1hHNGdJQ0FnSUNCaWRYUjBiMjQ2YUc5MlpYSTZibTkwS0M1eGJDMWhZM1JwZG1VcElIdGNiaUFnSUNBZ0lDQWdZMjlzYjNJNklDTmpZMk03WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdJQ0JpZFhSMGIyNDZhRzkyWlhJNmJtOTBLQzV4YkMxaFkzUnBkbVVwSUM1eGJDMW1hV3hzTEZ4dUlDQWdJQ0FnWW5WMGRHOXVPbWh2ZG1WeU9tNXZkQ2d1Y1d3dFlXTjBhWFpsS1NBdWNXd3RjM1J5YjJ0bExuRnNMV1pwYkd3Z2UxeHVJQ0FnSUNBZ0lDQm1hV3hzT2lBalkyTmpPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lDQWdZblYwZEc5dU9taHZkbVZ5T201dmRDZ3VjV3d0WVdOMGFYWmxLU0F1Y1d3dGMzUnliMnRsTEZ4dUlDQWdJQ0FnWW5WMGRHOXVPbWh2ZG1WeU9tNXZkQ2d1Y1d3dFlXTjBhWFpsS1NBdWNXd3RjM1J5YjJ0bExXMXBkR1Z5SUh0Y2JpQWdJQ0FnSUNBZ2MzUnliMnRsT2lBalkyTmpPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNiaUFnZlZ4dVhHNGdJQzV4YkMxemRISnZhMlVnZTF4dUlDQWdJR1pwYkd3NklHNXZibVU3WEc0Z0lDQWdjM1J5YjJ0bE9pQWpZMk5qTzF4dUlDQWdJSE4wY205clpTMXNhVzVsYW05cGJqb2djbTkxYm1RN1hHNGdJQ0FnYzNSeWIydGxMV3hwYm1WallYQTZJSEp2ZFc1a08xeHVJQ0FnSUhOMGNtOXJaUzEzYVdSMGFEb2dNanRjYmlBZ2ZWeHVYRzRnSUM1eGJDMXpkSEp2YTJVdGJXbDBaWElnZTF4dUlDQWdJR1pwYkd3NklHNXZibVU3WEc0Z0lDQWdjM1J5YjJ0bE9pQWpZMk5qTzF4dUlDQWdJSE4wY205clpTMXRhWFJsY214cGJXbDBPaUF4TUR0Y2JpQWdJQ0J6ZEhKdmEyVXRkMmxrZEdnNklESTdYRzRnSUgxY2JseHVJQ0F1Y1d3dFptbHNiQ3hjYmlBZ0xuRnNMWE4wY205clpTNXhiQzFtYVd4c0lIdGNiaUFnSUNCbWFXeHNPaUFqWTJOak8xeHVJQ0I5WEc1Y2JpQWdMbkZzTFhCcFkydGxjaUI3WEc0Z0lDQWdZMjlzYjNJNklDTmpZMk03WEc1Y2JpQWdJQ0FtTG5Gc0xXVjRjR0Z1WkdWa0lDNXhiQzF3YVdOclpYSXRiR0ZpWld3Z2UxeHVJQ0FnSUNBZ2VpMXBibVJsZURvZ01qdGNiaUFnSUNBZ0lHTnZiRzl5T2lBak56YzNPMXh1WEc0Z0lDQWdJQ0F1Y1d3dFptbHNiQ0I3WEc0Z0lDQWdJQ0FnSUdacGJHdzZJQ00zTnpjN1hHNGdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDNXhiQzF6ZEhKdmEyVWdlMXh1SUNBZ0lDQWdJQ0J6ZEhKdmEyVTZJQ00zTnpjN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dUlDQjlYRzVjYmlBZ0xuRnNMWEJwWTJ0bGNpMXZjSFJwYjI1eklIdGNiaUFnSUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lBak5EUTBPMXh1SUNCOVhHNWNiaUFnTG5Gc0xXTnZiRzl5TFhCcFkydGxjaUF1Y1d3dGNHbGphMlZ5TFd4aFltVnNJSE4yWnl4Y2JpQWdMbkZzTFdsamIyNHRjR2xqYTJWeUlDNXhiQzF3YVdOclpYSXRiR0ZpWld3Z2MzWm5JSHRjYmlBZ0lDQnlhV2RvZERvZ01DNHlOWEpsYlR0Y2JseHVJQ0FnSUVCcGJtTnNkV1JsSUdGd2NDMXlkR3dnZTF4dUlDQWdJQ0FnY21sbmFIUTZJR0YxZEc4N1hHNGdJQ0FnSUNCc1pXWjBPaUF3TGpJMWNtVnRPMXh1SUNBZ0lIMWNiaUFnZlZ4dVhHNGdJQzV4YkMxamIyeHZjaTF3YVdOclpYSWdlMXh1SUNBZ0lDNXhiQzFqYjJ4dmNpMXdhV05yWlhJZ2MzWm5JSHRjYmlBZ0lDQWdJRzFoY21kcGJqb2dNQzR3TmpJMWNtVnRPMXh1SUNBZ0lIMWNibHh1SUNBZ0lDNXhiQzF3YVdOclpYSXRhWFJsYlM1eGJDMXpaV3hsWTNSbFpDeGNiaUFnSUNBdWNXd3RjR2xqYTJWeUxXbDBaVzA2YUc5MlpYSWdlMXh1SUNBZ0lDQWdZbTl5WkdWeUxXTnZiRzl5T2lBalptWm1PMXh1SUNBZ0lIMWNiaUFnZlZ4dVhHNGdJQzV4YkMxMGIyOXNZbUZ5SUM1eGJDMW1iM0p0WVhSeklIdGNiaUFnSUNCdFlYSm5hVzQ2SURBdU5YSmxiU0F3TGpjMWNtVnRJREF1TlhKbGJTQXdPMXh1WEc0Z0lDQWdRR2x1WTJ4MVpHVWdZWEJ3TFhKMGJDQjdYRzRnSUNBZ0lDQnRZWEpuYVc0NklEQXVOWEpsYlNBd0lEQXVOWEpsYlNBd0xqYzFjbVZ0TzF4dUlDQWdJSDFjYmx4dUlDQWdJQ1k2Wm1seWMzUXRZMmhwYkdRZ2UxeHVJQ0FnSUNBZ2JXRnlaMmx1TFd4bFpuUTZJREF1TnpWeVpXMDdYRzVjYmlBZ0lDQWdJRUJwYm1Oc2RXUmxJR0Z3Y0MxeWRHd2dlMXh1SUNBZ0lDQWdJQ0J0WVhKbmFXNHRjbWxuYUhRNklEQXVOelZ5WlcwN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dUlDQjlYRzVjYmlBZ0xuRnNMWFJ2YjJ4MGFYQXRZWEp5YjNjZ2UxeHVJQ0FnSUdOdmJuUmxiblE2SUNjZ0p6dGNiaUFnSUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hHNGdJQ0FnWkdsemNHeGhlVG9nWW14dlkyczdYRzRnSUNBZ2JHVm1kRG9nTlRBbE8xeHVJQ0FnSUcxaGNtZHBiaTFzWldaME9pQXRNQzR6TnpWeVpXMDdYRzRnSUNBZ1ltOXlaR1Z5TFhKcFoyaDBPaUF3TGpNM05YSmxiU0J6YjJ4cFpDQjBjbUZ1YzNCaGNtVnVkRHRjYmlBZ0lDQmliM0prWlhJdGJHVm1kRG9nTUM0ek56VnlaVzBnYzI5c2FXUWdkSEpoYm5Od1lYSmxiblE3WEc0Z0lIMWNibHh1SUNBdWNXd3RkRzl2YkhScGNDQjdYRzRnSUNBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0l6UTBORHRjYmlBZ0lDQmpiMnh2Y2pvZ0kyWm1aanRjYmx4dUlDQWdJQ1k2Ym05MEtDNXhiQzFtYkdsd0tTQXVjV3d0ZEc5dmJIUnBjQzFoY25KdmR5QjdYRzRnSUNBZ0lDQjBiM0E2SUMwd0xqTTNOWEpsYlR0Y2JpQWdJQ0FnSUdKdmNtUmxjaTFpYjNSMGIyMDZJREF1TXpjMWNtVnRJSE52Ykdsa0lDTTBORFE3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdKaTV4YkMxbWJHbHdJQzV4YkMxMGIyOXNkR2x3TFdGeWNtOTNJSHRjYmlBZ0lDQWdJR0p2ZEhSdmJUb2dMVEF1TXpjMWNtVnRPMXh1SUNBZ0lDQWdZbTl5WkdWeUxYUnZjRG9nTUM0ek56VnlaVzBnYzI5c2FXUWdJelEwTkR0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0FtTG5Gc0xXVmthWFJwYm1jZ2UxeHVJQ0FnSUNBZ0xuRnNMWFJ2YjJ4MGFYQXRaV1JwZEc5eUlIdGNiaUFnSUNBZ0lDQWdaR2x6Y0d4aGVUb2dZbXh2WTJzN1hHNGdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDNXhiQzFtYjNKdFlYUnpJSHRjYmlBZ0lDQWdJQ0FnZG1semFXSnBiR2wwZVRvZ2FHbGtaR1Z1TzF4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmlBZ2ZWeHVYRzRnSUM1eGJDMTBiMjlzZEdsd0xXVmthWFJ2Y2lCN1hHNGdJQ0FnWkdsemNHeGhlVG9nYm05dVpUdGNibHh1SUNBZ0lHbHVjSFYwVzNSNWNHVTlKM1JsZUhRblhTQjdYRzRnSUNBZ0lDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVTdYRzRnSUNBZ0lDQndZV1JrYVc1bk9pQXdMall5TlhKbGJTQXhMakkxY21WdE8xeHVJQ0FnSUNBZ2FHVnBaMmgwT2lBeE1EQWxPMXh1SUNBZ0lDQWdkMmxrZEdnNklERXdNQ1U3WEc0Z0lDQWdJQ0J2ZFhSc2FXNWxPaUJ1YjI1bE8xeHVJQ0FnSUNBZ1ltRmphMmR5YjNWdVpEb2dkSEpoYm5Od1lYSmxiblE3WEc0Z0lDQWdJQ0JpYjNKa1pYSTZJRzV2Ym1VN1hHNGdJQ0FnSUNCamIyeHZjam9nSTJabVpqdGNiaUFnSUNBZ0lHWnZiblF0YzJsNlpUb2dNQzQ0TVRJMWNtVnRPMXh1SUNBZ0lIMWNibHh1SUNBZ0lHRWdlMXh1SUNBZ0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNBZ0lDQWdjbWxuYUhRNklERXVNalZ5WlcwN1hHNGdJQ0FnSUNCMGIzQTZJREF1TmpJMWNtVnRPMXh1WEc0Z0lDQWdJQ0JBYVc1amJIVmtaU0JoY0hBdGNuUnNJSHRjYmlBZ0lDQWdJQ0FnY21sbmFIUTZJR0YxZEc4N1hHNGdJQ0FnSUNBZ0lHeGxablE2SURFdU1qVnlaVzA3WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNZNk9tSmxabTl5WlNCN1hHNGdJQ0FnSUNBZ0lHTnZiblJsYm5RNklDZGNYRVEzSnp0Y2JpQWdJQ0FnSUNBZ1kyOXNiM0k2SUNOalkyTTdYRzRnSUNBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTVhKbGJUdGNiaUFnSUNBZ0lDQWdabTl1ZEMxM1pXbG5hSFE2SUdKdmJHUTdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVJQ0I5WEc1Y2JpQWdKaTV4YkMxamIyNTBZV2x1WlhJNmJtOTBLQzV4YkMxa2FYTmhZbXhsWkNrZ1lTQjdYRzRnSUNBZ2QyaHBkR1V0YzNCaFkyVTZJRzV2ZDNKaGNEdGNiaUFnSUNCd2IzTnBkR2x2YmpvZ2NtVnNZWFJwZG1VN1hHNWNiaUFnSUNBbU9qcGlaV1p2Y21Vc1hHNGdJQ0FnSmpvNllXWjBaWElnZTF4dUlDQWdJQ0FnYldGeVoybHVMV3hsWm5RNklEVXdKVHRjYmlBZ0lDQWdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjYmlBZ0lDQWdJSFpwYzJsaWFXeHBkSGs2SUdocFpHUmxianRjYmlBZ0lDQWdJR3hsWm5RNklEQTdYRzRnSUNBZ0lDQjBjbUZ1YzJsMGFXOXVPaUIyYVhOcFltbHNhWFI1SURCeklHVmhjMlVnTWpBd2JYTTdYRzRnSUNBZ0lDQjBjbUZ1YzJadmNtMDZJSFJ5WVc1emJHRjBaU2d0TlRBbExDQXRNVEF3SlNrN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnSmpwb2IzWmxjam82WW1WbWIzSmxMRnh1SUNBZ0lDWTZhRzkyWlhJNk9tRm1kR1Z5SUh0Y2JpQWdJQ0FnSUhacGMybGlhV3hwZEhrNklIWnBjMmxpYkdVN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnSmpvNlltVm1iM0psSUh0Y2JpQWdJQ0FnSUdOdmJuUmxiblE2SUdGMGRISW9hSEpsWmlrN1hHNGdJQ0FnSUNCMGIzQTZJQzB3TGpNeE1qVnlaVzA3WEc0Z0lDQWdJQ0I2TFdsdVpHVjRPaUF4TzF4dUlDQWdJQ0FnYjNabGNtWnNiM2M2SUdocFpHUmxianRjYmlBZ0lDQWdJSEJoWkdScGJtYzZJREF1TXpFeU5YSmxiU0F3TGprek56VnlaVzA3WEc0Z0lDQWdJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQXdMamt6TnpWeVpXMDdYRzRnSUNBZ0lDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWpORFEwTzF4dUlDQWdJQ0FnZEdWNGRDMWtaV052Y21GMGFXOXVPaUJ1YjI1bE8xeHVJQ0FnSUNBZ1kyOXNiM0k2SUNObVptWTdYRzRnSUNBZ0lDQm1iMjUwTFhkbGFXZG9kRG9nYm05eWJXRnNPMXh1SUNBZ0lDQWdabTl1ZEMxemFYcGxPaUF3TGpjMWNtVnRPMXh1SUNBZ0lIMWNibHh1SUNBZ0lDWTZPbUZtZEdWeUlIdGNiaUFnSUNBZ0lHTnZiblJsYm5RNklDY2dKenRjYmlBZ0lDQWdJSFJ2Y0RvZ01EdGNiaUFnSUNBZ0lHaGxhV2RvZERvZ01EdGNiaUFnSUNBZ0lIZHBaSFJvT2lBd08xeHVJQ0FnSUNBZ1ltOXlaR1Z5TFhSdmNEb2dNQzR6TnpWeVpXMGdjMjlzYVdRZ0l6UTBORHRjYmlBZ0lDQWdJR0p2Y21SbGNpMXlhV2RvZERvZ01DNHpOelZ5WlcwZ2MyOXNhV1FnZEhKaGJuTndZWEpsYm5RN1hHNGdJQ0FnSUNCaWIzSmtaWEl0YkdWbWREb2dNQzR6TnpWeVpXMGdjMjlzYVdRZ2RISmhibk53WVhKbGJuUTdYRzRnSUNBZ2ZWeHVJQ0I5WEc1OVhHNWNiaTh2SUV4cFoyaDBJSE4wZVd4bGMxeHVRR2xtSUNSbGJtRmliR1V0YkdsbmFIUXRjM1I1YkdVZ2UxeHVJQ0F1YkdsbmFIUXRjM1I1YkdVZ2UxeHVJQ0FnSUM1eGJDMWxaR2wwYjNJdWNXd3RZbXhoYm1zNlltVm1iM0psSUh0Y2JpQWdJQ0FnSUdOdmJHOXlPaUJzYVdkb2RDNGthVzV3ZFhRdGNHeGhZMlZvYjJ4a1pYSXRZMjlzYjNJN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnTG5Gc0xYTnViM2NzWEc0Z0lDQWdMbkZzTFdKMVltSnNaU0I3WEc0Z0lDQWdJQ0FtTG5Gc0xYUnZiMnhpWVhJZ0xuRnNMWEJwWTJ0bGNpMXZjSFJwYjI1ekxGeHVJQ0FnSUNBZ0ppQXVjV3d0ZEc5dmJHSmhjaUF1Y1d3dGNHbGphMlZ5TFc5d2RHbHZibk1nZTF4dUlDQWdJQ0FnSUNCaWIzZ3RjMmhoWkc5M09pQnNhV2RvZEM0a1pISnZjR1J2ZDI0dFltOTRMWE5vWVdSdmR6dGNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lDQWdMbkZzTFhCcFkydGxjaUI3WEc0Z0lDQWdJQ0FnSUNZdWNXd3RhR1ZoWkdWeUlDNXhiQzF3YVdOclpYSXRhWFJsYlNCN1hHNGdJQ0FnSUNBZ0lDQWdKbHRrWVhSaExYWmhiSFZsUFNjeEoxMDZPbUpsWm05eVpTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCbWIyNTBMWE5wZW1VNklHeHBaMmgwTGlSb01TMW1iMjUwTFhOcGVtVTdYRzRnSUNBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lDQWdKbHRrWVhSaExYWmhiSFZsUFNjeUoxMDZPbUpsWm05eVpTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCbWIyNTBMWE5wZW1VNklHeHBaMmgwTGlSb01pMW1iMjUwTFhOcGVtVTdYRzRnSUNBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lDQWdKbHRrWVhSaExYWmhiSFZsUFNjekoxMDZPbUpsWm05eVpTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCbWIyNTBMWE5wZW1VNklHeHBaMmgwTGlSb015MW1iMjUwTFhOcGVtVTdYRzRnSUNBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lDQWdKbHRrWVhSaExYWmhiSFZsUFNjMEoxMDZPbUpsWm05eVpTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCbWIyNTBMWE5wZW1VNklHeHBaMmgwTGlSb05DMW1iMjUwTFhOcGVtVTdYRzRnSUNBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lDQWdKbHRrWVhSaExYWmhiSFZsUFNjMUoxMDZPbUpsWm05eVpTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCbWIyNTBMWE5wZW1VNklHeHBaMmgwTGlSb05TMW1iMjUwTFhOcGVtVTdYRzRnSUNBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lDQWdKbHRrWVhSaExYWmhiSFZsUFNjMkoxMDZPbUpsWm05eVpTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCbWIyNTBMWE5wZW1VNklHeHBaMmgwTGlSb05pMW1iMjUwTFhOcGVtVTdYRzRnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdKaTV4YkMxbWIyNTBJQzV4YkMxd2FXTnJaWEl0YVhSbGJTQjdYRzRnSUNBZ0lDQWdJQ0FnSmx0a1lYUmhMWFpoYkhWbFBTZHpaWEpwWmlkZE9qcGlaV1p2Y21VZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWm05dWRDMW1ZVzFwYkhrNklHeHBaMmgwTGlSbWIyNTBMV1poYldsc2VTMXpaWEpwWmp0Y2JpQWdJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnSUNBbVcyUmhkR0V0ZG1Gc2RXVTlKMjF2Ym05emNHRmpaU2RkT2pwaVpXWnZjbVVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdabTl1ZEMxbVlXMXBiSGs2SUd4cFoyaDBMaVJtYjI1MExXWmhiV2xzZVMxdGIyNXZjM0JoWTJVN1hHNGdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ0ppNXhiQzF6YVhwbElDNXhiQzF3YVdOclpYSXRhWFJsYlNCN1hHNGdJQ0FnSUNBZ0lDQWdKbHRrWVhSaExYWmhiSFZsUFNkemJXRnNiQ2RkT2pwaVpXWnZjbVVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUJzYVdkb2RDNGtabTl1ZEMxemFYcGxMWE50TzF4dUlDQWdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0FnSUNaYlpHRjBZUzEyWVd4MVpUMG5iR0Z5WjJVblhUbzZZbVZtYjNKbElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdadmJuUXRjMmw2WlRvZ2JHbG5hSFF1SkdadmJuUXRjMmw2WlMxc1p6dGNiaUFnSUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ0lDQW1XMlJoZEdFdGRtRnNkV1U5SjJoMVoyVW5YVG82WW1WbWIzSmxJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHWnZiblF0YzJsNlpUb2diR2xuYUhRdUpHWnZiblF0YzJsNlpTMTRiRHRjYmlBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNWNiaUFnSUNBdWNXd3RjMjV2ZHlCN1hHNGdJQ0FnSUNBdWNXd3RaV1JwZEc5eUxuRnNMV0pzWVc1ck9qcGlaV1p2Y21VZ2UxeHVJQ0FnSUNBZ0lDQndZV1JrYVc1bk9pQXdJR3hwWjJoMExpUnBibkIxZEMxaWRHNHRjR0ZrWkdsdVp5MTRPMXh1SUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FtTG5Gc0xXTnZiblJoYVc1bGNpQjdYRzRnSUNBZ0lDQWdJR0p2Y21SbGNqb2dNQzR3TmpJMWNtVnRJSE52Ykdsa0lHeHBaMmgwTGlScGJuQjFkQzFpYjNKa1pYSXRZMjlzYjNJN1hHNGdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDNXhiQzFsWkdsMGIzSWdlMXh1SUNBZ0lDQWdJQ0J3WVdSa2FXNW5PaUJzYVdkb2RDNGthVzV3ZFhRdFluUnVMWEJoWkdScGJtY3RlRHRjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSmk1eGJDMTBiMjlzWW1GeUxGeHVJQ0FnSUNBZ0ppQXVjV3d0ZEc5dmJHSmhjaUI3WEc0Z0lDQWdJQ0FnSUdKdmNtUmxjam9nTUM0d05qSTFjbVZ0SUhOdmJHbGtJR3hwWjJoMExpUnBibkIxZEMxaWIzSmtaWEl0WTI5c2IzSTdYRzVjYmlBZ0lDQWdJQ0FnUUcxbFpHbGhJQ2h3YjJsdWRHVnlPaUJqYjJGeWMyVXBJSHRjYmlBZ0lDQWdJQ0FnSUNCaWRYUjBiMjQ2YUc5MlpYSTZibTkwS0M1eGJDMWhZM1JwZG1VcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJHOXlPaUJzYVdkb2RDNGtZbTlrZVMxamIyeHZjanRjYmlBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdZblYwZEc5dU9taHZkbVZ5T201dmRDZ3VjV3d0WVdOMGFYWmxLU0F1Y1d3dGMzUnliMnRsTEZ4dUlDQWdJQ0FnSUNBZ0lHSjFkSFJ2Ympwb2IzWmxjanB1YjNRb0xuRnNMV0ZqZEdsMlpTa2dMbkZzTFhOMGNtOXJaUzF0YVhSbGNpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCemRISnZhMlU2SUd4cFoyaDBMaVJpYjJSNUxXTnZiRzl5TzF4dUlDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0JpZFhSMGIyNDZhRzkyWlhJNmJtOTBLQzV4YkMxaFkzUnBkbVVwSUM1eGJDMW1hV3hzTEZ4dUlDQWdJQ0FnSUNBZ0lHSjFkSFJ2Ympwb2IzWmxjanB1YjNRb0xuRnNMV0ZqZEdsMlpTa2dMbkZzTFhOMGNtOXJaUzV4YkMxbWFXeHNJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHWnBiR3c2SUd4cFoyaDBMaVJpYjJSNUxXTnZiRzl5TzF4dUlDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FtTG5Gc0xYUnZiMnhpWVhJZ0t5QXVjV3d0WTI5dWRHRnBibVZ5TG5Gc0xYTnViM2NnZTF4dUlDQWdJQ0FnSUNCaWIzSmtaWEl0ZEc5d09pQXdPMXh1SUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0F1Y1d3dGMzUnliMnRsSUh0Y2JpQWdJQ0FnSUNBZ2MzUnliMnRsT2lCc2FXZG9kQzRrWW05a2VTMWpiMnh2Y2p0Y2JpQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0xuRnNMV1pwYkd3c1hHNGdJQ0FnSUNBdWNXd3RjM1J5YjJ0bExuRnNMV1pwYkd3Z2UxeHVJQ0FnSUNBZ0lDQm1hV3hzT2lCc2FXZG9kQzRrWW05a2VTMWpiMnh2Y2p0Y2JpQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0xuRnNMWE4wY205clpTMXRhWFJsY2lCN1hHNGdJQ0FnSUNBZ0lITjBjbTlyWlRvZ2JHbG5hSFF1SkdKdlpIa3RZMjlzYjNJN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnSUNBdWNXd3RjR2xqYTJWeUlIdGNiaUFnSUNBZ0lDQWdZMjlzYjNJNklHeHBaMmgwTGlSaWIyUjVMV052Ykc5eU8xeHVYRzRnSUNBZ0lDQWdJQ1l1Y1d3dFpYaHdZVzVrWldRZ0xuRnNMWEJwWTJ0bGNpMXZjSFJwYjI1eklIdGNiaUFnSUNBZ0lDQWdJQ0JpYjNKa1pYSXRZMjlzYjNJNklHeHBaMmgwTGlSa2NtOXdaRzkzYmkxaWIzSmtaWEl0WTI5c2IzSTdYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNBbUxuRnNMV1Y0Y0dGdVpHVmtJQzV4YkMxd2FXTnJaWEl0YkdGaVpXd2dlMXh1SUNBZ0lDQWdJQ0FnSUdKdmNtUmxjaTFqYjJ4dmNqb2diR2xuYUhRdUpHbHVjSFYwTFdKdmNtUmxjaTFqYjJ4dmNqdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0F1Y1d3dGRHOXZiSFJwY0NCN1hHNGdJQ0FnSUNBZ0lHSnZjbVJsY2pvZ2JHbG5hSFF1SkdSeWIzQmtiM2R1TFdKdmNtUmxjaTEzYVdSMGFDQnpiMnhwWkNCc2FXZG9kQzRrWkhKdmNHUnZkMjR0WW05eVpHVnlMV052Ykc5eU8xeHVJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ2JHbG5hSFF1SkdKdlpIa3RZMjlzYjNJN1hHNGdJQ0FnSUNBZ0lHSnZlQzF6YUdGa2IzYzZJR3hwWjJoMExpUmtjbTl3Wkc5M2JpMWliM2d0YzJoaFpHOTNPMXh1WEc0Z0lDQWdJQ0FnSUdsdWNIVjBXM1I1Y0dVOUozUmxlSFFuWFNCN1hHNGdJQ0FnSUNBZ0lDQWdZbTl5WkdWeU9pQXdMakEyTWpWeVpXMGdjMjlzYVdRZ2JHbG5hSFF1SkdsdWNIVjBMV0p2Y21SbGNpMWpiMnh2Y2p0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JseHVJQ0FnSUM1eGJDMWlkV0ppYkdVZ0xuRnNMWFJ2YjJ4MGFYQWdlMXh1SUNBZ0lDQWdZbTl5WkdWeUxYSmhaR2wxY3pvZ2JHbG5hSFF1SkdKdmNtUmxjaTF5WVdScGRYTTdYRzRnSUNBZ0lDQjZMV2x1WkdWNE9pQnNhV2RvZEM0a2VtbHVaR1Y0TFcxbGJuVXRabWw0WldRZ0t5QXhNRHRjYmlBZ0lDQjlYRzRnSUgxY2JuMWNibHh1THk4Z1pHRnlheUJ6ZEhsc1pYTmNia0JwWmlBa1pXNWhZbXhsTFdSaGNtc3RjM1I1YkdVZ2UxeHVJQ0F1WkdGeWF5MXpkSGxzWlNCN1hHNGdJQ0FnTG5Gc0xXVmthWFJ2Y2k1eGJDMWliR0Z1YXpwaVpXWnZjbVVnZTF4dUlDQWdJQ0FnWTI5c2IzSTZJR1JoY21zdUpHbHVjSFYwTFhCc1lXTmxhRzlzWkdWeUxXTnZiRzl5TzF4dUlDQWdJSDFjYmx4dUlDQWdJQzV4YkMxemJtOTNMRnh1SUNBZ0lDNXhiQzFpZFdKaWJHVWdlMXh1SUNBZ0lDQWdMbkZzTFhSdmIyeDBhWEFnZTF4dUlDQWdJQ0FnSUNCaVlXTnJaM0p2ZFc1a09pQmtZWEpyTGlSaWIyUjVMV0puTzF4dUlDQWdJQ0FnZlZ4dUlDQWdJQ0FnSmk1eGJDMTBiMjlzWW1GeUlDNXhiQzF3YVdOclpYSXRiM0IwYVc5dWN5eGNiaUFnSUNBZ0lDWWdMbkZzTFhSdmIyeGlZWElnTG5Gc0xYQnBZMnRsY2kxdmNIUnBiMjV6SUh0Y2JpQWdJQ0FnSUNBZ1ltOTRMWE5vWVdSdmR6b2daR0Z5YXk0a1pISnZjR1J2ZDI0dFltOTRMWE5vWVdSdmR6dGNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lDQWdMbkZzTFhCcFkydGxjaUI3WEc0Z0lDQWdJQ0FnSUNZdWNXd3RhR1ZoWkdWeUlDNXhiQzF3YVdOclpYSXRhWFJsYlNCN1hHNGdJQ0FnSUNBZ0lDQWdKbHRrWVhSaExYWmhiSFZsUFNjeEoxMDZPbUpsWm05eVpTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCbWIyNTBMWE5wZW1VNklHUmhjbXN1SkdneExXWnZiblF0YzJsNlpUdGNiaUFnSUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ0lDQW1XMlJoZEdFdGRtRnNkV1U5SnpJblhUbzZZbVZtYjNKbElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdadmJuUXRjMmw2WlRvZ1pHRnlheTRrYURJdFptOXVkQzF6YVhwbE8xeHVJQ0FnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNBZ0lDWmJaR0YwWVMxMllXeDFaVDBuTXlkZE9qcGlaV1p2Y21VZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT2lCa1lYSnJMaVJvTXkxbWIyNTBMWE5wZW1VN1hHNGdJQ0FnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUNBZ0psdGtZWFJoTFhaaGJIVmxQU2MwSjEwNk9tSmxabTl5WlNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JtYjI1MExYTnBlbVU2SUdSaGNtc3VKR2cwTFdadmJuUXRjMmw2WlR0Y2JpQWdJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnSUNBbVcyUmhkR0V0ZG1Gc2RXVTlKelVuWFRvNlltVm1iM0psSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nWkdGeWF5NGthRFV0Wm05dWRDMXphWHBsTzF4dUlDQWdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0FnSUNaYlpHRjBZUzEyWVd4MVpUMG5OaWRkT2pwaVpXWnZjbVVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUJrWVhKckxpUm9OaTFtYjI1MExYTnBlbVU3WEc0Z0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnSmk1eGJDMW1iMjUwSUM1eGJDMXdhV05yWlhJdGFYUmxiU0I3WEc0Z0lDQWdJQ0FnSUNBZ0psdGtZWFJoTFhaaGJIVmxQU2R6WlhKcFppZGRPanBpWldadmNtVWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1ptOXVkQzFtWVcxcGJIazZJR1JoY21zdUpHWnZiblF0Wm1GdGFXeDVMWE5sY21sbU8xeHVJQ0FnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNBZ0lDWmJaR0YwWVMxMllXeDFaVDBuYlc5dWIzTndZV05sSjEwNk9tSmxabTl5WlNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JtYjI1MExXWmhiV2xzZVRvZ1pHRnlheTRrWm05dWRDMW1ZVzFwYkhrdGJXOXViM053WVdObE8xeHVJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lDWXVjV3d0YzJsNlpTQXVjV3d0Y0dsamEyVnlMV2wwWlcwZ2UxeHVJQ0FnSUNBZ0lDQWdJQ1piWkdGMFlTMTJZV3gxWlQwbmMyMWhiR3duWFRvNlltVm1iM0psSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nWkdGeWF5NGtabTl1ZEMxemFYcGxMWE50TzF4dUlDQWdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0FnSUNaYlpHRjBZUzEyWVd4MVpUMG5iR0Z5WjJVblhUbzZZbVZtYjNKbElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdadmJuUXRjMmw2WlRvZ1pHRnlheTRrWm05dWRDMXphWHBsTFd4bk8xeHVJQ0FnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNBZ0lDWmJaR0YwWVMxMllXeDFaVDBuYUhWblpTZGRPanBpWldadmNtVWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9pQmtZWEpyTGlSbWIyNTBMWE5wZW1VdGVHdzdYRzRnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dVhHNGdJQ0FnTG5Gc0xYTnViM2NnZTF4dUlDQWdJQ0FnTG5Gc0xXVmthWFJ2Y2k1eGJDMWliR0Z1YXpvNlltVm1iM0psSUh0Y2JpQWdJQ0FnSUNBZ2NHRmtaR2x1WnpvZ01DQmtZWEpyTGlScGJuQjFkQzFpZEc0dGNHRmtaR2x1WnkxNE8xeHVJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQW1MbkZzTFdOdmJuUmhhVzVsY2lCN1hHNGdJQ0FnSUNBZ0lHSnZjbVJsY2pvZ01DNHdOakkxY21WdElITnZiR2xrSUdSaGNtc3VKR2x1Y0hWMExXSnZjbVJsY2kxamIyeHZjanRjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnTG5Gc0xXVmthWFJ2Y2lCN1hHNGdJQ0FnSUNBZ0lIQmhaR1JwYm1jNklHUmhjbXN1SkdsdWNIVjBMV0owYmkxd1lXUmthVzVuTFhnN1hHNGdJQ0FnSUNBZ0lHSmhZMnRuY205MWJtUTZJR1JoY21zdUpHTmhjbVF0WW1jN1hHNGdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDNXhiQzF3YVdOclpYSXRiM0IwYVc5dWN5QjdYRzRnSUNBZ0lDQWdJR0poWTJ0bmNtOTFibVE2SUdSaGNtc3VKR05oY21RdFltYzdYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ1l1Y1d3dGRHOXZiR0poY2l4Y2JpQWdJQ0FnSUNZZ0xuRnNMWFJ2YjJ4aVlYSWdlMXh1SUNBZ0lDQWdJQ0JpYjNKa1pYSTZJREF1TURZeU5YSmxiU0J6YjJ4cFpDQmtZWEpyTGlScGJuQjFkQzFpYjNKa1pYSXRZMjlzYjNJN1hHNGdJQ0FnSUNBZ0lHSmhZMnRuY205MWJtUTZJR1JoY21zdUpHTmhjbVF0WW1jN1hHNWNiaUFnSUNBZ0lDQWdRRzFsWkdsaElDaHdiMmx1ZEdWeU9pQmpiMkZ5YzJVcElIdGNiaUFnSUNBZ0lDQWdJQ0JpZFhSMGIyNDZhRzkyWlhJNmJtOTBLQzV4YkMxaFkzUnBkbVVwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR052Ykc5eU9pQmtZWEpyTGlSaWIyUjVMV052Ykc5eU8xeHVJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNCaWRYUjBiMjQ2YUc5MlpYSTZibTkwS0M1eGJDMWhZM1JwZG1VcElDNXhiQzF6ZEhKdmEyVXNYRzRnSUNBZ0lDQWdJQ0FnWW5WMGRHOXVPbWh2ZG1WeU9tNXZkQ2d1Y1d3dFlXTjBhWFpsS1NBdWNXd3RjM1J5YjJ0bExXMXBkR1Z5SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSE4wY205clpUb2daR0Z5YXk0a1ltOWtlUzFqYjJ4dmNqdGNiaUFnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ1luVjBkRzl1T21odmRtVnlPbTV2ZENndWNXd3RZV04wYVhabEtTQXVjV3d0Wm1sc2JDeGNiaUFnSUNBZ0lDQWdJQ0JpZFhSMGIyNDZhRzkyWlhJNmJtOTBLQzV4YkMxaFkzUnBkbVVwSUM1eGJDMXpkSEp2YTJVdWNXd3RabWxzYkNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JtYVd4c09pQmtZWEpyTGlSaWIyUjVMV052Ykc5eU8xeHVJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBbUxuRnNMWFJ2YjJ4aVlYSWdLeUF1Y1d3dFkyOXVkR0ZwYm1WeUxuRnNMWE51YjNjZ2UxeHVJQ0FnSUNBZ0lDQmliM0prWlhJdGRHOXdPaUF3TzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBdWNXd3RjM1J5YjJ0bExXMXBkR1Z5SUh0Y2JpQWdJQ0FnSUNBZ2MzUnliMnRsT2lCa1lYSnJMaVJpYjJSNUxXTnZiRzl5TzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBdWNXd3RjM1J5YjJ0bElIdGNiaUFnSUNBZ0lDQWdjM1J5YjJ0bE9pQmtZWEpyTGlSaWIyUjVMV052Ykc5eU8xeHVJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQXVjV3d0Wm1sc2JDeGNiaUFnSUNBZ0lDNXhiQzF6ZEhKdmEyVXVjV3d0Wm1sc2JDQjdYRzRnSUNBZ0lDQWdJR1pwYkd3NklHUmhjbXN1SkdKdlpIa3RZMjlzYjNJN1hHNGdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDNXhiQzF3YVdOclpYSWdlMXh1SUNBZ0lDQWdJQ0JqYjJ4dmNqb2daR0Z5YXk0a1ltOWtlUzFqYjJ4dmNqdGNibHh1SUNBZ0lDQWdJQ0FtTG5Gc0xXVjRjR0Z1WkdWa0lDNXhiQzF3YVdOclpYSXRiM0IwYVc5dWN5QjdYRzRnSUNBZ0lDQWdJQ0FnWW05eVpHVnlMV052Ykc5eU9pQmtZWEpyTGlSa2NtOXdaRzkzYmkxaWIzSmtaWEl0WTI5c2IzSTdYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNBbUxuRnNMV1Y0Y0dGdVpHVmtJQzV4YkMxd2FXTnJaWEl0YkdGaVpXd2dlMXh1SUNBZ0lDQWdJQ0FnSUdKdmNtUmxjaTFqYjJ4dmNqb2daR0Z5YXk0a2FXNXdkWFF0WW05eVpHVnlMV052Ykc5eU8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQzV4YkMxMGIyOXNkR2x3SUh0Y2JpQWdJQ0FnSUNBZ1ltOXlaR1Z5T2lCa1lYSnJMaVJrY205d1pHOTNiaTFpYjNKa1pYSXRkMmxrZEdnZ2MyOXNhV1FnWkdGeWF5NGtaSEp2Y0dSdmQyNHRZbTl5WkdWeUxXTnZiRzl5TzF4dUlDQWdJQ0FnSUNCamIyeHZjam9nWkdGeWF5NGtZbTlrZVMxamIyeHZjanRjYmlBZ0lDQWdJQ0FnWW05NExYTm9ZV1J2ZHpvZ1pHRnlheTRrWkhKdmNHUnZkMjR0WW05NExYTm9ZV1J2ZHp0Y2JseHVJQ0FnSUNBZ0lDQnBibkIxZEZ0MGVYQmxQU2QwWlhoMEoxMGdlMXh1SUNBZ0lDQWdJQ0FnSUdKdmNtUmxjam9nTUM0d05qSTFjbVZ0SUhOdmJHbGtJR1JoY21zdUpHbHVjSFYwTFdKdmNtUmxjaTFqYjJ4dmNqdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNibHh1SUNBZ0lDNXhiQzFpZFdKaWJHVWdMbkZzTFhSdmIyeDBhWEFnZTF4dUlDQWdJQ0FnWW05eVpHVnlMWEpoWkdsMWN6b2daR0Z5YXk0a1ltOXlaR1Z5TFhKaFpHbDFjenRjYmlBZ0lDQWdJSG90YVc1a1pYZzZJR1JoY21zdUpIcHBibVJsZUMxdFpXNTFMV1pwZUdWa0lDc2dNVEE3WEc0Z0lDQWdmVnh1SUNCOVhHNTlYRzRpTENJa1pXNWhZbXhsTFd4cFoyaDBMWE4wZVd4bE9pQjBjblZsTzF4dUpHVnVZV0pzWlMxa1lYSnJMWE4wZVd4bE9pQjBjblZsTzF4dUpHVnVZV0pzWlMxeWRHd3RjM1Z3Y0c5eWREb2dkSEoxWlR0Y2JseHVRRzFwZUdsdUlHRndjQzFzZEhJb0pHaGhjeTFqYUdsc1pEb2dkSEoxWlNrZ2UxeHVJQ0JBYVdZZ0pHVnVZV0pzWlMxeWRHd3RjM1Z3Y0c5eWRDQjdYRzRnSUNBZ1FHbG1JQ1JvWVhNdFkyaHBiR1FnZTF4dUlDQWdJQ0FnYUhSdGJEcHViM1FvVzJScGNqMG5jblJzSjEwcElDWWdlMXh1SUNBZ0lDQWdJQ0JBWTI5dWRHVnVkRHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlJRUJsYkhObElIdGNiaUFnSUNBZ0lHaDBiV3c2Ym05MEtGdGthWEk5SjNKMGJDZGRLU0I3WEc0Z0lDQWdJQ0FnSUVCamIyNTBaVzUwTzF4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmlBZ2ZTQkFaV3h6WlNCN1hHNGdJQ0FnUUdOdmJuUmxiblE3WEc0Z0lIMWNibjFjYmx4dVFHMXBlR2x1SUdGd2NDMXNkSEl0YzNSNWJHVW9LU0I3WEc0Z0lFQnBaaUFrWlc1aFlteGxMWEowYkMxemRYQndiM0owSUh0Y2JpQWdJQ0FtT201dmRDaGJaR2x5UFNkeWRHd25YU2tnZTF4dUlDQWdJQ0FnUUdOdmJuUmxiblE3WEc0Z0lDQWdmVnh1SUNCOUlFQmxiSE5sSUh0Y2JpQWdJQ0JBWTI5dWRHVnVkRHRjYmlBZ2ZWeHVmVnh1WEc1QWJXbDRhVzRnWVhCd0xYSjBiQ2drYUdGekxXTm9hV3hrT2lCMGNuVmxLU0I3WEc0Z0lFQnBaaUFrWlc1aFlteGxMWEowYkMxemRYQndiM0owSUh0Y2JpQWdJQ0JBYVdZZ0pHaGhjeTFqYUdsc1pDQjdYRzRnSUNBZ0lDQmJaR2x5UFNkeWRHd25YU0FtSUh0Y2JpQWdJQ0FnSUNBZ1FHTnZiblJsYm5RN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlNCQVpXeHpaU0I3WEc0Z0lDQWdJQ0JiWkdseVBTZHlkR3duWFNCN1hHNGdJQ0FnSUNBZ0lFQmpiMjUwWlc1ME8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JpQWdmVnh1ZlZ4dVhHNUFiV2w0YVc0Z1lYQndMWEowYkMxemRIbHNaU2dwSUh0Y2JpQWdRR2xtSUNSbGJtRmliR1V0Y25Sc0xYTjFjSEJ2Y25RZ2UxeHVJQ0FnSUNaYlpHbHlQU2R5ZEd3blhTQjdYRzRnSUNBZ0lDQkFZMjl1ZEdWdWREdGNiaUFnSUNCOVhHNGdJSDFjYm4xY2JpSXNJaTh2SUZaaGNtbGhZbXhsYzF4dUx5OWNiaTh2SUZaaGNtbGhZbXhsY3lCemFHOTFiR1FnWm05c2JHOTNJSFJvWlNCZ0pHTnZiWEJ2Ym1WdWRDMXpkR0YwWlMxd2NtOXdaWEowZVMxemFYcGxZQ0JtYjNKdGRXeGhJR1p2Y2x4dUx5OGdZMjl1YzJsemRHVnVkQ0J1WVcxcGJtY3VJRVY0T2lBa2JtRjJMV3hwYm1zdFpHbHpZV0pzWldRdFkyOXNiM0lnWVc1a0lDUnRiMlJoYkMxamIyNTBaVzUwTFdKdmVDMXphR0ZrYjNjdGVITXVYRzR2TDF4dUx5OGdLRU1wSUVOMWMzUnZiU0IyWVhKcFlXSnNaWE1nWm05eUlHVjRkR1Z1WkdWa0lHTnZiWEJ2Ym1WdWRITWdiMllnWW05dmRITjBjbUZ3SUc5dWJIbGNibHh1THk4Z0tpQkRiMnh2Y2lCemVYTjBaVzFjYmk4dklDb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lwY2JseHVMeThnYzJOemN5MWtiMk56TFhOMFlYSjBJR2R5WVhrdFkyOXNiM0l0ZG1GeWFXRmliR1Z6WEc0a2QyaHBkR1U2SUNObVptWWdJV1JsWm1GMWJIUTdYRzRrWW14aFkyczZJQ015TmpOak5UVWdJV1JsWm1GMWJIUTdYRzRrWjNKaGVTMHlOVG9nY21kaVlTZ2tZbXhoWTJzc0lEQXVNREkxS1NBaFpHVm1ZWFZzZERzZ0x5OGdLRU1wWEc0a1ozSmhlUzAxTURvZ2NtZGlZU2drWW14aFkyc3NJREF1TURZcElDRmtaV1poZFd4ME95QXZMeUFvUXlsY2JpUm5jbUY1TFRFd01Eb2djbWRpWVNna1lteGhZMnNzSURBdU1Ta2dJV1JsWm1GMWJIUTdYRzRrWjNKaGVTMHlNREE2SUhKblltRW9KR0pzWVdOckxDQXdMaklwSUNGa1pXWmhkV3gwTzF4dUpHZHlZWGt0TXpBd09pQnlaMkpoS0NSaWJHRmpheXdnTUM0ektTQWhaR1ZtWVhWc2REdGNiaVJuY21GNUxUUXdNRG9nY21kaVlTZ2tZbXhoWTJzc0lEQXVOQ2tnSVdSbFptRjFiSFE3WEc0a1ozSmhlUzAxTURBNklISm5ZbUVvSkdKc1lXTnJMQ0F3TGpVcElDRmtaV1poZFd4ME8xeHVKR2R5WVhrdE5qQXdPaUJ5WjJKaEtDUmliR0ZqYXl3Z01DNDJLU0FoWkdWbVlYVnNkRHRjYmlSbmNtRjVMVGN3TURvZ2NtZGlZU2drWW14aFkyc3NJREF1TnlrZ0lXUmxabUYxYkhRN1hHNGtaM0poZVMwNE1EQTZJSEpuWW1Fb0pHSnNZV05yTENBd0xqZ3BJQ0ZrWldaaGRXeDBPMXh1SkdkeVlYa3RPVEF3T2lCeVoySmhLQ1JpYkdGamF5d2dNQzQ1S1NBaFpHVm1ZWFZzZER0Y2JpOHZJSE5qYzNNdFpHOWpjeTFsYm1RZ1ozSmhlUzFqYjJ4dmNpMTJZWEpwWVdKc1pYTmNibHh1THk4Z2MyTnpjeTFrYjJOekxYTjBZWEowSUdkeVlYa3RZMjlzYjNKekxXMWhjRnh1SkdkeVlYbHpPaUFvWEc0Z0lDY3lOU2M2SUNSbmNtRjVMVEkxTEZ4dUlDQW5OVEFuT2lBa1ozSmhlUzAxTUZ4dUtTQWhaR1ZtWVhWc2REdGNiaTh2SUhOamMzTXRaRzlqY3kxbGJtUWdaM0poZVMxamIyeHZjbk10YldGd1hHNWNiaTh2SUhOamMzTXRaRzlqY3kxemRHRnlkQ0JqYjJ4dmNpMTJZWEpwWVdKc1pYTmNiaVJpYkhWbE9pQWpOV0U0WkdWbElDRmtaV1poZFd4ME8xeHVKR2x1WkdsbmJ6b2dJelkyTVRCbU1pQWhaR1ZtWVhWc2REdGNiaVJ3ZFhKd2JHVTZJQ00yWmpReVl6RWdJV1JsWm1GMWJIUTdYRzRrY0dsdWF6b2dJMlU0TTJVNFl5QWhaR1ZtWVhWc2REdGNiaVJ5WldRNklDTm1aalZpTldNZ0lXUmxabUYxYkhRN1hHNGtiM0poYm1kbE9pQWpabVEzWlRFMElDRmtaV1poZFd4ME8xeHVKSGxsYkd4dmR6b2dJMlprWVdNME1TQWhaR1ZtWVhWc2REdGNiaVJuY21WbGJqb2dJek01WkdFNFlTQWhaR1ZtWVhWc2REdGNiaVIwWldGc09pQWpNakJqT1RrM0lDRmtaV1poZFd4ME8xeHVKR041WVc0NklDTXdNR05tWkdRZ0lXUmxabUYxYkhRN1hHNHZMeUJ6WTNOekxXUnZZM010Wlc1a0lHTnZiRzl5TFhaaGNtbGhZbXhsYzF4dVhHNHZMeUJ6WTNOekxXUnZZM010YzNSaGNuUWdkR2hsYldVdFkyOXNiM0l0ZG1GeWFXRmliR1Z6WEc0a2NISnBiV0Z5ZVRvZ0pHSnNkV1VnSVdSbFptRjFiSFE3WEc0a2MyVmpiMjVrWVhKNU9pQWpOams0TURsaElDRmtaV1poZFd4ME8xeHVKSE4xWTJObGMzTTZJQ1JuY21WbGJpQWhaR1ZtWVhWc2REdGNiaVJwYm1adk9pQWtZM2xoYmlBaFpHVm1ZWFZzZER0Y2JpUjNZWEp1YVc1bk9pQWtlV1ZzYkc5M0lDRmtaV1poZFd4ME8xeHVKR1JoYm1kbGNqb2dKSEpsWkNBaFpHVm1ZWFZzZER0Y2JpUnNhV2RvZERvZ0kyVTFaVGxsWkNBaFpHVm1ZWFZzZER0Y2JpUmtZWEpyT2lBak5EazFOVFl6SUNGa1pXWmhkV3gwTzF4dUpHZHlZWGs2SUNSbmNtRjVMVFV3TUNBaFpHVm1ZWFZzZERzZ0x5OGdLRU1wWEc0dkx5QnpZM056TFdSdlkzTXRaVzVrSUhSb1pXMWxMV052Ykc5eUxYWmhjbWxoWW14bGMxeHVYRzR2THlCelkzTnpMV1J2WTNNdGMzUmhjblFnZEdobGJXVXRZMjlzYjNKekxXMWhjRnh1SkhSb1pXMWxMV052Ykc5eWN6b2dLRnh1SUNBbmNISnBiV0Z5ZVNjNklDUndjbWx0WVhKNUxGeHVJQ0FuYzJWamIyNWtZWEo1SnpvZ0pITmxZMjl1WkdGeWVTeGNiaUFnSjNOMVkyTmxjM01uT2lBa2MzVmpZMlZ6Y3l4Y2JpQWdKMmx1Wm04bk9pQWthVzVtYnl4Y2JpQWdKM2RoY201cGJtY25PaUFrZDJGeWJtbHVaeXhjYmlBZ0oyUmhibWRsY2ljNklDUmtZVzVuWlhJc1hHNGdJQ2RzYVdkb2RDYzZJQ1JzYVdkb2RDeGNiaUFnSjJSaGNtc25PaUFrWkdGeWF5eGNiaUFnSjJkeVlYa25PaUFrWjNKaGVWeHVLU0FoWkdWbVlYVnNkRHRjYmk4dklITmpjM010Wkc5amN5MWxibVFnZEdobGJXVXRZMjlzYjNKekxXMWhjRnh1WEc0a1kyOXNiM0l0YzJOb1pXMWxPaUFuYkdsbmFIUW5JQ0ZrWldaaGRXeDBPeUF2THlBb1F5bGNiaTh2SUZSb1pTQmpiMjUwY21GemRDQnlZWFJwYnlCMGJ5QnlaV0ZqYUNCaFoyRnBibk4wSUhkb2FYUmxMQ0IwYnlCa1pYUmxjbTFwYm1VZ2FXWWdZMjlzYjNJZ1kyaGhibWRsY3lCbWNtOXRJRndpYkdsbmFIUmNJaUIwYnlCY0ltUmhjbXRjSWk0Z1FXTmpaWEIwWVdKc1pTQjJZV3gxWlhNZ1ptOXlJRmREUVVjZ01pNHdJR0Z5WlNBekxDQTBMalVnWVc1a0lEY3VYRzR2THlCVFpXVWdhSFIwY0hNNkx5OTNkM2N1ZHpNdWIzSm5MMVJTTDFkRFFVY3lNQzhqZG1semRXRnNMV0YxWkdsdkxXTnZiblJ5WVhOMExXTnZiblJ5WVhOMFhHNGtiV2x1TFdOdmJuUnlZWE4wTFhKaGRHbHZPaUF4TGpZZ0lXUmxabUYxYkhRN1hHNWNiaTh2SUdaMWMzWXRaR2x6WVdKc1pWeHVKR0pzZFdVdE5qQXdPaUJ6YUdGa1pTMWpiMnh2Y2lna1lteDFaU3dnTVRBbEtTQWhaR1ZtWVhWc2REdGNiaVJpYkhWbExUY3dNRG9nYzJoaFpHVXRZMjlzYjNJb0pHSnNkV1VzSURFMUpTa2dJV1JsWm1GMWJIUTdYRzRrWW14MVpTMDRNREE2SUhOb1lXUmxMV052Ykc5eUtDUmliSFZsTENBeU1DVXBJQ0ZrWldaaGRXeDBPMXh1SkdKc2RXVXRPVEF3T2lCemFHRmtaUzFqYjJ4dmNpZ2tZbXgxWlN3Z01qVWxLU0FoWkdWbVlYVnNkRHRjYmx4dUpHZHlaV1Z1TFRZd01Eb2djMmhoWkdVdFkyOXNiM0lvSkdkeVpXVnVMQ0F4TUNVcElDRmtaV1poZFd4ME8xeHVKR2R5WldWdUxUY3dNRG9nYzJoaFpHVXRZMjlzYjNJb0pHZHlaV1Z1TENBeE5TVXBJQ0ZrWldaaGRXeDBPMXh1SkdkeVpXVnVMVGd3TURvZ2MyaGhaR1V0WTI5c2IzSW9KR2R5WldWdUxDQXlNQ1VwSUNGa1pXWmhkV3gwTzF4dUpHZHlaV1Z1TFRrd01Eb2djMmhoWkdVdFkyOXNiM0lvSkdkeVpXVnVMQ0F5TlNVcElDRmtaV1poZFd4ME8xeHVYRzRrWTNsaGJpMDJNREE2SUhOb1lXUmxMV052Ykc5eUtDUmplV0Z1TENBeE1DVXBJQ0ZrWldaaGRXeDBPMXh1SkdONVlXNHROekF3T2lCemFHRmtaUzFqYjJ4dmNpZ2tZM2xoYml3Z01UVWxLU0FoWkdWbVlYVnNkRHRjYmlSamVXRnVMVGd3TURvZ2MyaGhaR1V0WTI5c2IzSW9KR041WVc0c0lESXdKU2tnSVdSbFptRjFiSFE3WEc0a1kzbGhiaTA1TURBNklITm9ZV1JsTFdOdmJHOXlLQ1JqZVdGdUxDQXlOU1VwSUNGa1pXWmhkV3gwTzF4dVhHNGtlV1ZzYkc5M0xUWXdNRG9nYzJoaFpHVXRZMjlzYjNJb0pIbGxiR3h2ZHl3Z01UQWxLU0FoWkdWbVlYVnNkRHRjYmlSNVpXeHNiM2N0TnpBd09pQnphR0ZrWlMxamIyeHZjaWdrZVdWc2JHOTNMQ0F4TlNVcElDRmtaV1poZFd4ME8xeHVKSGxsYkd4dmR5MDRNREE2SUhOb1lXUmxMV052Ykc5eUtDUjVaV3hzYjNjc0lESXdKU2tnSVdSbFptRjFiSFE3WEc0a2VXVnNiRzkzTFRrd01Eb2djMmhoWkdVdFkyOXNiM0lvSkhsbGJHeHZkeXdnTWpVbEtTQWhaR1ZtWVhWc2REdGNibHh1SkhKbFpDMDJNREE2SUhOb1lXUmxMV052Ykc5eUtDUnlaV1FzSURFd0pTa2dJV1JsWm1GMWJIUTdYRzRrY21Wa0xUY3dNRG9nYzJoaFpHVXRZMjlzYjNJb0pISmxaQ3dnTVRVbEtTQWhaR1ZtWVhWc2REdGNiaVJ5WldRdE9EQXdPaUJ6YUdGa1pTMWpiMnh2Y2lna2NtVmtMQ0F5TUNVcElDRmtaV1poZFd4ME8xeHVKSEpsWkMwNU1EQTZJSE5vWVdSbExXTnZiRzl5S0NSeVpXUXNJREkxSlNrZ0lXUmxabUYxYkhRN1hHNWNiaTh2SUNvZ1QzQjBhVzl1YzF4dUx5OGdLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtseHVYRzRrWlc1aFlteGxMVzVsWjJGMGFYWmxMVzFoY21kcGJuTTZJSFJ5ZFdVZ0lXUmxabUYxYkhRN1hHNGtaVzVoWW14bExYWmhiR2xrWVhScGIyNHRhV052Ym5NNklHWmhiSE5sSUNGa1pXWmhkV3gwTzF4dVhHNHZMeUJRY21WbWFYZ2dabTl5SURweWIyOTBJRU5UVXlCMllYSnBZV0pzWlhOY2JpUjJZWEpwWVdKc1pTMXdjbVZtYVhnNklHSnpMU0FoWkdWbVlYVnNkRHRjYmx4dUx5OGdLaUJUY0dGamFXNW5YRzR2THlBcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xWEc1Y2JpUnpjR0ZqWlhJNklERnlaVzBnSVdSbFptRjFiSFE3WEc1Y2JpUnphWHBsY3kxd2VEb2dLRnh1SUNCd2VDMHlNRG9nTWpCd2VDeGNiaUFnY0hndE16QTZJRE13Y0hnc1hHNGdJSEI0TFRRd09pQTBNSEI0TEZ4dUlDQndlQzAxTURvZ05UQndlQ3hjYmlBZ2NIZ3ROelU2SURjMWNIZ3NYRzRnSUhCNExURXdNRG9nTVRBd2NIZ3NYRzRnSUhCNExURTFNRG9nTVRVd2NIZ3NYRzRnSUhCNExUSXdNRG9nTWpBd2NIZ3NYRzRnSUhCNExUSTFNRG9nTWpVd2NIZ3NYRzRnSUhCNExUTXdNRG9nTXpBd2NIZ3NYRzRnSUhCNExUTTFNRG9nTXpVd2NIZ3NYRzRnSUhCNExUUXdNRG9nTkRBd2NIZ3NYRzRnSUhCNExUVXdNRG9nTlRBd2NIZ3NYRzRnSUhCNExUWXdNRG9nTmpBd2NIZ3NYRzRnSUhCNExUY3dNRG9nTnpBd2NIZ3NYRzRnSUhCNExUZ3dNRG9nT0RBd2NIZ3NYRzRnSUdGMWRHODZJR0YxZEc5Y2Jpa2dJV1JsWm1GMWJIUTdJQzh2SUNoREtWeHVYRzRrY21kaVlTMTBieTFvWlhndFltYzZJQ05tWm1ZZ0lXUmxabUYxYkhRN0lDOHZJQ2hES1Z4dUpISm5ZbUV0ZEc4dGFHVjRMV0puTFdsdWRtVnlkR1ZrT2lBak1EQXdJQ0ZrWldaaGRXeDBPeUF2THlBb1F5bGNibHh1THk4Z0tpQkNiMlI1WEc0dkx5QXFLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcVhHNWNiaVJpYjJSNUxXSm5PaUFqWmpKbU1tWTJJQ0ZrWldaaGRXeDBPMXh1SkdKdlpIa3RZMjlzYjNJNklISm5ZbUV0ZEc4dGFHVjRLQ1JuY21GNUxUY3dNQ3dnSkhKblltRXRkRzh0YUdWNExXSm5LU0FoWkdWbVlYVnNkRHRjYmlSeVoySmhMWFJ2TFdobGVDMWlaem9nSTJabVppQWhaR1ZtWVhWc2REc2dMeThnS0VNcFhHNGtjbWRpWVMxMGJ5MW9aWGd0WW1jdGFXNTJaWEowWldRNklDTXdNREFnSVdSbFptRjFiSFE3SUM4dklDaERLVnh1WEc0dkx5QXFJRXhwYm10elhHNHZMeUFxS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FYRzVjYmlSc2FXNXJMV052Ykc5eU9pQWtjSEpwYldGeWVTQWhaR1ZtWVhWc2REdGNiaVJzYVc1ckxXUmxZMjl5WVhScGIyNDZJRzV2Ym1VZ0lXUmxabUYxYkhRN1hHNGtiR2x1YXkxemFHRmtaUzF3WlhKalpXNTBZV2RsT2lBeE1DVWdJV1JsWm1GMWJIUTdYRzRrYkdsdWF5MW9iM1psY2kxamIyeHZjam9nYzJocFpuUXRZMjlzYjNJb0pHeHBibXN0WTI5c2IzSXNJQ1JzYVc1ckxYTm9ZV1JsTFhCbGNtTmxiblJoWjJVcElDRmtaV1poZFd4ME8xeHVKR3hwYm1zdGFHOTJaWEl0WkdWamIzSmhkR2x2YmpvZ2JuVnNiQ0FoWkdWbVlYVnNkRHRjYmx4dUx5OGdLaUJIY21sa1hHNHZMeUFxS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FYRzVjYmk4dklFZHlhV1FnWTI5dWRHRnBibVZ5YzF4dVhHNHZMeUJ6WTNOekxXUnZZM010YzNSaGNuUWdZMjl1ZEdGcGJtVnlMVzFoZUMxM2FXUjBhSE5jYmlSamIyNTBZV2x1WlhJdGJXRjRMWGRwWkhSb2N6b2dLRnh1SUNCemJUb2dOVFF3Y0hnc1hHNGdJRzFrT2lBM01qQndlQ3hjYmlBZ2JHYzZJRGsyTUhCNExGeHVJQ0I0YkRvZ01URTBNSEI0TEZ4dUlDQjRlR3c2SURFME5EQndlQ0F2THlCRGRYTjBiMjBnZUhoc0lITnBlbVZjYmlrZ0lXUmxabUYxYkhRN1hHNHZMeUJ6WTNOekxXUnZZM010Wlc1a0lHTnZiblJoYVc1bGNpMXRZWGd0ZDJsa2RHaHpYRzVjYmlSbmNtbGtMV2QxZEhSbGNpMTNhV1IwYURvZ01TNDJNalZ5WlcwZ0lXUmxabUYxYkhRN1hHNGtZMjl1ZEdGcGJtVnlMWEJoWkdScGJtY3RlRG9nTVM0NE56VnlaVzBnSVdSbFptRjFiSFE3SUM4dklDaERLVnh1SkdOdmJuUmhhVzVsY2kxd1lXUmthVzVuTFhndGMyMDZJREZ5WlcwZ0lXUmxabUYxYkhRN0lDOHZJQ2hES1Z4dUpHTnZiblJoYVc1bGNpMXdZV1JrYVc1bkxYazZJREV1T0RjMWNtVnRJQ0ZrWldaaGRXeDBPeUF2THlBb1F5bGNibHh1THk4Z0tpQkRiMjF3YjI1bGJuUnpYRzR2THlBcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xWEc1Y2JpOHZJSE5qYzNNdFpHOWpjeTF6ZEdGeWRDQmliM0prWlhJdGRtRnlhV0ZpYkdWelhHNGtZbTl5WkdWeUxYZHBaSFJvT2lBeGNIZ2dJV1JsWm1GMWJIUTdYRzRrWW05eVpHVnlMV052Ykc5eU9pQnlaMkpoTFhSdkxXaGxlQ2drWjNKaGVTMHlNREFzSUNSeVoySmhMWFJ2TFdobGVDMWlaeWtnSVdSbFptRjFiSFE3WEc0a1ltOXlaR1Z5TFdsdWJtVnlMV052Ykc5eU9pQnlaMkpoTFhSdkxXaGxlQ2drWjNKaGVTMHhNREFzSUNSeVoySmhMWFJ2TFdobGVDMWlaeWtnSVdSbFptRjFiSFE3SUM4dklDaERLVnh1THk4Z2MyTnpjeTFrYjJOekxXVnVaQ0JpYjNKa1pYSXRkbUZ5YVdGaWJHVnpYRzVjYmk4dklITmpjM010Wkc5amN5MXpkR0Z5ZENCaWIzSmtaWEl0Y21Ga2FYVnpMWFpoY21saFlteGxjMXh1SkdKdmNtUmxjaTF5WVdScGRYTTZJREF1TWpWeVpXMGdJV1JsWm1GMWJIUTdYRzRrWW05eVpHVnlMWEpoWkdsMWN5MTRiRG9nTUM0ek56VnlaVzBnSVdSbFptRjFiSFE3SUM4dklDaERLVnh1SkdKdmNtUmxjaTF5WVdScGRYTXRiR2M2SURBdU16RXlOWEpsYlNBaFpHVm1ZWFZzZER0Y2JpUmliM0prWlhJdGNtRmthWFZ6TFhOdE9pQXdMakU0TnpWeVpXMGdJV1JsWm1GMWJIUTdYRzRrWW05eVpHVnlMWEpoWkdsMWN5MTRjem9nTUM0eE1qVnlaVzBnSVdSbFptRjFiSFE3SUM4dklDaERLVnh1THk4Z2MyTnpjeTFrYjJOekxXVnVaQ0JpYjNKa1pYSXRjbUZrYVhWekxYWmhjbWxoWW14bGMxeHVYRzR2THlCelkzTnpMV1J2WTNNdGMzUmhjblFnWW05NExYTm9ZV1J2ZHkxMllYSnBZV0pzWlhOY2JpUmliM2d0YzJoaFpHOTNPaUF3SURBdU1qVnlaVzBnTVhKbGJTQnlaMkpoS0hKblltRXRkRzh0YUdWNEtDUm5jbUY1TFRVd01Dd2dKSEpuWW1FdGRHOHRhR1Y0TFdKbktTd2dNQzQwTlNrZ0lXUmxabUYxYkhRN1hHNGtZbTk0TFhOb1lXUnZkeTF6YlRvZ01DQXdMakV5TlhKbGJTQXdMakkxY21WdElISm5ZbUVvY21kaVlTMTBieTFvWlhnb0pHZHlZWGt0TlRBd0xDQWtjbWRpWVMxMGJ5MW9aWGd0WW1jcExDQXdMalFwSUNGa1pXWmhkV3gwTzF4dUpHSnZlQzF6YUdGa2IzY3RiR2M2SURBZ01DNDJNalZ5WlcwZ01TNHlOWEpsYlNCeVoySmhLSEpuWW1FdGRHOHRhR1Y0S0NSbmNtRjVMVFV3TUN3Z0pISm5ZbUV0ZEc4dGFHVjRMV0puS1N3Z01DNDFLU0FoWkdWbVlYVnNkRHRjYmk4dklITmpjM010Wkc5amN5MWxibVFnWW05NExYTm9ZV1J2ZHkxMllYSnBZV0pzWlhOY2JseHVKR052YlhCdmJtVnVkQzFoWTNScGRtVXRZMjlzYjNJNklDUjNhR2wwWlNBaFpHVm1ZWFZzZER0Y2JpUmpiMjF3YjI1bGJuUXRZV04wYVhabExXSm5PaUJ5WjJKaEtDUndjbWx0WVhKNUxDQXdMakE0S1NBaFpHVm1ZWFZzZER0Y2JseHVKR052YlhCdmJtVnVkQzFzYVc1bExXaGxhV2RvZERvZ01TNDFOQ0FoWkdWbVlYVnNkRHNnTHk4Z0tFTXBYRzRrWTI5dGNHOXVaVzUwTFdadlkzVnpMWE5vWVdSdmR5MTNhV1IwYURvZ01uQjRJQ0ZrWldaaGRXeDBPeUF2THlBb1F5bGNibHh1Skdac2IyRjBhVzVuTFdOdmJYQnZibVZ1ZEMxaWIzSmtaWEl0WTI5c2IzSTZJSFJ5WVc1emNHRnlaVzUwSUNGa1pXWmhkV3gwT3lBdkx5QW9ReWxjYmlSbWJHOWhkR2x1WnkxamIyMXdiMjVsYm5RdGMyaGhaRzkzT2lBa1ltOTRMWE5vWVdSdmR5QWhaR1ZtWVhWc2REc2dMeThnS0VNcFhHNWNiaVJvY2kxamIyeHZjam9nY21kaVlTMTBieTFvWlhnb0pHZHlZWGt0TWpBd0xDQWtjbWRpWVMxMGJ5MW9aWGd0WW1jcElDRmtaV1poZFd4ME8xeHVKR2h5TFc5d1lXTnBkSGs2SURFZ0lXUmxabUYxYkhRN1hHNGtZbTl5WkdWeVpXUXRjbTkzTFdKdmNtUmxjaTFqYjJ4dmNqb2dKR2h5TFdOdmJHOXlJQ0ZrWldaaGRXeDBPeUF2THlBb1F5bGNibHh1THk4Z2MyTnpjeTFrYjJOekxYTjBZWEowSUdOaGNtVjBMWFpoY21saFlteGxjMXh1SkdOaGNtVjBMWGRwWkhSb09pQXdMalExWlcwZ0lXUmxabUYxYkhRN1hHNGtZMkZ5WlhRdGRtVnlkR2xqWVd3dFlXeHBaMjQ2SUcxcFpHUnNaU0FoWkdWbVlYVnNkRHRjYmlSallYSmxkQzF6Y0dGamFXNW5PaUF3TGpjMVpXMGdJV1JsWm1GMWJIUTdYRzR2THlCelkzTnpMV1J2WTNNdFpXNWtJR05oY21WMExYWmhjbWxoWW14bGMxeHVYRzR2THlBcUlGUjVjRzluY21Gd2FIbGNiaTh2SUNvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaXBjYmx4dUx5OGdjMk56Y3kxa2IyTnpMWE4wWVhKMElHWnZiblF0ZG1GeWFXRmliR1Z6WEc0a1ptOXVkQzFtWVcxcGJIa3RjMkZ1Y3kxelpYSnBaam9nSjBsQ1RTQlFiR1Y0SUZOaGJuTW5MQ0F0WVhCd2JHVXRjM2x6ZEdWdExDQkNiR2x1YTAxaFkxTjVjM1JsYlVadmJuUXNJQ2RUWldkdlpTQlZTU2NzSUNkUGVIbG5aVzRuTENBblZXSjFiblIxSnl3Z0owTmhiblJoY21Wc2JDY3NYRzRnSUNkR2FYSmhJRk5oYm5NbkxDQW5SSEp2YVdRZ1UyRnVjeWNzSUNkSVpXeDJaWFJwWTJFZ1RtVjFaU2NzSUhOaGJuTXRjMlZ5YVdZZ0lXUmxabUYxYkhRN1hHNGtabTl1ZEMxbVlXMXBiSGt0YzJWeWFXWTZJQ2RTZFdKcGF5Y3NJQ2RVYVcxbGN5Qk9aWGNnVW05dFlXNG5MQ0J6WlhKcFppQWhaR1ZtWVhWc2REc2dMeThnS0VNcFhHNGtabTl1ZEMxbVlXMXBiSGt0Ylc5dWIzTndZV05sT2lBblUwWk5iMjV2TFZKbFozVnNZWEluTENCTlpXNXNieXdnVFc5dVlXTnZMQ0JEYjI1emIyeGhjeXdnSjB4cFltVnlZWFJwYjI0Z1RXOXVieWNzSUNkRGIzVnlhV1Z5SUU1bGR5Y3NJRzF2Ym05emNHRmpaU0FoWkdWbVlYVnNkRHRjYmk4dklITjBlV3hsYkdsdWRDMWxibUZpYkdVZ2RtRnNkV1V0YTJWNWQyOXlaQzFqWVhObFhHNGtabTl1ZEMxbVlXMXBiSGt0WW1GelpUb2dkbUZ5S0MwdEkzc2tkbUZ5YVdGaWJHVXRjSEpsWm1sNGZXWnZiblF0YzJGdWN5MXpaWEpwWmlrZ0lXUmxabUYxYkhRN1hHNGtabTl1ZEMxbVlXMXBiSGt0WTI5a1pUb2dkbUZ5S0MwdEkzc2tkbUZ5YVdGaWJHVXRjSEpsWm1sNGZXWnZiblF0Ylc5dWIzTndZV05sS1NBaFpHVm1ZWFZzZER0Y2JseHVMeThnSkdadmJuUXRjMmw2WlMxeWIyOTBJR1ZtWm1WamRITWdkR2hsSUhaaGJIVmxJRzltSUdCeVpXMWdMQ0IzYUdsamFDQnBjeUIxYzJWa0lHWnZjaUJoY3lCM1pXeHNJR1p2Ym5RZ2MybDZaWE1zSUhCaFpHUnBibWR6SUdGdVpDQnRZWEpuYVc1elhHNHZMeUFrWm05dWRDMXphWHBsTFdKaGMyVWdaV1ptWldOMGN5QjBhR1VnWm05dWRDQnphWHBsSUc5bUlIUm9aU0JpYjJSNUlIUmxlSFJjYmlSbWIyNTBMWE5wZW1VdGNtOXZkRG9nTVRad2VDQWhaR1ZtWVhWc2REdGNiaVJtYjI1MExYTnBlbVV0WW1GelpUb2dNQzQ1TXpjMWNtVnRJQ0ZrWldaaGRXeDBPeUF2THlCQmMzTjFiV1Z6SUhSb1pTQmljbTkzYzJWeUlHUmxabUYxYkhRc0lIUjVjR2xqWVd4c2VTQmdNVFp3ZUdCY2JpUm1iMjUwTFhOcGVtVXRlR3c2SURFdU1qVnlaVzBnSVdSbFptRjFiSFE3SUM4dklDaERLVnh1SkdadmJuUXRjMmw2WlMxc1p6b2dNUzR3TmpOeVpXMGdJV1JsWm1GMWJIUTdYRzRrWm05dWRDMXphWHBsTFhOdE9pQXdMamd4TTNKbGJTQWhaR1ZtWVhWc2REdGNiaVJtYjI1MExYTnBlbVV0ZUhNNklEQXVOelZ5WlcwZ0lXUmxabUYxYkhRN0lDOHZJQ2hES1Z4dVhHNGtabTl1ZEMxM1pXbG5hSFF0YzJWdGFXSnZiR1E2SURZd01DQWhaR1ZtWVhWc2REc2dMeThnS0VNcFhHNGtabTl1ZEMxM1pXbG5hSFF0WW05c1pHVnlPaUE1TURBZ0lXUmxabUYxYkhRN1hHNGtabTl1ZEMxM1pXbG5hSFF0YkdsbmFIUmxjam9nTVRBd0lDRmtaV1poZFd4ME8xeHVYRzRrYkdsdVpTMW9aV2xuYUhRdFltRnpaVG9nTVM0ME55QWhaR1ZtWVhWc2REdGNiaVJzYVc1bExXaGxhV2RvZEMxNGJEb2dNUzQxSUNGa1pXWmhkV3gwT3lBdkx5QW9ReWxjYmlSc2FXNWxMV2hsYVdkb2RDMXNaem9nTVM0MUlDRmtaV1poZFd4ME8xeHVKR3hwYm1VdGFHVnBaMmgwTFhOdE9pQXhMaklnSVdSbFptRjFiSFE3WEc0a2JHbHVaUzFvWldsbmFIUXRlSE02SURFZ0lXUmxabUYxYkhRN0lDOHZJQ2hES1Z4dVhHNGthREV0Wm05dWRDMXphWHBsT2lBeUxqTTNOWEpsYlNBaFpHVm1ZWFZzZER0Y2JpUm9NaTFtYjI1MExYTnBlbVU2SURKeVpXMGdJV1JsWm1GMWJIUTdYRzRrYURNdFptOXVkQzF6YVhwbE9pQXhMall5TlhKbGJTQWhaR1ZtWVhWc2REdGNiaVJvTkMxbWIyNTBMWE5wZW1VNklERXVNemMxY21WdElDRmtaV1poZFd4ME8xeHVKR2cxTFdadmJuUXRjMmw2WlRvZ01TNHhNalZ5WlcwZ0lXUmxabUYxYkhRN1hHNGthRFl0Wm05dWRDMXphWHBsT2lBa1ptOXVkQzF6YVhwbExXSmhjMlVnSVdSbFptRjFiSFE3WEc0dkx5QnpZM056TFdSdlkzTXRaVzVrSUdadmJuUXRkbUZ5YVdGaWJHVnpYRzVjYmk4dklITmpjM010Wkc5amN5MXpkR0Z5ZENCb1pXRmthVzVuY3kxMllYSnBZV0pzWlhOY2JpUm9aV0ZrYVc1bmN5MXRZWEpuYVc0dFltOTBkRzl0T2lBa2MzQmhZMlZ5SUNGa1pXWmhkV3gwTzF4dUpHaGxZV1JwYm1kekxXWnZiblF0Wm1GdGFXeDVPaUFrWm05dWRDMW1ZVzFwYkhrdGMyVnlhV1lnSVdSbFptRjFiSFE3WEc0a2FHVmhaR2x1WjNNdFptOXVkQzEzWldsbmFIUTZJRFV3TUNBaFpHVm1ZWFZzZER0Y2JpUm9aV0ZrYVc1bmN5MXNhVzVsTFdobGFXZG9kRG9nTVM0eElDRmtaV1poZFd4ME8xeHVKR2hsWVdScGJtZHpMV052Ykc5eU9pQnlaMkpoTFhSdkxXaGxlQ2drWjNKaGVTMDRNREFzSUNSeVoySmhMWFJ2TFdobGVDMWlaeWtnSVdSbFptRjFiSFE3WEc0dkx5QnpZM056TFdSdlkzTXRaVzVrSUdobFlXUnBibWR6TFhaaGNtbGhZbXhsYzF4dVhHNHZMeUJ6WTNOekxXUnZZM010YzNSaGNuUWdaR2x6Y0d4aGVTMW9aV0ZrYVc1bmMxeHVKR1JwYzNCc1lYa3RabTl1ZEMxM1pXbG5hSFE2SURVd01DQWhaR1ZtWVhWc2REdGNiaTh2SUhOamMzTXRaRzlqY3kxbGJtUWdaR2x6Y0d4aGVTMW9aV0ZrYVc1bmMxeHVYRzR2THlCelkzTnpMV1J2WTNNdGMzUmhjblFnZEhsd1pTMTJZWEpwWVdKc1pYTmNiaVJzWldGa0xXWnZiblF0YzJsNlpUb2dKR1p2Ym5RdGMybDZaUzFpWVhObElDb2dNUzR4TWpVZ0lXUmxabUYxYkhRN1hHNGtiR1ZoWkMxbWIyNTBMWGRsYVdkb2REb2dOREF3SUNGa1pXWmhkV3gwTzF4dVhHNGtkR2x1ZVMxbWIyNTBMWE5wZW1VNklEY3dKU0FoWkdWbVlYVnNkRHNnTHk4Z0tFTXBYRzRrYzIxaGJHd3RabTl1ZEMxemFYcGxPaUE0TlNVZ0lXUmxabUYxYkhRN1hHNGtZbWxuTFdadmJuUXRjMmw2WlRvZ01URXlKU0FoWkdWbVlYVnNkRHNnTHk4Z0tFTXBYRzRrYkdGeVoyVXRabTl1ZEMxemFYcGxPaUF4TlRBbElDRmtaV1poZFd4ME95QXZMeUFvUXlsY2JpUjRiR0Z5WjJVdFptOXVkQzF6YVhwbE9pQXhOekFsSUNGa1pXWmhkV3gwT3lBdkx5QW9ReWxjYmx4dUpIUmxlSFF0YlhWMFpXUTZJSEpuWW1FdGRHOHRhR1Y0S0NSbmNtRjVMVFF3TUN3Z0pISm5ZbUV0ZEc4dGFHVjRMV0puS1NBaFpHVm1ZWFZzZER0Y2JpUjBaWGgwTFcxMWRHVmtMV2h2ZG1WeU9pQnlaMkpoTFhSdkxXaGxlQ2drWjNKaGVTMDJNREFzSUNSeVoySmhMWFJ2TFdobGVDMWlaeWtnSVdSbFptRjFiSFE3SUM4dklDaERLVnh1WEc0a2RHVjRkQzFzYVdkb2REb2djbWRpWVMxMGJ5MW9aWGdvSkdkeVlYa3ROREF3TENBa2NtZGlZUzEwYnkxb1pYZ3RZbWNwSUNGa1pXWmhkV3gwT3lBdkx5QW9ReWxjYmlSMFpYaDBMV3hwWjJoMFpYSTZJSEpuWW1FdGRHOHRhR1Y0S0NSbmNtRjVMVE13TUN3Z0pISm5ZbUV0ZEc4dGFHVjRMV0puS1NBaFpHVm1ZWFZzZERzZ0x5OGdLRU1wWEc0a2RHVjRkQzFzYVdkb2RHVnpkRG9nY21kaVlTMTBieTFvWlhnb0pHZHlZWGt0TWpBd0xDQWtjbWRpWVMxMGJ5MW9aWGd0WW1jcElDRmtaV1poZFd4ME95QXZMeUFvUXlsY2JpOHZJSE5qYzNNdFpHOWpjeTFsYm1RZ2RIbHdaUzEyWVhKcFlXSnNaWE5jYmx4dUx5OGdLaUJhTFdsdVpHVjRJRzFoYzNSbGNpQnNhWE4wWEc0dkx5QXFLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcVhHNWNiaVI2YVc1a1pYZ3RiV1Z1ZFMxbWFYaGxaRG9nTVRBNE1DQWhaR1ZtWVhWc2REdGNiaVI2YVc1a1pYZ3RiVzlrWVd3NklERXdPVEFnSVdSbFptRjFiSFE3WEc0a2VtbHVaR1Y0TFcxdlpHRnNMV0poWTJ0a2NtOXdPaUFrZW1sdVpHVjRMVzF2WkdGc0lDMGdNU0FoWkdWbVlYVnNkRHRjYmk4dklDUjZhVzVrWlhndGJXOWtZV3d0ZEc5d09pQXhNRGt3SUNGa1pXWmhkV3gwT3lBdkx5QW9ReWxjYmlSNmFXNWtaWGd0YjJabVkyRnVkbUZ6T2lBeE1Ea3dJQ0ZrWldaaGRXeDBPMXh1SkhwcGJtUmxlQzF2Wm1aallXNTJZWE10WW1GamEyUnliM0E2SUNSNmFXNWtaWGd0YjJabVkyRnVkbUZ6SUMwZ01TQWhaR1ZtWVhWc2REdGNiaVI2YVc1a1pYZ3RiR0Y1YjNWMExXMXZZbWxzWlRvZ01URXdNQ0FoWkdWbVlYVnNkRHNnTHk4Z0tFTXBYRzRrZW1sdVpHVjRMWEJ2Y0c5MlpYSTZJREV3T1RFZ0lXUmxabUYxYkhRN1hHNGtlbWx1WkdWNExYUnZZWE4wT2lBeE1EazFJQ0ZrWldaaGRXeDBPeUF2THlBb1F5bGNiaVI2YVc1a1pYZ3RkRzl2YkhScGNEb2dNVEE1T1NBaFpHVm1ZWFZzZER0Y2JpUjZhVzVrWlhndGJtOTBhV1pwWTJGMGFXOXVPaUE1T1RrNU9Ua2dJV1JsWm1GMWJIUTdJQzh2SUNoREtWeHVYRzR2THlBcUlGUmhZbXhsYzF4dUx5OGdLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtseHVYRzR2THlCelkzTnpMV1J2WTNNdGMzUmhjblFnZEdGaWJHVXRkbUZ5YVdGaWJHVnpYRzRrZEdGaWJHVXRZMlZzYkMxd1lXUmthVzVuTFhrNklEQXVOakkxY21WdElDRmtaV1poZFd4ME8xeHVKSFJoWW14bExXTmxiR3d0Y0dGa1pHbHVaeTE0T2lBeExqVnlaVzBnSVdSbFptRjFiSFE3WEc0a2RHRmliR1V0WTJWc2JDMXdZV1JrYVc1bkxYa3RjMjA2SURBdU16RXlOWEpsYlNBaFpHVm1ZWFZzZER0Y2JpUjBZV0pzWlMxalpXeHNMWEJoWkdScGJtY3RlQzF6YlRvZ01DNDJNalZ5WlcwZ0lXUmxabUYxYkhRN1hHNWNiaVIwWVdKc1pTMWpaV3hzTFhabGNuUnBZMkZzTFdGc2FXZHVPaUJ0YVdSa2JHVWdJV1JsWm1GMWJIUTdYRzVjYmlSMFlXSnNaUzEwYUMxbWIyNTBMWGRsYVdkb2REb2dKR1p2Ym5RdGQyVnBaMmgwTFhObGJXbGliMnhrSUNGa1pXWmhkV3gwTzF4dVhHNGtkR0ZpYkdVdGMzUnlhWEJsWkMxaVp5MW1ZV04wYjNJNklEQXVNRE1nSVdSbFptRjFiSFE3WEc0a2RHRmliR1V0YzNSeWFYQmxaQzFpWnpvZ2NtZGlZUzEwYnkxb1pYZ29jbWRpWVNna1lteGhZMnNzSUNSMFlXSnNaUzF6ZEhKcGNHVmtMV0puTFdaaFkzUnZjaWtzSUNSeVoySmhMWFJ2TFdobGVDMWlaeWtnSVdSbFptRjFiSFE3WEc1Y2JpUjBZV0pzWlMxb2IzWmxjaTFpWnkxbVlXTjBiM0k2SURBdU1EWWdJV1JsWm1GMWJIUTdYRzRrZEdGaWJHVXRhRzkyWlhJdFltYzZJSEpuWW1FdGRHOHRhR1Y0S0hKblltRW9KR0pzWVdOckxDQWtkR0ZpYkdVdGFHOTJaWEl0WW1jdFptRmpkRzl5S1N3Z0pISm5ZbUV0ZEc4dGFHVjRMV0puS1NBaFpHVm1ZWFZzZER0Y2JseHVKSFJoWW14bExXSnZjbVJsY2kxbVlXTjBiM0k2SURBdU1pQWhaR1ZtWVhWc2REdGNiaVIwWVdKc1pTMWliM0prWlhJdGQybGtkR2c2SUNSaWIzSmtaWEl0ZDJsa2RHZ2dJV1JsWm1GMWJIUTdYRzRrZEdGaWJHVXRZbTl5WkdWeUxXTnZiRzl5T2lBa1ltOXlaR1Z5TFdOdmJHOXlJQ0ZrWldaaGRXeDBPMXh1SkhSaFlteGxMV2R5YjNWd0xYTmxjR0Z5WVhSdmNpMWpiMnh2Y2pvZ0pIUmhZbXhsTFdKdmNtUmxjaTFqYjJ4dmNpQWhaR1ZtWVhWc2REdGNibHh1THk4Z0tpQkNkWFIwYjI1eklDc2dSbTl5YlhOY2JpOHZJQ29xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpcGNiaTh2UHlCMllXeDFaWE1nWVhKbElHNXZkQ0JoY3lCd1pYSWdaR1Z6YVdkdUlHRnpJSGRsSUc1bFpXUWdkRzhnYzJWMElITmhiV1VnYUdWcFoyaDBJSGRwZEdnZ2FXTnZibk1nWVc1a0lIZHBkR2h2ZFhRZ2FXTnZibk5jYmlScGJuQjFkQzFpZEc0dGNHRmtaR2x1WnkxNU9pQXdMalEyT1hKbGJTQWhaR1ZtWVhWc2REdGNiaVJwYm5CMWRDMWlkRzR0Y0dGa1pHbHVaeTE0T2lBeExqTTNOWEpsYlNBaFpHVm1ZWFZzZER0Y2JpUnBibkIxZEMxaWRHNHRabTl1ZEMxemFYcGxPaUFrWm05dWRDMXphWHBsTFdKaGMyVWdJV1JsWm1GMWJIUTdYRzRrYVc1d2RYUXRZblJ1TFd4cGJtVXRhR1ZwWjJoME9pQXhMalFnSVdSbFptRjFiSFE3WEc1Y2JpUnBibkIxZEMxaWRHNHRabTlqZFhNdGQybGtkR2c2SURBdU1EWXlOWEpsYlNBaFpHVm1ZWFZzZER0Y2JpUnBibkIxZEMxaWRHNHRabTlqZFhNdFkyOXNiM0l0YjNCaFkybDBlVG9nTUM0eE9DQWhaR1ZtWVhWc2REdGNiaVJwYm5CMWRDMWlkRzR0Wm05amRYTXRZMjlzYjNJNklISm5ZbUVvSkdkeVlYa3ROVEF3TENBa2FXNXdkWFF0WW5SdUxXWnZZM1Z6TFdOdmJHOXlMVzl3WVdOcGRIa3BJQ0ZrWldaaGRXeDBPMXh1SkdsdWNIVjBMV0owYmkxbWIyTjFjeTFpYkhWeU9pQXdMakU0TnpWeVpXMGdJV1JsWm1GMWJIUTdYRzRrYVc1d2RYUXRZblJ1TFdadlkzVnpMV0p2ZUMxemFHRmtiM2M2SURBZ0pHbHVjSFYwTFdKMGJpMW1iMk4xY3kxM2FXUjBhQ0FrYVc1d2RYUXRZblJ1TFdadlkzVnpMV0pzZFhJZ01DQWthVzV3ZFhRdFluUnVMV1p2WTNWekxXTnZiRzl5SUNGa1pXWmhkV3gwTzF4dVhHNGthVzV3ZFhRdFluUnVMWEJoWkdScGJtY3RlUzE0Y3pvZ01DNHhjbVZ0SUNGa1pXWmhkV3gwT3lBdkx5QW9ReWxjYmlScGJuQjFkQzFpZEc0dGNHRmtaR2x1WnkxNExYaHpPaUF3TGpWeVpXMGdJV1JsWm1GMWJIUTdJQzh2SUNoREtWeHVKR2x1Y0hWMExXSjBiaTFtYjI1MExYTnBlbVV0ZUhNNklDUm1iMjUwTFhOcGVtVXRlSE1nSVdSbFptRjFiSFE3SUM4dklDaERLVnh1SkdsdWNIVjBMV0owYmkxc2FXNWxMV2hsYVdkb2RDMTRjem9nSkd4cGJtVXRhR1ZwWjJoMExYaHpJQ0ZrWldaaGRXeDBPeUF2THlBb1F5bGNibHh1SkdsdWNIVjBMV0owYmkxd1lXUmthVzVuTFhrdGMyMDZJREF1TVRnM2NtVnRJQ0ZrWldaaGRXeDBPMXh1SkdsdWNIVjBMV0owYmkxd1lXUmthVzVuTFhndGMyMDZJREZ5WlcwZ0lXUmxabUYxYkhRN1hHNGthVzV3ZFhRdFluUnVMV1p2Ym5RdGMybDZaUzF6YlRvZ0pHWnZiblF0YzJsNlpTMXpiU0FoWkdWbVlYVnNkRHRjYmlScGJuQjFkQzFpZEc0dGJHbHVaUzFvWldsbmFIUXRjMjA2SUNSc2FXNWxMV2hsYVdkb2RDMXpiU0FoWkdWbVlYVnNkRHRjYmx4dUpHbHVjSFYwTFdKMGJpMXdZV1JrYVc1bkxYa3RiR2M2SURBdU56UnlaVzBnSVdSbFptRjFiSFE3WEc0a2FXNXdkWFF0WW5SdUxYQmhaR1JwYm1jdGVDMXNaem9nTWk0eE9EYzFjbVZ0SUNGa1pXWmhkV3gwTzF4dUpHbHVjSFYwTFdKMGJpMW1iMjUwTFhOcGVtVXRiR2M2SUNSbWIyNTBMWE5wZW1VdGJHY2dJV1JsWm1GMWJIUTdYRzRrYVc1d2RYUXRZblJ1TFd4cGJtVXRhR1ZwWjJoMExXeG5PaUFrYkdsdVpTMW9aV2xuYUhRdGJHY2dJV1JsWm1GMWJIUTdYRzVjYmlScGJuQjFkQzFpZEc0dGNHRmtaR2x1WnkxNUxYaHNPaUF3TGpnM05YSmxiU0FoWkdWbVlYVnNkRHNnTHk4Z0tFTXBYRzRrYVc1d2RYUXRZblJ1TFhCaFpHUnBibWN0ZUMxNGJEb2dNaTR4TWpWeVpXMGdJV1JsWm1GMWJIUTdJQzh2SUNoREtWeHVKR2x1Y0hWMExXSjBiaTFtYjI1MExYTnBlbVV0ZUd3NklDUm1iMjUwTFhOcGVtVXRlR3dnSVdSbFptRjFiSFE3SUM4dklDaERLVnh1SkdsdWNIVjBMV0owYmkxc2FXNWxMV2hsYVdkb2RDMTRiRG9nSkd4cGJtVXRhR1ZwWjJoMExYaHNJQ0ZrWldaaGRXeDBPeUF2THlBb1F5bGNibHh1THk4Z0tpQkNkWFIwYjI1elhHNHZMeUFxS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FYRzVjYmlSaWRHNHRjR0ZrWkdsdVp5MTVMWGh6T2lBa2FXNXdkWFF0WW5SdUxYQmhaR1JwYm1jdGVTMTRjeUFoWkdWbVlYVnNkRHNnTHk4Z0tFTXBYRzRrWW5SdUxYQmhaR1JwYm1jdGVDMTRjem9nSkdsdWNIVjBMV0owYmkxd1lXUmthVzVuTFhndGVITWdJV1JsWm1GMWJIUTdJQzh2SUNoREtWeHVKR0owYmkxbWIyNTBMWE5wZW1VdGVITTZJQ1JwYm5CMWRDMWlkRzR0Wm05dWRDMXphWHBsTFhoeklDRmtaV1poZFd4ME95QXZMeUFvUXlsY2JseHVKR0owYmkxd1lXUmthVzVuTFhrdGVHdzZJQ1JwYm5CMWRDMWlkRzR0Y0dGa1pHbHVaeTE1TFhoc0lDRmtaV1poZFd4ME95QXZMeUFvUXlsY2JpUmlkRzR0Y0dGa1pHbHVaeTE0TFhoc09pQWthVzV3ZFhRdFluUnVMWEJoWkdScGJtY3RlQzE0YkNBaFpHVm1ZWFZzZERzZ0x5OGdLRU1wWEc0a1luUnVMV1p2Ym5RdGMybDZaUzE0YkRvZ0pHbHVjSFYwTFdKMGJpMW1iMjUwTFhOcGVtVXRlR3dnSVdSbFptRjFiSFE3SUM4dklDaERLVnh1WEc0a1luUnVMV3hwYm1VdGFHVnBaMmgwTFhoek9pQWthVzV3ZFhRdFluUnVMV3hwYm1VdGFHVnBaMmgwTFhoeklDRmtaV1poZFd4ME95QXZMeUFvUXlsY2JpUmlkRzR0YkdsdVpTMW9aV2xuYUhRdGMyMDZJQ1JzYVc1bExXaGxhV2RvZEMxemJUc2dMeThvUXlsY2JpUmlkRzR0YkdsdVpTMW9aV2xuYUhRdGJHYzZJQ1JzYVc1bExXaGxhV2RvZEMxc1p6c2dMeThvUXlsY2JpUmlkRzR0YkdsdVpTMW9aV2xuYUhRdGVHdzZJQ1JwYm5CMWRDMWlkRzR0YkdsdVpTMW9aV2xuYUhRdGVHd2dJV1JsWm1GMWJIUTdJQzh2SUNoREtWeHVYRzRrWW5SdUxXSnZlQzF6YUdGa2IzYzZJQ1JpYjNndGMyaGhaRzkzTFhOdElDRmtaV1poZFd4ME8xeHVKR0owYmkxb2IzWmxjaTFpYjNndGMyaGhaRzkzT2lBa1ltOTRMWE5vWVdSdmR5QWhaR1ZtWVhWc2REc2dMeThnS0VNcFhHNGtZblJ1TFdadlkzVnpMV0p2ZUMxemFHRmtiM2M2SUc1dmJtVWdJV1JsWm1GMWJIUTdYRzRrWW5SdUxXRmpkR2wyWlMxaWIzZ3RjMmhoWkc5M09pQnViMjVsSUNGa1pXWmhkV3gwTzF4dVhHNGtZblJ1TFdKdmNtUmxjaTF5WVdScGRYTXRlSE02SUNSaWIzSmtaWEl0Y21Ga2FYVnpMWGh6SUNGa1pXWmhkV3gwT3lBdkx5QW9ReWxjYmlSaWRHNHRZbTl5WkdWeUxYSmhaR2wxY3kxNGJEb2dKR0p2Y21SbGNpMXlZV1JwZFhNdGVHd2dJV1JsWm1GMWJIUTdJQzh2SUNoREtWeHVYRzRrWW5SdUxYUnlZVzV6YVhScGIyNDZJR0ZzYkNBd0xqSnpJR1ZoYzJVdGFXNHRiM1YwSUNGa1pXWmhkV3gwTzF4dVhHNGtZblJ1TFd4aFltVnNMV0puTFhOb1lXUmxMV0Z0YjNWdWREb2dPRFFsSUNGa1pXWmhkV3gwT3lBdkx5QW9ReWxjYmlSaWRHNHRiR0ZpWld3dFltY3RkR2x1ZEMxaGJXOTFiblE2SURnMEpTQWhaR1ZtWVhWc2REc2dMeThnS0VNcFhHNWNiaVJpZEc0dGJHRmlaV3d0WkdsellXSnNaV1F0WW1jdGMyaGhaR1V0WVcxdmRXNTBPaUEzTlNVZ0lXUmxabUYxYkhRN0lDOHZJQ2hES1Z4dUpHSjBiaTFzWVdKbGJDMWthWE5oWW14bFpDMWlaeTEwYVc1MExXRnRiM1Z1ZERvZ056VWxJQ0ZrWldaaGRXeDBPeUF2THlBb1F5bGNibHh1SkdKMGJpMW9iM1psY2kxaVp5MXphR0ZrWlMxaGJXOTFiblE2SURJd0pTQWhaR1ZtWVhWc2REdGNiaVJpZEc0dGFHOTJaWEl0WW1jdGRHbHVkQzFoYlc5MWJuUTZJREl3SlNBaFpHVm1ZWFZzZER0Y2JpUmlkRzR0YUc5MlpYSXRZbTl5WkdWeUxYTm9ZV1JsTFdGdGIzVnVkRG9nTWpBbElDRmtaV1poZFd4ME8xeHVKR0owYmkxb2IzWmxjaTFpYjNKa1pYSXRkR2x1ZEMxaGJXOTFiblE2SURJd0pTQWhaR1ZtWVhWc2REdGNiaVJpZEc0dFlXTjBhWFpsTFdKbkxYTm9ZV1JsTFdGdGIzVnVkRG9nTVRVbElDRmtaV1poZFd4ME8xeHVKR0owYmkxaFkzUnBkbVV0WW1jdGRHbHVkQzFoYlc5MWJuUTZJREUxSlNBaFpHVm1ZWFZzZER0Y2JpUmlkRzR0WVdOMGFYWmxMV0p2Y21SbGNpMXphR0ZrWlMxaGJXOTFiblE2SURFMUpTQWhaR1ZtWVhWc2REdGNiaVJpZEc0dFlXTjBhWFpsTFdKdmNtUmxjaTEwYVc1MExXRnRiM1Z1ZERvZ01UVWxJQ0ZrWldaaGRXeDBPMXh1WEc0dkx5QXFJRVp2Y20xelhHNHZMeUFxS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FYRzVjYmk4dklITmpjM010Wkc5amN5MXpkR0Z5ZENCbWIzSnRMWFJsZUhRdGRtRnlhV0ZpYkdWelhHNGtabTl5YlMxMFpYaDBMVzFoY21kcGJpMTBiM0E2SURBdU1qVnlaVzBnSVdSbFptRjFiSFE3WEc0a1ptOXliUzEwWlhoMExXWnZiblF0YzJsNlpUb2dKSE50WVd4c0xXWnZiblF0YzJsNlpTQWhaR1ZtWVhWc2REdGNiaVJtYjNKdExYUmxlSFF0WTI5c2IzSTZJQ1IwWlhoMExXeHBaMmgwSUNGa1pXWmhkV3gwTzF4dUx5OGdjMk56Y3kxa2IyTnpMV1Z1WkNCbWIzSnRMWFJsZUhRdGRtRnlhV0ZpYkdWelhHNWNiaTh2SUhOamMzTXRaRzlqY3kxemRHRnlkQ0JtYjNKdExXeGhZbVZzTFhaaGNtbGhZbXhsYzF4dUpHWnZjbTB0YkdGaVpXd3RiV0Z5WjJsdUxXSnZkSFJ2YlRvZ01DNHlOWEpsYlNBaFpHVm1ZWFZzZER0Y2JpUm1iM0p0TFd4aFltVnNMV1p2Ym5RdGMybDZaVG9nTUM0M05YSmxiU0FoWkdWbVlYVnNkRHRjYmlSbWIzSnRMV3hoWW1Wc0xXWnZiblF0ZDJWcFoyaDBPaUEwTURBZ0lXUmxabUYxYkhRN1hHNGtabTl5YlMxc1lXSmxiQzFzWlhSMFpYSXRjM0JoWTJsdVp6b2dhVzVvWlhKcGRDQWhaR1ZtWVhWc2REc2dMeThvUXlsY2JpUm1iM0p0TFd4aFltVnNMWFJsZUhRdGRISmhibk5tYjNKdE9pQjFjSEJsY21OaGMyVWdJV1JsWm1GMWJIUTdJQzh2S0VNcFhHNHZMeUJ6WTNOekxXUnZZM010Wlc1a0lHWnZjbTB0YkdGaVpXd3RkbUZ5YVdGaWJHVnpYRzVjYmk4dklITmpjM010Wkc5amN5MXpkR0Z5ZENCbWIzSnRMV2x1Y0hWMExYWmhjbWxoWW14bGMxeHVKR2x1Y0hWMExYQmhaR1JwYm1jdGVEb2dNQzQzTXpWeVpXMGdJV1JsWm1GMWJIUTdYRzRrYVc1d2RYUXRiR2x1WlMxb1pXbG5hSFE2SUNScGJuQjFkQzFpZEc0dGJHbHVaUzFvWldsbmFIUWdJV1JsWm1GMWJIUTdYRzVjYmlScGJuQjFkQzF3WVdSa2FXNW5MWGt0YzIwNklEQXVNalZ5WlcwZ0lXUmxabUYxYkhRN1hHNGthVzV3ZFhRdGNHRmtaR2x1WnkxNExYTnRPaUF3TGpaeVpXMGdJV1JsWm1GMWJIUTdYRzVjYmlScGJuQjFkQzF3WVdSa2FXNW5MWGt0YkdjNklEQXVOelZ5WlcwZ0lXUmxabUYxYkhRN1hHNGthVzV3ZFhRdGNHRmtaR2x1WnkxNExXeG5PaUF3TGpnMWNtVnRJQ0ZrWldaaGRXeDBPMXh1WEc0a2FXNXdkWFF0WW1jNklDUjNhR2wwWlNBaFpHVm1ZWFZzZER0Y2JpUnBibkIxZEMxa2FYTmhZbXhsWkMxaVp6b2djbWRpWVMxMGJ5MW9aWGdvY21kaVlTMTBieTFvWlhnb2NtZGlZU2drWjNKaGVTMDFNREFzSURBdU1Ta3NJQ1J5WjJKaExYUnZMV2hsZUMxaVp5a3NJQ1J5WjJKaExYUnZMV2hsZUMxaVp5a2dJV1JsWm1GMWJIUTdYRzVjYmlScGJuQjFkQzFqYjJ4dmNqb2dKR0p2WkhrdFkyOXNiM0lnSVdSbFptRjFiSFE3WEc0a2FXNXdkWFF0WW05eVpHVnlMV052Ykc5eU9pQnlaMkpoTFhSdkxXaGxlQ2drWjNKaGVTMHlNREFzSUNSeVoySmhMWFJ2TFdobGVDMWlaeWtnSVdSbFptRjFiSFE3WEc1Y2JpUnBibkIxZEMxbWIyTjFjeTFpYjNKa1pYSXRZMjlzYjNJdGMyTmhiR1U2SURRd0pUc2dMeThvUXlsY2JpUnBibkIxZEMxbWIyTjFjeTFpYjNKa1pYSXRZMjlzYjNJNklIUnBiblF0WTI5c2IzSW9KR052YlhCdmJtVnVkQzFoWTNScGRtVXRZbWNzSUNScGJuQjFkQzFtYjJOMWN5MWliM0prWlhJdFkyOXNiM0l0YzJOaGJHVXBJQ0ZrWldaaGRXeDBPMXh1THk4Z0pHbHVjSFYwTFdadlkzVnpMV0p2ZUMxemFHRmtiM2M2SURBZ01YQjRJRE53ZUNBd0lISm5ZbUVvSkdkeVlYa3ROVEF3TENBd0xqRTRLU0FoWkdWbVlYVnNkRHRjYmx4dUpHbHVjSFYwTFhCc1lXTmxhRzlzWkdWeUxYUnlZVzV6YVhScGIyNDZJR0ZzYkNBd0xqSTFjeUJsWVhObE8xeHVKR2x1Y0hWMExYQnNZV05sYUc5c1pHVnlMWFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsS0RWd2VDazdYRzRrYVc1d2RYUXRjR3hoWTJWb2IyeGtaWEl0WTI5c2IzSTZJSEpuWW1FdGRHOHRhR1Y0S0NSbmNtRjVMVFF3TUN3Z0pISm5ZbUV0ZEc4dGFHVjRMV0puS1NBaFpHVm1ZWFZzZER0Y2JseHVKR2x1Y0hWMExXaGxhV2RvZEMxcGJtNWxjam9nY0hndGRHOHRjbVZ0S0Z4dUlDQm1iRzl2Y2loeVpXMHRkRzh0Y0hnb0tDUnBibkIxZEMxaWRHNHRabTl1ZEMxemFYcGxJQ29nSkdsdWNIVjBMV0owYmkxc2FXNWxMV2hsYVdkb2RDa2dLeUFvSkdsdWNIVjBMV0owYmkxd1lXUmthVzVuTFhrZ0tpQXlLU2twWEc0cElDRmtaV1poZFd4ME8xeHVKR2x1Y0hWMExXaGxhV2RvZEMxcGJtNWxjaTF6YlRvZ2NIZ3RkRzh0Y21WdEtGeHVJQ0JtYkc5dmNpaHlaVzB0ZEc4dGNIZ29LQ1JwYm5CMWRDMWlkRzR0Wm05dWRDMXphWHBsTFhOdElDb2dKR2x1Y0hWMExXSjBiaTFzYVc1bExXaGxhV2RvZEMxemJTa2dLeUFvSkdsdWNIVjBMV0owYmkxd1lXUmthVzVuTFhrdGMyMGdLaUF5S1NrcFhHNHBJQ0ZrWldaaGRXeDBPeUF2THlBb1F5bGNiaVJwYm5CMWRDMW9aV2xuYUhRdGFXNXVaWEl0YkdjNklIQjRMWFJ2TFhKbGJTaGNiaUFnWm14dmIzSW9jbVZ0TFhSdkxYQjRLQ2drWm05dWRDMXphWHBsTFd4bklDb2dKR3hwYm1VdGFHVnBaMmgwTFd4bktTQXJJQ2drYVc1d2RYUXRZblJ1TFhCaFpHUnBibWN0ZVMxc1p5QXFJRElwS1NsY2Jpa2dJV1JsWm1GMWJIUTdJQzh2SUNoREtWeHVMeThnYzJOemN5MWtiMk56TFdWdVpDQm1iM0p0TFdsdWNIVjBMWFpoY21saFlteGxjMXh1WEc0dkx5QnpZM056TFdSdlkzTXRjM1JoY25RZ1ptOXliUzFqYUdWamF5MTJZWEpwWVdKc1pYTmNiaVJtYjNKdExXTm9aV05yTFdsdWNIVjBMWGRwWkhSb09pQXhMakpsYlNBaFpHVm1ZWFZzZER0Y2JpUm1iM0p0TFdSaGRHRjBZV0pzWlhNdFkyaGxZMnN0YVc1d2RYUXRjMmw2WlRvZ01UaHdlQ0FoWkdWbVlYVnNkRHNnTHk4Z0tFTXBJRVp2Y2lCa1lYUmhkR0ZpYkdWeklIZHBkR2dnWTJobFkydGliM2d0SUhWd1pHRjBaU0JoWTJOdmNtUnBibWNnZEc4Z0pHWnZjbTB0WTJobFkyc3RhVzV3ZFhRdGQybGtkR2hjYmlSbWIzSnRMV05vWldOckxXMXBiaTFvWldsbmFIUTZJQ1JtYjI1MExYTnBlbVV0WW1GelpTQXFJQ1JzYVc1bExXaGxhV2RvZEMxaVlYTmxJQ0ZrWldaaGRXeDBPMXh1SkdadmNtMHRZMmhsWTJzdGFXNXdkWFF0WW05eVpHVnlPaUF4Y0hnZ2MyOXNhV1FnY21kaVlTMTBieTFvWlhnb0pHZHlZWGt0TXpBd0xDQWtjbWRpWVMxMGJ5MW9aWGd0WW1jcElDRmtaV1poZFd4ME8xeHVYRzRrWm05eWJTMWphR1ZqYXkxc1lXSmxiQzFqZFhKemIzSTZJSEJ2YVc1MFpYSWdJV1JsWm1GMWJIUTdYRzRrWm05eWJTMWphR1ZqYXkxc1lXSmxiQzFrYVhOaFlteGxaQzFqYjJ4dmNqb2dKSFJsZUhRdGJYVjBaV1FnSVdSbFptRjFiSFE3SUM4dklDaERLVnh1WEc0a1ptOXliUzFqYUdWamF5MXBibkIxZEMxamFHVmphMlZrTFdOdmJHOXlPaUFrWTI5dGNHOXVaVzUwTFdGamRHbDJaUzFqYjJ4dmNpQWhaR1ZtWVhWc2REdGNiaVJtYjNKdExXTm9aV05yTFdsdWNIVjBMV05vWldOclpXUXRZbWN0YVcxaFoyVTZJSFZ5YkNoY0ltUmhkR0U2YVcxaFoyVXZjM1puSzNodGJDdzhjM1puSUhodGJHNXpQU2RvZEhSd09pOHZkM2QzTG5jekxtOXlaeTh5TURBd0wzTjJaeWNnZG1sbGQwSnZlRDBuTUNBd0lESXdJREl3Sno0OGNHRjBhQ0JtYVd4c1BTZHViMjVsSnlCemRISnZhMlU5SnlON0pHWnZjbTB0WTJobFkyc3RhVzV3ZFhRdFkyaGxZMnRsWkMxamIyeHZjbjBuSUhOMGNtOXJaUzFzYVc1bFkyRndQU2R5YjNWdVpDY2djM1J5YjJ0bExXeHBibVZxYjJsdVBTZHliM1Z1WkNjZ2MzUnliMnRsTFhkcFpIUm9QU2N5SnlCa1BTZE5OaUF4TUd3eklETnNOaTAySnk4K1BDOXpkbWMrWENJcElDRmtaV1poZFd4ME8xeHVKR1p2Y20wdFkyaGxZMnN0Y21Ga2FXOHRZMmhsWTJ0bFpDMWlaeTFwYldGblpUb2dkWEpzS0Z3aVpHRjBZVHBwYldGblpTOXpkbWNyZUcxc0xEeHpkbWNnZUcxc2JuTTlKMmgwZEhBNkx5OTNkM2N1ZHpNdWIzSm5Mekl3TURBdmMzWm5KeUIyYVdWM1FtOTRQU2N0TkNBdE5DQTRJRGduUGp4amFYSmpiR1VnY2owbk1TNDFKeUJtYVd4c1BTY2pleVJtYjNKdExXTm9aV05yTFdsdWNIVjBMV05vWldOclpXUXRZMjlzYjNKOUp5OCtQQzl6ZG1jK1hDSXBJQ0ZrWldaaGRXeDBPMXh1SkdadmNtMHRZMmhsWTJzdGFXNXdkWFF0Wm05amRYTXRZbTk0TFhOb1lXUnZkem9nTUNBd0lEQWdNQzR4TW5KbGJTQnlaMkpoS0hKblltRXRkRzh0YUdWNEtDUm5jbUY1TFRVd01Dd2dKSEpuWW1FdGRHOHRhR1Y0TFdKbktTd2dNekFsS1NBaFpHVm1ZWFZzZER0Y2JseHVKR1p2Y20wdFkyaGxZMnN0YVc1d2RYUXRhVzVrWlhSbGNtMXBibUYwWlMxamIyeHZjam9nSkdOdmJYQnZibVZ1ZEMxaFkzUnBkbVV0WTI5c2IzSWdJV1JsWm1GMWJIUTdYRzRrWm05eWJTMWphR1ZqYXkxcGJuQjFkQzFwYm1SbGRHVnliV2x1WVhSbExXSm5MV2x0WVdkbE9pQjFjbXdvWENKa1lYUmhPbWx0WVdkbEwzTjJaeXQ0Yld3c1BITjJaeUI0Yld4dWN6MG5hSFIwY0RvdkwzZDNkeTUzTXk1dmNtY3ZNakF3TUM5emRtY25JSFpwWlhkQ2IzZzlKekFnTUNBeU1DQXlNQ2MrUEhCaGRHZ2dabWxzYkQwbmJtOXVaU2NnYzNSeWIydGxQU2NqZXlSbWIzSnRMV05vWldOckxXbHVjSFYwTFdsdVpHVjBaWEp0YVc1aGRHVXRZMjlzYjNKOUp5QnpkSEp2YTJVdGJHbHVaV05oY0QwbmNtOTFibVFuSUhOMGNtOXJaUzFzYVc1bGFtOXBiajBuY205MWJtUW5JSE4wY205clpTMTNhV1IwYUQwbk1pY2daRDBuVFRZZ01UQm9PQ2N2UGp3dmMzWm5QbHdpS1NBaFpHVm1ZWFZzZER0Y2JpOHZJSE5qYzNNdFpHOWpjeTFsYm1RZ1ptOXliUzFqYUdWamF5MTJZWEpwWVdKc1pYTmNibHh1THk4Z2MyTnpjeTFrYjJOekxYTjBZWEowSUdadmNtMHRjM2RwZEdOb0xYWmhjbWxoWW14bGMxeHVYRzRrWm05eWJTMXpkMmwwWTJndFkyOXNiM0k2SUNSbmNtRjVMVE13TUNBaFpHVm1ZWFZzZER0Y2JpUm1iM0p0TFhOM2FYUmphQzEzYVdSMGFEb2dNbVZ0SUNGa1pXWmhkV3gwTzF4dUpHWnZjbTB0YzNkcGRHTm9MWEJoWkdScGJtY3RjM1JoY25RNklDUm1iM0p0TFhOM2FYUmphQzEzYVdSMGFDQXJJREF1TldWdElDRmtaV1poZFd4ME8xeHVYRzRrWm05eWJTMXpkMmwwWTJndFkyaGxZMnRsWkMxaVp5MXdiM05wZEdsdmJpMXlkR3c2SUd4bFpuUWdZMlZ1ZEdWeUlDRmtaV1poZFd4ME95QXZMeWhES1Z4dUx5OGdjMk56Y3kxa2IyTnpMV1Z1WkNCbWIzSnRMWE4zYVhSamFDMTJZWEpwWVdKc1pYTmNibHh1THk5cGJuQjFkQzFuY205MWNDMTJZWEpwWVdKc1pYTmNiaVJwYm5CMWRDMW5jbTkxY0MxaFpHUnZiaTFqYjJ4dmNqb2dKR2x1Y0hWMExXTnZiRzl5SUNGa1pXWmhkV3gwTzF4dUpHbHVjSFYwTFdkeWIzVndMV0ZrWkc5dUxXSm5PaUFrYVc1d2RYUXRZbWNnSVdSbFptRjFiSFE3WEc0a2FXNXdkWFF0WjNKdmRYQXRZV1JrYjI0dFltOXlaR1Z5TFdOdmJHOXlPaUFrYVc1d2RYUXRZbTl5WkdWeUxXTnZiRzl5SUNGa1pXWmhkV3gwTzF4dUx5OGdjMk56Y3kxa2IyTnpMV1Z1WkNCcGJuQjFkQzFuY205MWNDMTJZWEpwWVdKc1pYTmNibHh1THk4Z2MyTnpjeTFrYjJOekxYTjBZWEowSUdadmNtMHRjMlZzWldOMExYWmhjbWxoWW14bGMxeHVMeThnSkdadmNtMHRjMlZzWldOMExYQmhaR1JwYm1jdGVUb2dKR2x1Y0hWMExXSjBiaTF3WVdSa2FXNW5MWGtnSVdSbFptRjFiSFE3WEc0dkx5QWtabTl5YlMxelpXeGxZM1F0Y0dGa1pHbHVaeTE0T2lBa2FXNXdkWFF0WW5SdUxYQmhaR1JwYm1jdGVDQWhaR1ZtWVhWc2REdGNiaVJtYjNKdExYTmxiR1ZqZEMxd1lXUmthVzVuTFhrNklDUnBibkIxZEMxaWRHNHRjR0ZrWkdsdVp5MTVJQ0ZrWldaaGRXeDBPMXh1SkdadmNtMHRjMlZzWldOMExYQmhaR1JwYm1jdGVEb2dKR2x1Y0hWMExYQmhaR1JwYm1jdGVDQWhaR1ZtWVhWc2REdGNiaVJtYjNKdExYTmxiR1ZqZEMxcGJtUnBZMkYwYjNJdGNHRmtaR2x1WnpvZ0pHWnZjbTB0YzJWc1pXTjBMWEJoWkdScGJtY3RlQ0FySURGeVpXMGdJV1JsWm1GMWJIUTdYRzRrWm05eWJTMXpaV3hsWTNRdFpHbHpZV0pzWldRdFkyOXNiM0k2SUNSaWIyUjVMV052Ykc5eUlDRmtaV1poZFd4ME8xeHVKR1p2Y20wdGMyVnNaV04wTFdScGMyRmliR1ZrTFdKbk9pQWthVzV3ZFhRdFpHbHpZV0pzWldRdFltY2dJV1JsWm1GMWJIUTdYRzRrWm05eWJTMXpaV3hsWTNRdFltY3RjMmw2WlRvZ01UZHdlQ0F4TW5CNElDRmtaV1poZFd4ME8xeHVKR1p2Y20wdGMyVnNaV04wTFdsdVpHbGpZWFJ2Y2kxamIyeHZjam9nSkdkeVlYa3ROREF3SUNGa1pXWmhkV3gwTzF4dUpHWnZjbTB0YzJWc1pXTjBMV2x1WkdsallYUnZjam9nZFhKc0tGd2laR0YwWVRwcGJXRm5aUzl6ZG1jcmVHMXNMRHh6ZG1jZ2VHMXNibk05SjJoMGRIQTZMeTkzZDNjdWR6TXViM0puTHpJd01EQXZjM1puSnlCMmFXVjNRbTk0UFNjd0lEQWdNVFlnTVRZblBqeHdZWFJvSUdacGJHdzlKMjV2Ym1VbklITjBjbTlyWlQwbkkzc2tabTl5YlMxelpXeGxZM1F0YVc1a2FXTmhkRzl5TFdOdmJHOXlmU2NnYzNSeWIydGxMV3hwYm1WallYQTlKM0p2ZFc1a0p5QnpkSEp2YTJVdGJHbHVaV3B2YVc0OUozSnZkVzVrSnlCemRISnZhMlV0ZDJsa2RHZzlKekluSUdROUowMHlJRFZzTmlBMklEWXROaWN2UGp3dmMzWm5QbHdpS1NBaFpHVm1ZWFZzZER0Y2JpUm1iM0p0TFhObGJHVmpkQzFwYm1ScFkyRjBiM0l0Y25Sc09pQjFjbXdvWENKa1lYUmhPbWx0WVdkbEwzTjJaeXQ0Yld3c1BITjJaeUI0Yld4dWN6MG5hSFIwY0RvdkwzZDNkeTUzTXk1dmNtY3ZNakF3TUM5emRtY25JSFpwWlhkQ2IzZzlKekFnTUNBeE5pQXhOaWMrUEhCaGRHZ2dabWxzYkQwbmJtOXVaU2NnYzNSeWIydGxQU2NqZXlSbWIzSnRMWE5sYkdWamRDMXBibVJwWTJGMGIzSXRZMjlzYjNKOUp5QnpkSEp2YTJVdGJHbHVaV05oY0QwbmNtOTFibVFuSUhOMGNtOXJaUzFzYVc1bGFtOXBiajBuY205MWJtUW5JSE4wY205clpTMTNhV1IwYUQwbk1pY2daRDBuVFRJZ05XdzJJRFlnTmkwMkp5OCtQQzl6ZG1jK1hDSXBJQ0ZrWldaaGRXeDBPeUF2THlBb1F5bGNibHh1SkdadmNtMHRjMlZzWldOMExXWnZZM1Z6TFdKdmVDMXphR0ZrYjNjNklDUnBibkIxZEMxaWRHNHRabTlqZFhNdFltOTRMWE5vWVdSdmR5QWhaR1ZtWVhWc2REdGNibHh1SkdadmNtMHRjMlZzWldOMExYQmhaR1JwYm1jdGVTMXpiVG9nSkdsdWNIVjBMV0owYmkxd1lXUmthVzVuTFhrdGMyMGdJV1JsWm1GMWJIUTdYRzRrWm05eWJTMXpaV3hsWTNRdGNHRmtaR2x1WnkxNExYTnRPaUFrYVc1d2RYUXRjR0ZrWkdsdVp5MTRMWE50SUNGa1pXWmhkV3gwTzF4dVhHNGtabTl5YlMxelpXeGxZM1F0Y0dGa1pHbHVaeTE1TFd4bk9pQWthVzV3ZFhRdFluUnVMWEJoWkdScGJtY3RlUzFzWnlBaFpHVm1ZWFZzZER0Y2JpUm1iM0p0TFhObGJHVmpkQzF3WVdSa2FXNW5MWGd0YkdjNklDUnBibkIxZEMxd1lXUmthVzVuTFhndGJHY2dJV1JsWm1GMWJIUTdYRzR2THlCelkzTnpMV1J2WTNNdFpXNWtJR1p2Y20wdGMyVnNaV04wTFhaaGNtbGhZbXhsYzF4dVhHNHZMeUJ6WTNOekxXUnZZM010YzNSaGNuUWdabTl5YlMxeVlXNW5aUzEyWVhKcFlXSnNaWE5jYmlSbWIzSnRMWEpoYm1kbExYUnlZV05yTFdobGFXZG9kRG9nTUM0ek56VnlaVzBnSVdSbFptRjFiSFE3WEc0a1ptOXliUzF5WVc1blpTMTBjbUZqYXkxaVp6b2djbWRpWVMxMGJ5MW9aWGdvSkdkeVlYa3RNVEF3TENBa2NtZGlZUzEwYnkxb1pYZ3RZbWNwSUNGa1pXWmhkV3gwTzF4dUpHWnZjbTB0Y21GdVoyVXRkSEpoWTJzdFltOTRMWE5vWVdSdmR6b2dibTl1WlNBaFpHVm1ZWFZzZER0Y2JpUm1iM0p0TFhKaGJtZGxMWFJ5WVdOckxXUnBjMkZpYkdWa0xXSm5PaUFrWjNKaGVTMDFNQ0FoWkdWbVlYVnNkRHNnTHk4Z0tFTXBYRzVjYmlSbWIzSnRMWEpoYm1kbExYUm9kVzFpTFhkcFpIUm9PaUF3TGpnM05YSmxiU0FoWkdWbVlYVnNkRHRjYmlSbWIzSnRMWEpoYm1kbExYUm9kVzFpTFdobGFXZG9kRG9nSkdadmNtMHRjbUZ1WjJVdGRHaDFiV0l0ZDJsa2RHZ2dJV1JsWm1GMWJIUTdYRzRrWm05eWJTMXlZVzVuWlMxMGFIVnRZaTFpWnpvZ0pIZG9hWFJsSUNGa1pXWmhkV3gwTzF4dUpHWnZjbTB0Y21GdVoyVXRkR2gxYldJdFltOTRMWE5vWVdSdmR6b2dNQ0F3SURad2VDQXdJQ1JuY21GNUxUSXdNQ0FoWkdWbVlYVnNkRHRjYmlSbWIzSnRMWEpoYm1kbExYUm9kVzFpTFdadlkzVnpMV0p2ZUMxemFHRmtiM2M2SURBZ01DQTRjSGdnTUhCNElDUm5jbUY1TFRJd01DQWhaR1ZtWVhWc2REdGNiaVJtYjNKdExYSmhibWRsTFhSb2RXMWlMV0ZqZEdsMlpTMWlaem9nSkdadmNtMHRjbUZ1WjJVdGRHaDFiV0l0WW1jZ0lXUmxabUYxYkhRN1hHNGtabTl5YlMxeVlXNW5aUzEwYUhWdFlpMWthWE5oWW14bFpDMWlaem9nY21kaVlTMTBieTFvWlhnb0pHZHlZWGt0TVRBd0xDQWtjbWRpWVMxMGJ5MW9aWGd0WW1jcElDRmtaV1poZFd4ME8xeHVMeThnYzJOemN5MWtiMk56TFdWdVpDQm1iM0p0TFhKaGJtZGxMWFpoY21saFlteGxjMXh1WEc0dkx5QnpZM056TFdSdlkzTXRjM1JoY25RZ1ptOXliUzFtYkc5aGRHbHVaeTEyWVhKcFlXSnNaWE5jYmlSbWIzSnRMV1pzYjJGMGFXNW5MV3hoWW1Wc0xXOXdZV05wZEhrNklEQXVOelVnSVdSbFptRjFiSFE3WEc0a1ptOXliUzFtYkc5aGRHbHVaeTEwY21GdWMybDBhVzl1T2lCdmNHRmphWFI1SURBdU1uTWdaV0Z6WlMxcGJpMXZkWFFzSUhSeVlXNXpabTl5YlNBd0xqSnpJR1ZoYzJVdGFXNHRiM1YwSUNGa1pXWmhkV3gwTzF4dUpHWnZjbTB0Wm14dllYUnBibWN0YkdGaVpXd3RkSEpoYm5ObWIzSnRMWEowYkRvZ2MyTmhiR1VvTUM0NE5Ta2dkSEpoYm5Oc1lYUmxXU2d0TUM0MWNtVnRLU0IwY21GdWMyeGhkR1ZZS0Mwd0xqRTFjbVZ0S1NBaFpHVm1ZWFZzZERzZ0x5OGdLRU1wWEc0dkx5QnpZM056TFdSdlkzTXRaVzVrSUdadmNtMHRabXh2WVhScGJtY3RkbUZ5YVdGaWJHVnpYRzVjYmk4dklFWnZjbTBnZG1Gc2FXUmhkR2x2Ymx4dVhHNHZMeUJ6WTNOekxXUnZZM010YzNSaGNuUWdabTl5YlMxbVpXVmtZbUZqYXkxMllYSnBZV0pzWlhOY2JpUm1iM0p0TFdabFpXUmlZV05yTFhaaGJHbGtMV052Ykc5eU9pQWtjM1ZqWTJWemN5QWhaR1ZtWVhWc2REdGNiaVJtYjNKdExXWmxaV1JpWVdOckxXbHVkbUZzYVdRdFkyOXNiM0k2SUNSa1lXNW5aWElnSVdSbFptRjFiSFE3WEc1Y2JpUm1iM0p0TFhObGJHVmpkQzFtWldWa1ltRmpheTFwWTI5dUxYQmhaR1JwYm1jNklDUm1iM0p0TFhObGJHVmpkQzFwYm1ScFkyRjBiM0l0Y0dGa1pHbHVaeUFySUNScGJuQjFkQzFvWldsbmFIUXRhVzV1WlhJZ0lXUmxabUYxYkhRN0lDOHZJQ2hES1Z4dUpHWnZjbTB0YzJWc1pXTjBMV1psWldSaVlXTnJMV2xqYjI0dGNHRmtaR2x1WnkxemJUb2dKR1p2Y20wdGMyVnNaV04wTFdsdVpHbGpZWFJ2Y2kxd1lXUmthVzVuSUNzZ0pHbHVjSFYwTFdobGFXZG9kQzFwYm01bGNpMXpiU0FoWkdWbVlYVnNkRHNnTHk4Z0tFTXBYRzRrWm05eWJTMXpaV3hsWTNRdFptVmxaR0poWTJzdGFXTnZiaTF3WVdSa2FXNW5MV3huT2lBa1ptOXliUzF6Wld4bFkzUXRhVzVrYVdOaGRHOXlMWEJoWkdScGJtY2dLeUFrYVc1d2RYUXRhR1ZwWjJoMExXbHVibVZ5TFd4bklDRmtaV1poZFd4ME95QXZMeUFvUXlsY2JpOHZJSE5qYzNNdFpHOWpjeTFsYm1RZ1ptOXliUzFtWldWa1ltRmpheTEyWVhKcFlXSnNaWE5jYmx4dUx5OGdLaUJPWVhaelhHNHZMeUFxS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FYRzVjYmlSdVlYWXRjM0JoWTJWeU9pQXdMakV5TlhKbGJTQWhaR1ZtWVhWc2REc2dMeThnS0VNcFhHNWNiaVJ1WVhZdGJHbHVheTF3WVdSa2FXNW5MWGs2SURBdU5EWTVjbVZ0SUNGa1pXWmhkV3gwTzF4dUpHNWhkaTFzYVc1ckxYQmhaR1JwYm1jdGVEb2dNUzR6TnpWeVpXMGdJV1JsWm1GMWJIUTdYRzRrYm1GMkxXeHBibXN0WTI5c2IzSTZJQ1JvWldGa2FXNW5jeTFqYjJ4dmNpQWhaR1ZtWVhWc2REdGNiaVJ1WVhZdGJHbHVheTFrYVhOaFlteGxaQzFqYjJ4dmNqb2dKSFJsZUhRdGJYVjBaV1FnSVdSbFptRjFiSFE3WEc0a2JtRjJMV3hwYm1zdGJHbHVaUzFvWldsbmFIUTZJQ1JqYjIxd2IyNWxiblF0YkdsdVpTMW9aV2xuYUhRZ0lXUmxabUYxYkhRN0lDOHZJQ2hES1Z4dVhHNGtibUYyTFd4cGJtc3RjR0ZrWkdsdVp5MTVMV3huT2lBd0xqZzNOWEpsYlNBaFpHVm1ZWFZzZERzZ0x5OGdLRU1wWEc0a2JtRjJMV3hwYm1zdGNHRmtaR2x1WnkxNExXeG5PaUF4TGpNeE1qVnlaVzBnSVdSbFptRjFiSFE3SUM4dklDaERLVnh1Skc1aGRpMXNhVzVyTFd4cGJtVXRhR1ZwWjJoMExXeG5PaUFrYkdsdVpTMW9aV2xuYUhRdGJHY2dJV1JsWm1GMWJIUTdJQzh2SUNoREtWeHVYRzRrYm1GMkxXeHBibXN0Y0dGa1pHbHVaeTE1TFhOdE9pQXdMak14TWpWeVpXMGdJV1JsWm1GMWJIUTdJQzh2SUNoREtWeHVKRzVoZGkxc2FXNXJMWEJoWkdScGJtY3RlQzF6YlRvZ01DNDROelZ5WlcwZ0lXUmxabUYxYkhRN0lDOHZJQ2hES1Z4dUpHNWhkaTFzYVc1ckxXeHBibVV0YUdWcFoyaDBMWE50T2lBa2JHbHVaUzFvWldsbmFIUXRjMjBnSVdSbFptRjFiSFE3SUM4dklDaERLVnh1WEc0a2JtRjJMWFJoWW5NdFltOXlaR1Z5TFdOdmJHOXlPaUFrWW05eVpHVnlMV052Ykc5eUlDRmtaV1poZFd4ME8xeHVKRzVoZGkxMFlXSnpMV3hwYm1zdGFHOTJaWEl0WW05eVpHVnlMV052Ykc5eU9pQWtaM0poZVMweE1EQWdJV1JsWm1GMWJIUTdYRzRrYm1GMkxYUmhZbk10YkdsdWF5MWhZM1JwZG1VdFkyOXNiM0k2SUNSdVlYWXRiR2x1YXkxamIyeHZjaUFoWkdWbVlYVnNkRHRjYmlSdVlYWXRkR0ZpY3kxc2FXNXJMV0ZqZEdsMlpTMWlaem9nSkhkb2FYUmxJQ0ZrWldaaGRXeDBPMXh1Skc1aGRpMTBZV0p6TFd4cGJtc3RZV04wYVhabExXSnZjbVJsY2kxamIyeHZjam9nSkc1aGRpMTBZV0p6TFdKdmNtUmxjaTFqYjJ4dmNpQWhaR1ZtWVhWc2REdGNibHh1Skc1aGRpMXdhV3hzY3kxc2FXNXJMV0ZqZEdsMlpTMWpiMnh2Y2pvZ0pIZG9hWFJsSUNGa1pXWmhkV3gwTzF4dUpHNWhkaTF3YVd4c2N5MXNhVzVyTFdGamRHbDJaUzFpWnpvZ2RISmhibk53WVhKbGJuUWdJV1JsWm1GMWJIUTdYRzVjYmk4dklDb2dUbUYyWW1GeVhHNHZMeUFxS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FYRzVjYmlSdVlYWmlZWEl0ZEc5bloyeGxjaTF3WVdSa2FXNW5MWGs2SURBdU5YSmxiU0FoWkdWbVlYVnNkRHRjYmlSdVlYWmlZWEl0ZEc5bloyeGxjaTF3WVdSa2FXNW5MWGc2SURBdU4zSmxiU0FoWkdWbVlYVnNkRHRjYmlSdVlYWmlZWEl0ZEc5bloyeGxjaTFtYjI1MExYTnBlbVU2SURBdU5qSTFjbVZ0SUNGa1pXWmhkV3gwTzF4dVhHNGtibUYyWW1GeUxXUmhjbXN0WTI5c2IzSTZJSEpuWW1Fb0pIZG9hWFJsTENBd0xqZ3BJQ0ZrWldaaGRXeDBPMXh1Skc1aGRtSmhjaTFrWVhKckxXaHZkbVZ5TFdOdmJHOXlPaUFrZDJocGRHVWdJV1JsWm1GMWJIUTdYRzRrYm1GMlltRnlMV1JoY21zdFlXTjBhWFpsTFdOdmJHOXlPaUFrZDJocGRHVWdJV1JsWm1GMWJIUTdYRzRrYm1GMlltRnlMV1JoY21zdFpHbHpZV0pzWldRdFkyOXNiM0k2SUhKblltRW9KSGRvYVhSbExDQXdMalFwSUNGa1pXWmhkV3gwTzF4dVhHNGtibUYyWW1GeUxXeHBaMmgwTFdOdmJHOXlPaUFrWjNKaGVTMDFNREFnSVdSbFptRjFiSFE3WEc0a2JtRjJZbUZ5TFd4cFoyaDBMV2h2ZG1WeUxXTnZiRzl5T2lBa1ltOWtlUzFqYjJ4dmNpQWhaR1ZtWVhWc2REdGNiaVJ1WVhaaVlYSXRiR2xuYUhRdFlXTjBhWFpsTFdOdmJHOXlPaUFrWW05a2VTMWpiMnh2Y2lBaFpHVm1ZWFZzZER0Y2JpUnVZWFppWVhJdGJHbG5hSFF0WkdsellXSnNaV1F0WTI5c2IzSTZJQ1JuY21GNUxUTXdNQ0FoWkdWbVlYVnNkRHRjYmlSdVlYWmlZWEl0YkdsbmFIUXRkRzluWjJ4bGNpMWliM0prWlhJdFkyOXNiM0k2SUhKblltRW9KR0pzWVdOckxDQXdMakEyS1NBaFpHVm1ZWFZzZER0Y2JseHVMeThnS2lCRWNtOXdaRzkzYm5OY2JpOHZJQ29xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpcGNibHh1SkdSeWIzQmtiM2R1TFhCaFpHUnBibWN0ZVRvZ01DNHpNVEkxY21WdElDRmtaV1poZFd4ME8xeHVKR1J5YjNCa2IzZHVMV1p2Ym5RdGMybDZaVG9nSkdadmJuUXRjMmw2WlMxaVlYTmxJQ0ZrWldaaGRXeDBPMXh1SkdSeWIzQmtiM2R1TFdKbk9pQWtkMmhwZEdVZ0lXUmxabUYxYkhRN1hHNGtaSEp2Y0dSdmQyNHRZbTl5WkdWeUxXTnZiRzl5T2lBa1pteHZZWFJwYm1jdFkyOXRjRzl1Wlc1MExXSnZjbVJsY2kxamIyeHZjaUFoWkdWbVlYVnNkRHRjYmlSa2NtOXdaRzkzYmkxaWIzSmtaWEl0ZDJsa2RHZzZJREFnSVdSbFptRjFiSFE3WEc0a1pISnZjR1J2ZDI0dFltOXlaR1Z5TFhKaFpHbDFjem9nSkdKdmNtUmxjaTF5WVdScGRYTXRiR2NnSVdSbFptRjFiSFE3WEc0a1pISnZjR1J2ZDI0dFpHbDJhV1JsY2kxaVp6b2dKR0p2Y21SbGNpMWpiMnh2Y2lBaFpHVm1ZWFZzZER0Y2JpUmtjbTl3Wkc5M2JpMWthWFpwWkdWeUxXMWhjbWRwYmkxNU9pQWtjM0JoWTJWeUlDb2dNQzR6TVRJMUlDRmtaV1poZFd4ME8xeHVKR1J5YjNCa2IzZHVMV0p2ZUMxemFHRmtiM2M2SUNSbWJHOWhkR2x1WnkxamIyMXdiMjVsYm5RdGMyaGhaRzkzSUNGa1pXWmhkV3gwTzF4dVhHNGtaSEp2Y0dSdmQyNHRhVzV1WlhJdFltOXlaR1Z5TFhKaFpHbDFjem9nTUNBaFpHVm1ZWFZzZER0Y2JseHVKR1J5YjNCa2IzZHVMV3hwYm1zdFkyOXNiM0k2SUNSaWIyUjVMV052Ykc5eUlDRmtaV1poZFd4ME8xeHVKR1J5YjNCa2IzZHVMV3hwYm1zdGFHOTJaWEl0WTI5c2IzSTZJQ1JrY205d1pHOTNiaTFzYVc1ckxXTnZiRzl5SUNGa1pXWmhkV3gwTzF4dUpHUnliM0JrYjNkdUxXeHBibXN0YUc5MlpYSXRZbWM2SUNSbmNtRjVMVFV3SUNGa1pXWmhkV3gwTzF4dUpHUnliM0JrYjNkdUxXeHBibXN0YkdsdVpTMW9aV2xuYUhRNklDUmpiMjF3YjI1bGJuUXRiR2x1WlMxb1pXbG5hSFFnSVdSbFptRjFiSFE3SUM4dklDaERLVnh1WEc0a1pISnZjR1J2ZDI0dGJHbHVheTFoWTNScGRtVXRZMjlzYjNJNklDUndjbWx0WVhKNUlDRmtaV1poZFd4ME8xeHVKR1J5YjNCa2IzZHVMV3hwYm1zdFlXTjBhWFpsTFdKbk9pQnlaMkpoS0NSd2NtbHRZWEo1TENBd0xqQTRLU0FoWkdWbVlYVnNkRHRjYmx4dUpHUnliM0JrYjNkdUxXbDBaVzB0Y0dGa1pHbHVaeTE1T2lBd0xqVnlaVzBnSVdSbFptRjFiSFE3WEc0a1pISnZjR1J2ZDI0dGFYUmxiUzF3WVdSa2FXNW5MWGc2SURGeVpXMGdJV1JsWm1GMWJIUTdYRzVjYmlSa2NtOXdaRzkzYmkxc2FXNXJMV1JwYzJGaWJHVmtMV052Ykc5eU9pQWtkR1Y0ZEMxc2FXZG9kR1Z5SUNGa1pXWmhkV3gwTzF4dUpHUnliM0JrYjNkdUxXaGxZV1JsY2kxamIyeHZjam9nSkdobFlXUnBibWR6TFdOdmJHOXlJQ0ZrWldaaGRXeDBPMXh1WEc0dkx5QXFJRkJoWjJsdVlYUnBiMjVjYmk4dklDb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lwY2JseHVKSEJoWjJsdVlYUnBiMjR0Y0dGa1pHbHVaeTE1T2lBd0xqVXpOWEpsYlNBaFpHVm1ZWFZzZER0Y2JpUndZV2RwYm1GMGFXOXVMWEJoWkdScGJtY3RlRG9nTUM0ek1USTFjbVZ0SUNGa1pXWmhkV3gwTzF4dUpIQmhaMmx1WVhScGIyNHRjR0ZrWkdsdVp5MTVMWE50T2lBd0xqUXhjbVZ0SUNGa1pXWmhkV3gwTzF4dUpIQmhaMmx1WVhScGIyNHRjR0ZrWkdsdVp5MTRMWE50T2lBd0xqSTFjbVZ0SUNGa1pXWmhkV3gwTzF4dUpIQmhaMmx1WVhScGIyNHRjR0ZrWkdsdVp5MTVMV3huT2lBd0xqWTJjbVZ0SUNGa1pXWmhkV3gwTzF4dUpIQmhaMmx1WVhScGIyNHRjR0ZrWkdsdVp5MTRMV3huT2lBd0xqVnlaVzBnSVdSbFptRjFiSFE3WEc1Y2JpUndZV2RwYm1GMGFXOXVMV052Ykc5eU9pQWtZbTlrZVMxamIyeHZjaUFoWkdWbVlYVnNkRHRjYmlSd1lXZHBibUYwYVc5dUxXSm5PaUJ5WjJKaExYUnZMV2hsZUNoeVoySmhLQ1JpYkdGamF5d2dNQzR3T0Nrc0lDUnlaMkpoTFhSdkxXaGxlQzFpWnlrZ0lXUmxabUYxYkhRN1hHNGtjR0ZuYVc1aGRHbHZiaTFpYjNKa1pYSXRkMmxrZEdnNklEQndlQ0FoWkdWbVlYVnNkRHRjYmlSd1lXZHBibUYwYVc5dUxXSnZjbVJsY2kxamIyeHZjam9nSkdKdmNtUmxjaTFwYm01bGNpMWpiMnh2Y2lBaFpHVm1ZWFZzZER0Y2JseHVKSEJoWjJsdVlYUnBiMjR0Wm05amRYTXRZMjlzYjNJNklDUndZV2RwYm1GMGFXOXVMV052Ykc5eUlDRmtaV1poZFd4ME8xeHVKSEJoWjJsdVlYUnBiMjR0Wm05amRYTXRZbWM2SUhKblltRXRkRzh0YUdWNEtISm5ZbUVvSkdKc1lXTnJMQ0F3TGpFMktTd2dKSEpuWW1FdGRHOHRhR1Y0TFdKbktTQWhaR1ZtWVhWc2REdGNiaVJ3WVdkcGJtRjBhVzl1TFdadlkzVnpMV0p2ZUMxemFHRmtiM2M2SUc1dmJtVWdJV1JsWm1GMWJIUTdYRzVjYmlSd1lXZHBibUYwYVc5dUxXaHZkbVZ5TFdOdmJHOXlPaUFrY0dGbmFXNWhkR2x2YmkxamIyeHZjaUFoWkdWbVlYVnNkRHRjYmlSd1lXZHBibUYwYVc5dUxXaHZkbVZ5TFdKbk9pQWtjR0ZuYVc1aGRHbHZiaTFtYjJOMWN5MWlaeUFoWkdWbVlYVnNkRHRjYmx4dUpIQmhaMmx1WVhScGIyNHRaR2x6WVdKc1pXUXRZMjlzYjNJNklDUm5jbUY1TFRNd01DQWhaR1ZtWVhWc2REdGNiaVJ3WVdkcGJtRjBhVzl1TFdScGMyRmliR1ZrTFdKbk9pQWtjR0ZuYVc1aGRHbHZiaTFpWnlBaFpHVm1ZWFZzZER0Y2JseHVKSEJoWjJsdVlYUnBiMjR0YkdsdVpTMW9aV2xuYUhRNklERWdJV1JsWm1GMWJIUTdJQzh2SUNoaktWeHVKSEJoWjJsdVlYUnBiMjR0YldGeVoybHVMV1Z1WkRvZ01DNHpNVEkxSUNGa1pXWmhkV3gwT3lBdkx5QW9ZeWxjYmlSd1lXZHBibUYwYVc5dUxXMWhjbWRwYmkxbGJtUXRjMjA2SURBdU1qVWdJV1JsWm1GMWJIUTdJQzh2SUNoaktWeHVKSEJoWjJsdVlYUnBiMjR0YldGeVoybHVMV1Z1WkMxc1p6b2dNQzR6TnpVZ0lXUmxabUYxYkhRN0lDOHZJQ2hqS1Z4dVhHNHZMeUFxSUVOaGNtUnpYRzR2THlBcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xWEc1Y2JpUmpZWEprTFhOd1lXTmxjaTE1T2lBa2MzQmhZMlZ5SUNvZ01TNHpOelVnSVdSbFptRjFiSFE3WEc0a1kyRnlaQzF6Y0dGalpYSXRlRG9nSkhOd1lXTmxjaUFxSURFdU16YzFJQ0ZrWldaaGRXeDBPMXh1SkdOaGNtUXRkR2wwYkdVdGMzQmhZMlZ5TFhrNklDUmpZWEprTFhOd1lXTmxjaTE1SUNGa1pXWmhkV3gwTzF4dUpHTmhjbVF0YzNCaFkyVnlMWGd0YzIwNklERnlaVzBnSVdSbFptRjFiSFE3SUM4dklDaERLVnh1SkdOaGNtUXRZbTl5WkdWeUxYZHBaSFJvT2lBd0lDRmtaV1poZFd4ME8xeHVKR05oY21RdFltOXlaR1Z5TFdOdmJHOXlPaUFrWW05eVpHVnlMV052Ykc5eUlDRmtaV1poZFd4ME8xeHVKR05oY21RdFltOXlaR1Z5TFhKaFpHbDFjem9nSkdKdmNtUmxjaTF5WVdScGRYTXRiR2NnSVdSbFptRjFiSFE3WEc0a1kyRnlaQzFwYm01bGNpMWliM0prWlhJdFkyOXNiM0k2SUNSaWIzSmtaWEl0YVc1dVpYSXRZMjlzYjNJZ0lXUmxabUYxYkhRN0lDOHZJQ2hES1Z4dUpHTmhjbVF0WTJGd0xYQmhaR1JwYm1jdGVUb2dKR05oY21RdGMzQmhZMlZ5TFhrZ0lXUmxabUYxYkhRN1hHNGtZMkZ5WkMxallYQXRZbWM2SUhSeVlXNXpjR0Z5Wlc1MElDRmtaV1poZFd4ME8xeHVKR05oY21RdFltYzZJQ1IzYUdsMFpTQWhaR1ZtWVhWc2REdGNiaVJqWVhKa0xXbHRaeTF2ZG1WeWJHRjVMWEJoWkdScGJtYzZJREV1TlhKbGJTQWhaR1ZtWVhWc2REdGNiaVJqWVhKa0xXSnZlQzF6YUdGa2IzYzZJREFnTW5CNElERTBjSGdnY21kaVlTZ2tZbXhoWTJzc0lEQXVNVFlwSUNGa1pXWmhkV3gwTzF4dVhHNHZMeUFxSUVGalkyOXlaR2x2Ymx4dUx5OGdLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtseHVYRzRrWVdOamIzSmthVzl1TFhCaFpHUnBibWN0ZVRvZ01DNDNPSEpsYlNBaFpHVm1ZWFZzZER0Y2JpUmhZMk52Y21ScGIyNHRjR0ZrWkdsdVp5MTRPaUF4TGpGeVpXMGdJV1JsWm1GMWJIUTdYRzRrWVdOamIzSmthVzl1TFdOdmJHOXlPaUFrWW05a2VTMWpiMnh2Y2lBaFpHVm1ZWFZzZER0Y2JpUmhZMk52Y21ScGIyNHRZbWM2SUNSM2FHbDBaU0FoWkdWbVlYVnNkRHRjYmlSaFkyTnZjbVJwYjI0dFltOXlaR1Z5TFhKaFpHbDFjem9nSkdKdmNtUmxjaTF5WVdScGRYTXRiR2NnSVdSbFptRjFiSFE3WEc0a1lXTmpiM0prYVc5dUxXSjFkSFJ2YmkxamIyeHZjam9nSkdobFlXUnBibWR6TFdOdmJHOXlJQ0ZrWldaaGRXeDBPMXh1WEc0a1lXTmpiM0prYVc5dUxXSnZjbVJsY2kxM2FXUjBhRG9nTUNBaFpHVm1ZWFZzZER0Y2JpUmhZMk52Y21ScGIyNHRZbTl5WkdWeUxXTnZiRzl5T2lBa1ltOXlaR1Z5TFdOdmJHOXlJQ0ZrWldaaGRXeDBPMXh1SkdGalkyOXlaR2x2YmkxaWRYUjBiMjR0WVdOMGFYWmxMV0puT2lBa1lXTmpiM0prYVc5dUxXSm5JQ0ZrWldaaGRXeDBPMXh1SkdGalkyOXlaR2x2YmkxaWRYUjBiMjR0WVdOMGFYWmxMV052Ykc5eU9pQWtZV05qYjNKa2FXOXVMV0oxZEhSdmJpMWpiMnh2Y2lBaFpHVm1ZWFZzZER0Y2JseHVKR0ZqWTI5eVpHbHZiaTFwWTI5dUxYZHBaSFJvT2lBd0xqYzFjbVZ0SUNGa1pXWmhkV3gwTzF4dUpHRmpZMjl5WkdsdmJpMXBZMjl1TFdOdmJHOXlPaUFrWVdOamIzSmthVzl1TFdKMWRIUnZiaTFqYjJ4dmNpQWhaR1ZtWVhWc2REdGNiaVJoWTJOdmNtUnBiMjR0YVdOdmJpMWhZM1JwZG1VdFkyOXNiM0k2SUNSaFkyTnZjbVJwYjI0dFluVjBkRzl1TFdGamRHbDJaUzFqYjJ4dmNpQWhaR1ZtWVhWc2REdGNibHh1SkdGalkyOXlaR2x2YmkxcFkyOXVMWFJ5WVc1elptOXliVG9nY205MFlYUmxLRGt3WkdWbktTQWhaR1ZtWVhWc2REdGNibHh1SkdGalkyOXlaR2x2YmkxaWRYUjBiMjR0YVdOdmJqb2dkWEpzS0Z3aVpHRjBZVHBwYldGblpTOXpkbWNyZUcxc0xDVXpRM04yWnlCM2FXUjBhRDBuTVRJbklHaGxhV2RvZEQwbk1USW5JSFpwWlhkQ2IzZzlKekFnTUNBeE1pQXhNaWNnZUcxc2JuTTlKMmgwZEhBNkx5OTNkM2N1ZHpNdWIzSm5Mekl3TURBdmMzWm5KeUI0Yld4dWN6cDRiR2x1YXowbmFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1UazVPUzk0YkdsdWF5Y2xNMFVsTTBOa1pXWnpKVE5GSlRORGNHRjBhQ0JwWkQwbllTY2daRDBuYlRFdU5UTXlJREV5SURZdU1UZ3lMVFl0Tmk0eE9ESXROa3d3SURFdU5EZzNJRFF1TmpVZ05pQXdJREV3TGpVeE0zb25MeVV6UlNVelF5OWtaV1p6SlRORkpUTkRaeUIwY21GdWMyWnZjbTA5SjNSeVlXNXpiR0YwWlNneUxqVTNNU2tuSUdacGJHdzlKMjV2Ym1VbklHWnBiR3d0Y25Wc1pUMG5aWFpsYm05a1pDY2xNMFVsTTBOMWMyVWdabWxzYkQwbkkzc2tZV05qYjNKa2FXOXVMV2xqYjI0dFkyOXNiM0o5SnlCNGJHbHVhenBvY21WbVBTY2xNak5oSnk4bE0wVWxNME4xYzJVZ1ptbHNiQzF2Y0dGamFYUjVQU2N1TVNjZ2VHeHBibXM2YUhKbFpqMG5KVEl6WVNjdkpUTkZKVE5ETDJjbE0wVWxNME12YzNabkpUTkZKVEJCWENJcElDRmtaV1poZFd4ME8xeHVKR0ZqWTI5eVpHbHZiaTFpZFhSMGIyNHRZV04wYVhabExXbGpiMjQ2SUhWeWJDaGNJbVJoZEdFNmFXMWhaMlV2YzNabkszaHRiQ3dsTTBOemRtY2dkMmxrZEdnOUp6RXlKeUJvWldsbmFIUTlKekV5SnlCMmFXVjNRbTk0UFNjd0lEQWdNVElnTVRJbklIaHRiRzV6UFNkb2RIUndPaTh2ZDNkM0xuY3pMbTl5Wnk4eU1EQXdMM04yWnljZ2VHMXNibk02ZUd4cGJtczlKMmgwZEhBNkx5OTNkM2N1ZHpNdWIzSm5MekU1T1RrdmVHeHBibXNuSlRORkpUTkRaR1ZtY3lVelJTVXpRM0JoZEdnZ2FXUTlKMkVuSUdROUoyMHhMalV6TWlBeE1pQTJMakU0TWkwMkxUWXVNVGd5TFRaTU1DQXhMalE0TnlBMExqWTFJRFlnTUNBeE1DNDFNVE42Snk4bE0wVWxNME12WkdWbWN5VXpSU1V6UTJjZ2RISmhibk5tYjNKdFBTZDBjbUZ1YzJ4aGRHVW9NaTQxTnpFcEp5Qm1hV3hzUFNkdWIyNWxKeUJtYVd4c0xYSjFiR1U5SjJWMlpXNXZaR1FuSlRORkpUTkRkWE5sSUdacGJHdzlKeU43SkdGalkyOXlaR2x2YmkxcFkyOXVMV0ZqZEdsMlpTMWpiMnh2Y24wbklIaHNhVzVyT21oeVpXWTlKeVV5TTJFbkx5VXpSU1V6UTNWelpTQm1hV3hzTFc5d1lXTnBkSGs5Snk0eEp5QjRiR2x1YXpwb2NtVm1QU2NsTWpOaEp5OGxNMFVsTTBNdlp5VXpSU1V6UXk5emRtY2xNMFVsTUVGY0lpa2dJV1JsWm1GMWJIUTdYRzVjYmk4dklDb2dWRzl2YkhScGNITmNiaTh2SUNvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaXBjYmx4dUpIUnZiMngwYVhBdFptOXVkQzF6YVhwbE9pQWtabTl1ZEMxemFYcGxMV0poYzJVZ0lXUmxabUYxYkhRN1hHNGtkRzl2YkhScGNDMWlaem9nSkdSaGNtc2dJV1JsWm1GMWJIUTdYRzRrZEc5dmJIUnBjQzF2Y0dGamFYUjVPaUF4SUNGa1pXWmhkV3gwTzF4dUpIUnZiMngwYVhBdFltOXlaR1Z5TFhKaFpHbDFjem9nSkdKdmNtUmxjaTF5WVdScGRYTXRjMjBnSVdSbFptRjFiSFE3WEc0a2RHOXZiSFJwY0Mxd1lXUmthVzVuTFhrNklEQXVNalZ5WlcwZ0lXUmxabUYxYkhRN1hHNGtkRzl2YkhScGNDMXdZV1JrYVc1bkxYZzZJREF1TjNKbGJTQWhaR1ZtWVhWc2REdGNibHh1SkhSdmIyeDBhWEF0WW05NExYTm9ZV1J2ZHpvZ0pHSnZlQzF6YUdGa2IzY3RjMjBnSVdSbFptRjFiSFE3SUM4dklDaERLVnh1WEc0dkx5QXFJRkJ2Y0c5MlpYSnpYRzR2THlBcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xWEc1Y2JpUndiM0J2ZG1WeUxXWnZiblF0YzJsNlpUb2dKR1p2Ym5RdGMybDZaUzFpWVhObElDRmtaV1poZFd4ME8xeHVKSEJ2Y0c5MlpYSXRZbWM2SUNSM2FHbDBaU0FoWkdWbVlYVnNkRHRjYmlSd2IzQnZkbVZ5TFdKdmNtUmxjaTEzYVdSMGFEb2dNSEI0SUNGa1pXWmhkV3gwTzF4dUpIQnZjRzkyWlhJdFltOTRMWE5vWVdSdmR6b2dKR1pzYjJGMGFXNW5MV052YlhCdmJtVnVkQzF6YUdGa2IzY2dJV1JsWm1GMWJIUTdYRzVjYmlSd2IzQnZkbVZ5TFdobFlXUmxjaTFpWnpvZ2RISmhibk53WVhKbGJuUWdJV1JsWm1GMWJIUTdYRzRrY0c5d2IzWmxjaTFvWldGa1pYSXRjR0ZrWkdsdVp5MTVPaUF3SUNGa1pXWmhkV3gwTzF4dUpIQnZjRzkyWlhJdGFHVmhaR1Z5TFhCaFpHUnBibWN0ZURvZ01YSmxiU0FoWkdWbVlYVnNkRHRjYmlSd2IzQnZkbVZ5TFdobFlXUmxjaTFtYjI1MExYTnBlbVU2SUNSb05TMW1iMjUwTFhOcGVtVWdJV1JsWm1GMWJIUTdJQzh2SUNoREtWeHVYRzRrY0c5d2IzWmxjaTFpYjJSNUxYQmhaR1JwYm1jdGVUb2dNWEpsYlNBaFpHVm1ZWFZzZER0Y2JpUndiM0J2ZG1WeUxXSnZaSGt0Y0dGa1pHbHVaeTE0T2lBa2NHOXdiM1psY2kxaWIyUjVMWEJoWkdScGJtY3RlU0FoWkdWbVlYVnNkRHRjYmlSd2IzQnZkbVZ5TFdGeWNtOTNMVzkxZEdWeUxXTnZiRzl5T2lBa2NHOXdiM1psY2kxaVp5QWhaR1ZtWVhWc2REdGNibHh1THk4Z0tpQlViMkZ6ZEhOY2JpOHZJQ29xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpcGNibHh1SkhSdllYTjBMVzFoZUMxM2FXUjBhRG9nTWpJdU5YSmxiU0FoWkdWbVlYVnNkRHRjYmlSMGIyRnpkQzF3WVdSa2FXNW5MWGc2SURGeVpXMGdJV1JsWm1GMWJIUTdYRzRrZEc5aGMzUXRjR0ZrWkdsdVp5MTVPaUF3TGpZeU5YSmxiU0FoWkdWbVlYVnNkRHRjYmlSMGIyRnpkQzFtYjI1MExYTnBlbVU2SUNSbWIyNTBMWE5wZW1VdFltRnpaU0FoWkdWbVlYVnNkRHRjYmlSMGIyRnpkQzFqYjJ4dmNqb2dKR0p2WkhrdFkyOXNiM0lnSVdSbFptRjFiSFE3WEc0a2RHOWhjM1F0WW1GamEyZHliM1Z1WkMxamIyeHZjam9nY21kaVlTZ2tZMkZ5WkMxaVp5d2dNQzQ0TlNrZ0lXUmxabUYxYkhRN1hHNGtkRzloYzNRdFltOXlaR1Z5TFhkcFpIUm9PaUF3Y0hnZ0lXUmxabUYxYkhRN1hHNGtkRzloYzNRdFltOXlaR1Z5TFhKaFpHbDFjem9nSkdKdmNtUmxjaTF5WVdScGRYTXRiR2NnSVdSbFptRjFiSFE3WEc0a2RHOWhjM1F0WW05NExYTm9ZV1J2ZHpvZ0pHWnNiMkYwYVc1bkxXTnZiWEJ2Ym1WdWRDMXphR0ZrYjNjZ0lXUmxabUYxYkhRN1hHNGtkRzloYzNRdGFHVmhaR1Z5TFdOdmJHOXlPaUFrWW05a2VTMWpiMnh2Y2lBaFpHVm1ZWFZzZER0Y2JpUjBiMkZ6ZEMxb1pXRmtaWEl0WW1GamEyZHliM1Z1WkMxamIyeHZjam9nSkdOaGNtUXRZbWNnSVdSbFptRjFiSFE3WEc0a2RHOWhjM1F0YzNCaFkybHVaem9nTVhKbGJTQWhaR1ZtWVhWc2REdGNibHh1THk4Z0tpQkNZV1JuWlhOY2JpOHZJQ29xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpcGNibHh1SkdKaFpHZGxMV1p2Ym5RdGMybDZaVG9nTUM0NE1UTmxiU0FoWkdWbVlYVnNkRHRjYmlSaVlXUm5aUzFtYjI1MExYZGxhV2RvZERvZ05UQXdJQ0ZrWldaaGRXeDBPMXh1SkdKaFpHZGxMWEJoWkdScGJtY3RlVG9nTUM0ME5EUmxiU0FoWkdWbVlYVnNkRHRjYmlSaVlXUm5aUzF3WVdSa2FXNW5MWGc2SURBdU56VmxiU0FoWkdWbVlYVnNkRHRjYmlSaVlXUm5aUzFpYjNKa1pYSXRjbUZrYVhWek9pQWtZbTl5WkdWeUxYSmhaR2wxY3kxemJTQWhaR1ZtWVhWc2REdGNibHh1SkdKaFpHZGxMV2hsYVdkb2REb2dNUzQxY21WdElDRmtaV1poZFd4ME95QXZMeUFvUXlsY2JpUmlZV1JuWlMxM2FXUjBhRG9nTVM0MWNtVnRJQ0ZrWldaaGRXeDBPeUF2THlBb1F5bGNiaVJpWVdSblpTMXNhVzVsTFdobGFXZG9kRG9nTUM0NU1pQWhaR1ZtWVhWc2REc2dMeThnS0VNcFhHNWNiaTh2SUNvZ1RXOWtZV3h6WEc0dkx5QXFLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcVhHNWNiaVJ0YjJSaGJDMXBibTVsY2kxd1lXUmthVzVuT2lBa2MzQmhZMlZ5SUNvZ01TNDFJQ0ZrWldaaGRXeDBPMXh1SkcxdlpHRnNMV1JwWVd4dlp5MXRZWEpuYVc0NklERXVOWEpsYlNBaFpHVm1ZWFZzZER0Y2JseHVKRzF2WkdGc0xXTnZiblJsYm5RdFltOXlaR1Z5TFhkcFpIUm9PaUF3Y0hnZ0lXUmxabUYxYkhRN1hHNGtiVzlrWVd3dFkyOXVkR1Z1ZEMxaWIzZ3RjMmhoWkc5M0xYaHpPaUF3SURBdU1USTFjbVZ0SURFdU1qVnlaVzBnTUNCeVoySmhLQ1JpYkdGamF5d2dNQzQyS1NBaFpHVm1ZWFZzZER0Y2JpUnRiMlJoYkMxamIyNTBaVzUwTFdKdmVDMXphR0ZrYjNjdGMyMHRkWEE2SUNSdGIyUmhiQzFqYjI1MFpXNTBMV0p2ZUMxemFHRmtiM2N0ZUhNZ0lXUmxabUYxYkhRN1hHNGtiVzlrWVd3dGFHVmhaR1Z5TFdKdmNtUmxjaTEzYVdSMGFEb2dNSEI0SUNGa1pXWmhkV3gwTzF4dVhHNGtiVzlrWVd3dGFHVmhaR1Z5TFhCaFpHUnBibWN0ZVRvZ01TNHpOelZ5WlcwZ0lXUmxabUYxYkhRN1hHNGtiVzlrWVd3dGFHVmhaR1Z5TFhCaFpHUnBibWN0ZURvZ0pHMXZaR0ZzTFdsdWJtVnlMWEJoWkdScGJtY2dJV1JsWm1GMWJIUTdYRzRrYlc5a1lXd3RhR1ZoWkdWeUxYQmhaR1JwYm1jNklDUnRiMlJoYkMxb1pXRmtaWEl0Y0dGa1pHbHVaeTE1SUNSdGIyUmhiQzFvWldGa1pYSXRjR0ZrWkdsdVp5MTRJREFnSVdSbFptRjFiSFE3SUM4dklFdGxaWEFnZEdocGN5Qm1iM0lnWW1GamEzZGhjbVJ6SUdOdmJYQmhkR2xpYVd4cGRIbGNiaVJ0YjJSaGJDMW1iMjkwWlhJdGNHRmtaR2x1WnpvZ01DQWtiVzlrWVd3dGFHVmhaR1Z5TFhCaFpHUnBibWN0ZUNBa2JXOWtZV3d0YUdWaFpHVnlMWEJoWkdScGJtY3RlU0FoWkdWbVlYVnNkRHNnTHk4Z0tFTXBYRzVjYmlSdGIyUmhiQzFzWnpvZ05UQnlaVzBnSVdSbFptRjFiSFE3WEc0a2JXOWtZV3d0YldRNklETTFjbVZ0SUNGa1pXWmhkV3gwTzF4dUpHMXZaR0ZzTFhOdE9pQXlNaTQxY21WdElDRmtaV1poZFd4ME8xeHVYRzRrYlc5a1lXd3RabUZrWlMxMGNtRnVjMlp2Y20wNklIUnlZVzV6YkdGMFpWa29MVEV3TUhCNEtTQnpZMkZzWlNnd0xqZ3BJQ0ZrWldaaGRXeDBPMXh1SkcxdlpHRnNMWE5vYjNjdGRISmhibk5tYjNKdE9pQjBjbUZ1YzJ4aGRHVlpLREFwSUhOallXeGxLREVwSUNGa1pXWmhkV3gwTzF4dVhHNGtiVzlrWVd3dGRISmhibk5wZEdsdmJpMWtkWEpoZEdsdmJqb2dNQzR4TlhNZ0lXUmxabUYxYkhRN0lDOHZJQ2hES1Z4dUpHMXZaR0ZzTFhSeVlXNXphWFJwYjI0NklIUnlZVzV6Wm05eWJTQWtiVzlrWVd3dGRISmhibk5wZEdsdmJpMWtkWEpoZEdsdmJpQmxZWE5sTFc5MWRDQWhaR1ZtWVhWc2REdGNiaVJ0YjJSaGJDMWpiRzl6WlMxaWRHNHRZbWM2SUhKblltRXRkRzh0YUdWNEtISm5ZbUVvSkdKc1lXTnJMQ0F3TGpBNEtTd2dKSEpuWW1FdGRHOHRhR1Y0TFdKbktTQWhaR1ZtWVhWc2REc2dMeThnS0VNcFhHNWNiaVJ0YjJSaGJDMXphVzF3YkdVdGNHRmtaR2x1WnpvZ00zSmxiU0FoWkdWbVlYVnNkRHNnTHk4Z0tFTXBYRzRrYlc5a1lXd3RjMmx0Y0d4bExXTnNiM05sTFhCdmMybDBhVzl1T2lBeExqTTNOWEpsYlNBaFpHVm1ZWFZzZERzZ0x5OGdLRU1wWEc1Y2JpOHZJQ29nUVd4bGNuUnpYRzR2THlBcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xWEc1Y2JpUmhiR1Z5ZEMxd1lXUmthVzVuTFhrNklDUnpjR0ZqWlhJZ0tpQXdMamMxSUNGa1pXWmhkV3gwTzF4dUpHRnNaWEowTFhCaFpHUnBibWN0ZURvZ0pITndZV05sY2lBcUlERXVNalVnSVdSbFptRjFiSFE3WEc0a1lXeGxjblF0WW05eVpHVnlMWEpoWkdsMWN6b2dKR0p2Y21SbGNpMXlZV1JwZFhNZ0lXUmxabUYxYkhRN1hHNGtZV3hsY25RdFltOXlaR1Z5TFhkcFpIUm9PaUF3SUNGa1pXWmhkV3gwTzF4dUpHRnNaWEowTFdKbkxYTmpZV3hsT2lBdE9EUWxJQ0ZrWldaaGRXeDBPMXh1SkdGc1pYSjBMV0p2Y21SbGNpMXpZMkZzWlRvZ0xUY3dKU0FoWkdWbVlYVnNkRHRjYmlSaGJHVnlkQzFqYjJ4dmNpMXpZMkZzWlRvZ01DVWdJV1JsWm1GMWJIUTdYRzVjYmk4dklDb2dVSEp2WjNKbGMzTWdZbUZ5YzF4dUx5OGdLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtseHVYRzRrY0hKdlozSmxjM010YUdWcFoyaDBPaUF3TGpjMWNtVnRJQ0ZrWldaaGRXeDBPMXh1SkhCeWIyZHlaWE56TFdadmJuUXRjMmw2WlRvZ01DNDJNalZ5WlcwZ0lXUmxabUYxYkhRN1hHNGtjSEp2WjNKbGMzTXRZbWM2SUhKblltRXRkRzh0YUdWNEtDUm5jbUY1TFRFd01Dd2dKSEpuWW1FdGRHOHRhR1Y0TFdKbktTQWhaR1ZtWVhWc2REdGNiaVJ3Y205bmNtVnpjeTFpYjNKa1pYSXRjbUZrYVhWek9pQXhNSEpsYlNBaFpHVm1ZWFZzZER0Y2JpUndjbTluY21WemN5MWlZWEl0WTI5c2IzSTZJQ1IzYUdsMFpTQWhaR1ZtWVhWc2REdGNibHh1THk4Z1RHbHpkQ0JuY205MWNGeHVMeThnS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLbHh1WEc0dkx5QnpZM056TFdSdlkzTXRjM1JoY25RZ2JHbHpkQzFuY205MWNDMTJZWEpwWVdKc1pYTmNiaVJzYVhOMExXZHliM1Z3TFdOdmJHOXlPaUFrWW05a2VTMWpiMnh2Y2lBaFpHVm1ZWFZzZER0Y2JpUnNhWE4wTFdkeWIzVndMV0puT2lCMGNtRnVjM0JoY21WdWRDQWhaR1ZtWVhWc2REdGNiaVJzYVhOMExXZHliM1Z3TFdKdmNtUmxjaTFqYjJ4dmNqb2dKR0p2Y21SbGNpMWpiMnh2Y2lBaFpHVm1ZWFZzZER0Y2JpUnNhWE4wTFdkeWIzVndMV2wwWlcwdGNHRmtaR2x1WnkxNU9pQXdMall5TlhKbGJTQWhaR1ZtWVhWc2REdGNiaVJzYVhOMExXZHliM1Z3TFdsMFpXMHRjR0ZrWkdsdVp5MTRPaUFrYzNCaFkyVnlJQ0ZrWldaaGRXeDBPMXh1Skd4cGMzUXRaM0p2ZFhBdGFYUmxiUzFpWnkxelkyRnNaVG9nTFRnMEpTQWhaR1ZtWVhWc2REdGNiaVJzYVhOMExXZHliM1Z3TFdsMFpXMHRZMjlzYjNJdGMyTmhiR1U2SURBbElDRmtaV1poZFd4ME8xeHVKR3hwYzNRdFozSnZkWEF0YVhSbGJTMWlaeTFvYjNabGNpMXpZMkZzWlRvZ05TVWdJV1JsWm1GMWJIUTdJQzh2SUNBb1l5bGNibHh1Skd4cGMzUXRaM0p2ZFhBdGFHOTJaWEl0WW1jNklISm5ZbUV0ZEc4dGFHVjRLSEpuWW1Fb0pHSnNZV05yTENBd0xqQTJLU3dnSkhKblltRXRkRzh0YUdWNExXSm5LU0FoWkdWbVlYVnNkRHRjYmlSc2FYTjBMV2R5YjNWd0xXSnZjbVJsY2kxeVlXUnBkWE02SUNSaWIzSmtaWEl0Y21Ga2FYVnpMV3huSUNGa1pXWmhkV3gwTzF4dVhHNGtiR2x6ZEMxbmNtOTFjQzFrYVhOaFlteGxaQzFqYjJ4dmNqb2dKSFJsZUhRdGJYVjBaV1FnSVdSbFptRjFiSFE3WEc1Y2JpUnNhWE4wTFdkeWIzVndMV0ZqZEdsdmJpMWpiMnh2Y2pvZ0pIUmxlSFF0YlhWMFpXUXRhRzkyWlhJZ0lXUmxabUYxYkhRN1hHNGtiR2x6ZEMxbmNtOTFjQzFoWTNScGIyNHRhRzkyWlhJdFkyOXNiM0k2SUNSaWIyUjVMV052Ykc5eUlDRmtaV1poZFd4ME8xeHVKR3hwYzNRdFozSnZkWEF0WVdOMGFXOXVMV0ZqZEdsMlpTMWlaem9nSkdkeVlYa3ROVEFnSVdSbFptRjFiSFE3WEc0dkx5QnpZM056TFdSdlkzTXRaVzVrSUd4cGMzUXRaM0p2ZFhBdGRtRnlhV0ZpYkdWelhHNWNiaTh2SUNvZ1NXMWhaMlVnZEdoMWJXSnVZV2xzYzF4dUx5OGdLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtseHVYRzRrZEdoMWJXSnVZV2xzTFhCaFpHUnBibWM2SURBZ0lXUmxabUYxYkhRN1hHNGtkR2gxYldKdVlXbHNMV0puT2lCMGNtRnVjM0JoY21WdWRDQWhaR1ZtWVhWc2REdGNiaVIwYUhWdFltNWhhV3d0WW05eVpHVnlMWGRwWkhSb09pQXdjSGdnSVdSbFptRjFiSFE3WEc0a2RHaDFiV0p1WVdsc0xXSnZjbVJsY2kxeVlXUnBkWE02SURCd2VDQWhaR1ZtWVhWc2REdGNibHh1THk4Z0tpQkdhV2QxY21WelhHNHZMeUFxS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FYRzVjYmlSbWFXZDFjbVV0WTJGd2RHbHZiaTFqYjJ4dmNqb2dKSFJsZUhRdGJYVjBaV1FnSVdSbFptRjFiSFE3WEc1Y2JpOHZJQ29nUW5KbFlXUmpjblZ0WW5OY2JpOHZJQ29xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpcGNibHh1SkdKeVpXRmtZM0oxYldJdGNHRmtaR2x1WnkxNU9pQXdJQ0ZrWldaaGRXeDBPMXh1SkdKeVpXRmtZM0oxYldJdGNHRmtaR2x1WnkxNE9pQXdJQ0ZrWldaaGRXeDBPMXh1SkdKeVpXRmtZM0oxYldJdGFYUmxiUzF3WVdSa2FXNW5MWGc2SURBdU5YSmxiU0FoWkdWbVlYVnNkRHRjYmlSaWNtVmhaR055ZFcxaUxXMWhjbWRwYmkxaWIzUjBiMjA2SURGeVpXMGdJV1JsWm1GMWJIUTdYRzRrWW5KbFlXUmpjblZ0WWkxaVp6b2dkSEpoYm5Od1lYSmxiblFnSVdSbFptRjFiSFE3WEc0a1luSmxZV1JqY25WdFlpMWthWFpwWkdWeUxXTnZiRzl5T2lCeVoySmhMWFJ2TFdobGVDZ2taM0poZVMwMU1EQXNJQ1J5WjJKaExYUnZMV2hsZUMxaVp5a2dJV1JsWm1GMWJIUTdYRzRrWW5KbFlXUmpjblZ0WWkxaFkzUnBkbVV0WTI5c2IzSTZJQ1JpYjJSNUxXTnZiRzl5SUNGa1pXWmhkV3gwTzF4dUpHSnlaV0ZrWTNKMWJXSXRaR2wyYVdSbGNqb2dKeThuSUNGa1pXWmhkV3gwTzF4dUpHSnlaV0ZrWTNKMWJXSXRaR2wyYVdSbGNpMW1iR2x3Y0dWa09pQW5YRnhjWENjZ0lXUmxabUYxYkhRN1hHNGtZbkpsWVdSamNuVnRZaTFqYjJ4dmNqb2dKR0p5WldGa1kzSjFiV0l0WVdOMGFYWmxMV052Ykc5eUlDRmtaV1poZFd4ME95QXZMeUFvUXlsY2JseHVMeThnS2lCRFlYSnZkWE5sYkZ4dUx5OGdLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtseHVKR05oY205MWMyVnNMV052Ym5SeWIyd3RZMjlzYjNJNklDUjNhR2wwWlNBaFpHVm1ZWFZzZER0Y2JpUmpZWEp2ZFhObGJDMWpiMjUwY205c0xYZHBaSFJvT2lBeE5DVWdJV1JsWm1GMWJIUTdYRzRrWTJGeWIzVnpaV3d0WTI5dWRISnZiQzFwWTI5dUxYZHBaSFJvT2lBeUxqVnlaVzBnSVdSbFptRjFiSFE3WEc0a1kyRnliM1Z6Wld3dFkyOXVkSEp2YkMxdmNHRmphWFI1T2lBeElDRmtaV1poZFd4ME8xeHVKR05oY205MWMyVnNMV052Ym5SeWIyd3RhRzkyWlhJdGIzQmhZMmwwZVRvZ01TQWhaR1ZtWVhWc2REdGNibHh1SkdOaGNtOTFjMlZzTFdOdmJuUnliMnd0Y0hKbGRpMXBZMjl1TFdKbk9pQjFjbXdvWENKa1lYUmhPbWx0WVdkbEwzTjJaeXQ0Yld3c0pUTkRjM1puSUhodGJHNXpQU2RvZEhSd09pOHZkM2QzTG5jekxtOXlaeTh5TURBd0wzTjJaeWNnZDJsa2RHZzlKekkwSnlCb1pXbG5hSFE5SnpJMEp5QjJhV1YzUW05NFBTY3dJREFnTWpRZ01qUW5JSE4wZVd4bFBTZG1hV3hzT2lBamV5UmpZWEp2ZFhObGJDMWpiMjUwY205c0xXTnZiRzl5ZlR0MGNtRnVjMlp2Y20wNklEdHRjMFpwYkhSbGNqbzdKeVV6UlNVelEzQmhkR2dnWkQwblRURXpMakk1TXlBMkxqSTVNeUEzTGpVNE5pQXhNbXcxTGpjd055QTFMamN3TnlBeExqUXhOQzB4TGpReE5Fd3hNQzQwTVRRZ01USnNOQzR5T1RNdE5DNHlPVE42SnlVelJTVXpReTl3WVhSb0pUTkZKVE5ETDNOMlp5VXpSVndpS1NBaFpHVm1ZWFZzZER0Y2JpUmpZWEp2ZFhObGJDMWpiMjUwY205c0xXNWxlSFF0YVdOdmJpMWlaem9nZFhKc0tGd2laR0YwWVRwcGJXRm5aUzl6ZG1jcmVHMXNMQ1V6UTNOMlp5QjRiV3h1Y3owbmFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1qQXdNQzl6ZG1jbklIZHBaSFJvUFNjeU5DY2dhR1ZwWjJoMFBTY3lOQ2NnZG1sbGQwSnZlRDBuTUNBd0lESTBJREkwSnlCemRIbHNaVDBuWm1sc2JEb2dJM3NrWTJGeWIzVnpaV3d0WTI5dWRISnZiQzFqYjJ4dmNuMDdkSEpoYm5ObWIzSnRPaUE3YlhOR2FXeDBaWEk2T3ljbE0wVWxNME53WVhSb0lHUTlKMDB4TUM0M01EY2dNVGN1TnpBM0lERTJMalF4TkNBeE1td3ROUzQzTURjdE5TNDNNRGN0TVM0ME1UUWdNUzQwTVRSTU1UTXVOVGcySURFeWJDMDBMakk1TXlBMExqSTVNM29uSlRORkpUTkRMM0JoZEdnbE0wVWxNME12YzNabkpUTkZYQ0lwSUNGa1pXWmhkV3gwTzF4dVhHNHZMeUJUY0dsdWJtVnljMXh1THk4Z0tpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2x4dVhHNGtjM0JwYm01bGNpMTNhV1IwYUMxc1p6b2dNM0psYlNBaFpHVm1ZWFZzZERzZ0x5OGdLRU1wWEc0a2MzQnBibTVsY2kxb1pXbG5hSFF0YkdjNklDUnpjR2x1Ym1WeUxYZHBaSFJvTFd4bklDRmtaV1poZFd4ME95QXZMeUFvUXlsY2JpUnpjR2x1Ym1WeUxXSnZjbVJsY2kxM2FXUjBhQzFzWnpvZ01DNHpaVzBnSVdSbFptRjFiSFE3SUM4dklDaERLVnh1WEc0dkx5QXFJRU5zYjNObFhHNHZMeUFxS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FYRzVjYmlSaWRHNHRZMnh2YzJVdGQybGtkR2c2SURBdU9HVnRJQ0ZrWldaaGRXeDBPMXh1SkdKMGJpMWpiRzl6WlMxb1pXbG5hSFE2SUNSaWRHNHRZMnh2YzJVdGQybGtkR2dnSVdSbFptRjFiSFE3WEc0a1luUnVMV05zYjNObExXTnZiRzl5T2lBa2RHVjRkQzF0ZFhSbFpDQWhaR1ZtWVhWc2REdGNiaVJpZEc0dFkyeHZjMlV0WW1jNklIVnliQ2hjSW1SaGRHRTZhVzFoWjJVdmMzWm5LM2h0YkN3bE0wTnpkbWNnZDJsa2RHZzlKekUxTUhCNEp5Qm9aV2xuYUhROUp6RTFNWEI0SnlCMmFXVjNRbTk0UFNjd0lEQWdNVFV3SURFMU1TY2dkbVZ5YzJsdmJqMG5NUzR4SnlCNGJXeHVjejBuYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOXpkbWNuSUhodGJHNXpPbmhzYVc1clBTZG9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHhPVGs1TDNoc2FXNXJKeVV6UlNVelEyUmxabk1sTTBVbE0wTndiMng1WjI5dUlHbGtQU2R3WVhSb0xURW5JSEJ2YVc1MGN6MG5NVE14TGpJMU1UWTFOeUF3SURjMExqazVNek0zTURVZ05UWXVNalVnTVRndU56UTRNelF5TmlBd0lEQWdNVGd1TnpVZ05UWXVNalExTURJM09DQTNOU0F3SURFek1TNHlOU0F4T0M0M05EZ3pOREkySURFMU1DQTNOQzQ1T1RNek56QTFJRGt6TGpjMUlERXpNUzR5TlRFMk5UY2dNVFV3SURFMU1DQXhNekV1TWpVZ09UTXVOelUwT1RjeU1pQTNOU0F4TlRBZ01UZ3VOelVuSlRORkpUTkRMM0J2YkhsbmIyNGxNMFVsTTBNdlpHVm1jeVV6UlNVelEyY2dhV1E5Si9DZmpxZ3RKVFZDVTJWMGRYQWxOVVE2TFVOdmJHOXljeTBtWVcxd095MVRhR0ZrYjNkekp5QnpkSEp2YTJVOUoyNXZibVVuSUhOMGNtOXJaUzEzYVdSMGFEMG5NU2NnWm1sc2JEMG5ibTl1WlNjZ1ptbHNiQzF5ZFd4bFBTZGxkbVZ1YjJSa0p5VXpSU1V6UTJjZ2FXUTlKMEZ5ZEdKdllYSmtKeUIwY21GdWMyWnZjbTA5SjNSeVlXNXpiR0YwWlNndE1qSTFMakF3TURBd01Dd2dMVEkxTUM0d01EQXdNREFwSnlVelJTVXpRMmNnYVdROUowbGpiMjR0UTI5c2IzSW5JSFJ5WVc1elptOXliVDBuZEhKaGJuTnNZWFJsS0RJeU5TNHdNREF3TURBc0lESTFNQzQxTURBd01EQXBKeVV6UlNVelEzVnpaU0JtYVd4c1BTY2pleVJpZEc0dFkyeHZjMlV0WTI5c2IzSjlKeUI0YkdsdWF6cG9jbVZtUFNjbE1qTndZWFJvTFRFbkpUTkZKVE5ETDNWelpTVXpSU1V6UTNWelpTQm1hV3hzTFc5d1lXTnBkSGs5SnpBdU5TY2dabWxzYkQwbkkzc2tZblJ1TFdOc2IzTmxMV052Ykc5eWZTY2dlR3hwYm1zNmFISmxaajBuSlRJemNHRjBhQzB4SnlVelJTVXpReTkxYzJVbE0wVWxNME12WnlVelJTVXpReTluSlRORkpUTkRMMmNsTTBVbE0wTXZjM1puSlRORlhDSXBJQ0ZrWldaaGRXeDBPMXh1SkdKMGJpMWpiRzl6WlMxbWIyTjFjeTF6YUdGa2IzYzZJRzV2Ym1VZ0lXUmxabUYxYkhRN1hHNGtZblJ1TFdOc2IzTmxMVzl3WVdOcGRIazZJREF1T1RVZ0lXUmxabUYxYkhRN1hHNGtZblJ1TFdOc2IzTmxMV2h2ZG1WeUxXOXdZV05wZEhrNklEQXVPVFVnSVdSbFptRjFiSFE3WEc0a1luUnVMV05zYjNObExXWnZZM1Z6TFc5d1lXTnBkSGs2SURBdU9UVWdJV1JsWm1GMWJIUTdYRzVjYmlSamJHOXpaUzFtYjI1MExYZGxhV2RvZERvZ016QXdJQ0ZrWldaaGRXeDBPeUF2THlBb1F5bGNibHh1THk4Z0tpQlBabVpqWVc1MllYTmNiaTh2SUNvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaXBjYmx4dUx5OGdjMk56Y3kxa2IyTnpMWE4wWVhKMElHOW1abU5oYm5aaGN5MTJZWEpwWVdKc1pYTmNiaVJ2Wm1aallXNTJZWE10ZEhKaGJuTnBkR2x2Ymkxa2RYSmhkR2x2YmpvZ01DNHlOWE1nSVdSbFptRjFiSFE3WEc0dkx5QnpZM056TFdSdlkzTXRaVzVrSUc5bVptTmhiblpoY3kxMllYSnBZV0pzWlhOY2JseHVMeThnVlhScGJHbDBhV1Z6WEc0a2IzWmxjbVpzYjNkek9pQmhkWFJ2TENCb2FXUmtaVzRzSUhOamNtOXNiQ3dnZG1semFXSnNaU0FoWkdWbVlYVnNkRHRjYmx4dUx5OGdRMjl1Wm1sblhHNGtjblJzTFhOMWNIQnZjblE2SUdaaGJITmxJQ0ZrWldaaGRXeDBPMXh1SkdSaGNtc3RjM1I1YkdVNklHWmhiSE5sSUNGa1pXWmhkV3gwTzF4dUlpd2lMeThnVm1GeWFXRmliR1Z6WEc0dkwxeHVMeThnVm1GeWFXRmliR1Z6SUhOb2IzVnNaQ0JtYjJ4c2IzY2dkR2hsSUdBa1kyOXRjRzl1Wlc1MExYTjBZWFJsTFhCeWIzQmxjblI1TFhOcGVtVmdJR1p2Y20xMWJHRWdabTl5WEc0dkx5QmpiMjV6YVhOMFpXNTBJRzVoYldsdVp5NGdSWGc2SUNSdVlYWXRiR2x1YXkxa2FYTmhZbXhsWkMxamIyeHZjaUJoYm1RZ0pHMXZaR0ZzTFdOdmJuUmxiblF0WW05NExYTm9ZV1J2ZHkxNGN5NWNiaTh2WEc0dkx5QW9ReWtnUTNWemRHOXRJSFpoY21saFlteGxjeUJtYjNJZ1pYaDBaVzVrWldRZ1kyOXRjRzl1Wlc1MGN5QnZaaUJpYjI5MGMzUnlZWEFnYjI1c2VWeHVYRzR2THlBaElGOTJZWEpwWVdKc1pTMWtZWEpyTG5OamMzTWdabWxzWlNCdmRtVnljbWxrWlhNZ1gzWmhjbWxoWW14bExuTmpjM01nWm1sc1pTNWNibHh1THk4Z0tpQkRiMnh2Y25OY2JpOHZJQ29xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpcGNibHh1THk4Z2MyTnpjeTFrYjJOekxYTjBZWEowSUdkeVlYa3RZMjlzYjNJdGRtRnlhV0ZpYkdWelhHNGtkMmhwZEdVNklDTm1abVlnSVdSbFptRjFiSFE3WEc0a1lteGhZMnM2SUNNd01EQWdJV1JsWm1GMWJIUTdYRzRrWW1GelpUb2dJell6TjJKaE9TQWhaR1ZtWVhWc2REc2dMeThnS0VNcFhHNGtaM0poZVMweU5Ub2djbWRpWVNna2QyaHBkR1VzSURBdU1ERTFLU0FoWkdWbVlYVnNkRHNnTHk4Z0tFTXBYRzRrWjNKaGVTMDFNRG9nY21kaVlTZ2tkMmhwZEdVc0lEQXVNRE1wSUNGa1pXWmhkV3gwT3lBdkx5QW9ReWxjYmlSbmNtRjVMVEV3TURvZ2NtZGlZU2drZDJocGRHVXNJREF1TnpVcElDRmtaV1poZFd4ME8xeHVKR2R5WVhrdE1qQXdPaUJ5WjJKaEtDUjNhR2wwWlN3Z01DNDJLU0FoWkdWbVlYVnNkRHRjYmlSbmNtRjVMVE13TURvZ2NtZGlZU2drZDJocGRHVXNJREF1TkNrZ0lXUmxabUYxYkhRN1hHNGtaM0poZVMwME1EQTZJSEpuWW1Fb0pIZG9hWFJsTENBd0xqSXBJQ0ZrWldaaGRXeDBPMXh1SkdkeVlYa3ROVEF3T2lBa1ltRnpaU0FoWkdWbVlYVnNkRHRjYmlSbmNtRjVMVFl3TURvZ2NtZGlZU2drWW14aFkyc3NJREF1TVNrZ0lXUmxabUYxYkhRN1hHNGtaM0poZVMwM01EQTZJSEpuWW1Fb0pHSnNZV05yTENBd0xqRTFLU0FoWkdWbVlYVnNkRHRjYmlSbmNtRjVMVGd3TURvZ2NtZGlZU2drWW14aFkyc3NJREF1TkRVcElDRmtaV1poZFd4ME8xeHVKR2R5WVhrdE9UQXdPaUJ5WjJKaEtDUmliR0ZqYXl3Z01DNDJLU0FoWkdWbVlYVnNkRHRjYmk4dklITmpjM010Wkc5amN5MWxibVFnWjNKaGVTMWpiMnh2Y2kxMllYSnBZV0pzWlhOY2JseHVMeThnYzJOemN5MWtiMk56TFhOMFlYSjBJR2R5WVhrdFkyOXNiM0p6TFcxaGNGeHVKR2R5WVhsek9pQW9YRzRnSUNjeU5TYzZJQ1JuY21GNUxUSTFMRnh1SUNBbk5UQW5PaUFrWjNKaGVTMDFNRnh1S1NBaFpHVm1ZWFZzZER0Y2JpOHZJSE5qYzNNdFpHOWpjeTFsYm1RZ1ozSmhlUzFqYjJ4dmNuTXRiV0Z3WEc1Y2JpOHZJSE5qYzNNdFpHOWpjeTF6ZEdGeWRDQmpiMnh2Y2kxMllYSnBZV0pzWlhOY2JpUmliSFZsT2lBak5XRTRaR1ZsSUNGa1pXWmhkV3gwTzF4dUpHbHVaR2xuYnpvZ0l6WTJNVEJtTWlBaFpHVm1ZWFZzZER0Y2JpUndkWEp3YkdVNklDTTJaalF5WXpFZ0lXUmxabUYxYkhRN1hHNGtjR2x1YXpvZ0kyVTRNMlU0WXlBaFpHVm1ZWFZzZER0Y2JpUnlaV1E2SUNObVpqVmlOV01nSVdSbFptRjFiSFE3WEc0a2IzSmhibWRsT2lBalptUTNaVEUwSUNGa1pXWmhkV3gwTzF4dUpIbGxiR3h2ZHpvZ0kyWmtZV00wTVNBaFpHVm1ZWFZzZER0Y2JpUm5jbVZsYmpvZ0l6TTVaR0U0WVNBaFpHVm1ZWFZzZER0Y2JpUjBaV0ZzT2lBak1qQmpPVGszSUNGa1pXWmhkV3gwTzF4dUpHTjVZVzQ2SUNNd01HTm1aR1FnSVdSbFptRjFiSFE3WEc0dkx5QnpZM056TFdSdlkzTXRaVzVrSUdOdmJHOXlMWFpoY21saFlteGxjMXh1WEc0dkx5QnpZM056TFdSdlkzTXRjM1JoY25RZ2RHaGxiV1V0WTI5c2IzSXRkbUZ5YVdGaWJHVnpYRzRrY0hKcGJXRnllVG9nSkdKc2RXVWdJV1JsWm1GMWJIUTdYRzRrYzJWamIyNWtZWEo1T2lBak5qazRNRGxoSUNGa1pXWmhkV3gwTzF4dUpITjFZMk5sYzNNNklDUm5jbVZsYmlBaFpHVm1ZWFZzZER0Y2JpUnBibVp2T2lBa1kzbGhiaUFoWkdWbVlYVnNkRHRjYmlSM1lYSnVhVzVuT2lBa2VXVnNiRzkzSUNGa1pXWmhkV3gwTzF4dUpHUmhibWRsY2pvZ0pISmxaQ0FoWkdWbVlYVnNkRHRjYmlSc2FXZG9kRG9nSXpRek5HTTFaaUFoWkdWbVlYVnNkRHRjYmlSa1lYSnJPaUFqTnpFM056ZzBJQ0ZrWldaaGRXeDBPMXh1SkdkeVlYazZJQ1JuY21GNUxURXdNQ0FoWkdWbVlYVnNkRHNnTHk4Z0tFTXBYRzR2THlCelkzTnpMV1J2WTNNdFpXNWtJSFJvWlcxbExXTnZiRzl5TFhaaGNtbGhZbXhsYzF4dVhHNHZMeUJ6WTNOekxXUnZZM010YzNSaGNuUWdkR2hsYldVdFkyOXNiM0p6TFcxaGNGeHVKSFJvWlcxbExXTnZiRzl5Y3pvZ0tGeHVJQ0FuY0hKcGJXRnllU2M2SUNSd2NtbHRZWEo1TEZ4dUlDQW5jMlZqYjI1a1lYSjVKem9nSkhObFkyOXVaR0Z5ZVN4Y2JpQWdKM04xWTJObGMzTW5PaUFrYzNWalkyVnpjeXhjYmlBZ0oybHVabThuT2lBa2FXNW1ieXhjYmlBZ0ozZGhjbTVwYm1jbk9pQWtkMkZ5Ym1sdVp5eGNiaUFnSjJSaGJtZGxjaWM2SUNSa1lXNW5aWElzWEc0Z0lDZHNhV2RvZENjNklDUnNhV2RvZEN4Y2JpQWdKMlJoY21zbk9pQWtaR0Z5YXl4Y2JpQWdKMmR5WVhrbk9pQWtaM0poZVZ4dUtTQWhaR1ZtWVhWc2REdGNiaTh2SUhOamMzTXRaRzlqY3kxbGJtUWdkR2hsYldVdFkyOXNiM0p6TFcxaGNGeHVYRzRrWTI5c2IzSXRjMk5vWlcxbE9pQW5aR0Z5YXljZ0lXUmxabUYxYkhRN0lDOHZJQ2hES1Z4dVhHNHZMeUFxSUVKdlpIbGNiaTh2SUNvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaXBjYmx4dUpHSnZaSGt0WW1jNklDTXhZekl5TW1ZZ0lXUmxabUYxYkhRN1hHNGtjbWRpWVMxMGJ5MW9aWGd0WW1jNklDUmlZWE5sSUNGa1pXWmhkV3gwT3lBdkx5QW9ReWxjYmlSaWIyUjVMV052Ykc5eU9pQnlaMkpoTFhSdkxXaGxlQ2drWjNKaGVTMHpNREFzSUNSeVoySmhMWFJ2TFdobGVDMWlaeWtnSVdSbFptRjFiSFE3WEc0a2NtZGlZUzEwYnkxb1pYZ3RZbWN0YVc1MlpYSjBaV1E2SUhKbllpZ3hOakFzSURFME9Td2dNVFE1S1NBaFpHVm1ZWFZzZERzZ0x5OGdLRU1wSUVGVFMxeHVYRzR2THlBcUlFTnZiWEJ2Ym1WdWRITmNiaTh2SUNvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaXBjYmk4dklITmpjM010Wkc5amN5MXpkR0Z5ZENCaWIzZ3RjMmhoWkc5M0xYWmhjbWxoWW14bGMxeHVKR0p2ZUMxemFHRmtiM2M2SURBZ01DNHlOWEpsYlNBeGNtVnRJSEpuWW1Fb0pHSnNZV05yTENBd0xqSTFLU0FoWkdWbVlYVnNkRHRjYmlSaWIzZ3RjMmhoWkc5M0xYTnRPaUF3SURBdU1USTFjbVZ0SURBdU1qVnlaVzBnY21kaVlTZ2tZbXhoWTJzc0lEQXVNaWtnSVdSbFptRjFiSFE3WEc0a1ltOTRMWE5vWVdSdmR5MXNaem9nTUNBd0xqWXlOWEpsYlNBeExqSTFjbVZ0SUhKblltRW9KR0pzWVdOckxDQXdMak1wSUNGa1pXWmhkV3gwTzF4dUx5OGdjMk56Y3kxa2IyTnpMV1Z1WkNCaWIzZ3RjMmhoWkc5M0xYWmhjbWxoWW14bGMxeHVMeThnSkdKdmNtUmxjaTFqYjJ4dmNqb2djbWRpWVMxMGJ5MW9aWGdvY21kaVlTZ2tkMmhwZEdVc0lEQXVNU2tzSUNSeVoySmhMWFJ2TFdobGVDMWlaeWtnSVdSbFptRjFiSFE3WEc0dkx5QWtZbTl5WkdWeUxXbHVibVZ5TFdOdmJHOXlPaUJ5WjJKaExYUnZMV2hsZUNoeVoySmhLQ1IzYUdsMFpTd2dNQzR3T1Nrc0lDUnlaMkpoTFhSdkxXaGxlQzFpWnlrZ0lXUmxabUYxYkhRN0lDOHZJQ2hES1Z4dUpHSnZjbVJsY2kxamIyeHZjam9nY21kaVlTMTBieTFvWlhnb0pHZHlZWGt0T0RBd0xDQWtjbWRpWVMxMGJ5MW9aWGd0WW1jcElDRmtaV1poZFd4ME8xeHVKR0p2Y21SbGNpMXBibTVsY2kxamIyeHZjam9nY21kaVlTZ2tkMmhwZEdVc0lEQXVNRGtwSUNGa1pXWmhkV3gwT3lBdkx5QW9ReWxjYmx4dUx5OGdLaUJVZVhCdlozSmhjR2g1WEc0dkx5QXFLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcVhHNWNiaVIwWlhoMExXMTFkR1ZrT2lCeVoySmhMWFJ2TFdobGVDZ2taM0poZVMwME1EQXNJQ1J5WjJKaExYUnZMV2hsZUMxaVp5a2dJV1JsWm1GMWJIUTdYRzRrZEdWNGRDMXRkWFJsWkMxb2IzWmxjam9nY21kaVlTMTBieTFvWlhnb0pIZG9hWFJsTENBa2NtZGlZUzEwYnkxb1pYZ3RZbWNwSUNGa1pXWmhkV3gwT3lBdkx5QW9ReWxjYmx4dUpIUmxlSFF0YkdsbmFIUTZJSEpuWW1FdGRHOHRhR1Y0S0NSbmNtRjVMVFV3TUN3Z0pISm5ZbUV0ZEc4dGFHVjRMV0puS1NBaFpHVm1ZWFZzZERzZ0x5OGdLRU1wWEc0a2RHVjRkQzFzYVdkb2RHVnlPaUJ5WjJKaExYUnZMV2hsZUNna1ozSmhlUzAwTURBc0lDUnlaMkpoTFhSdkxXaGxlQzFpWnlrZ0lXUmxabUYxYkhRN0lDOHZJQ2hES1Z4dUpIUmxlSFF0YkdsbmFIUmxjM1E2SUhKblltRXRkRzh0YUdWNEtDUm5jbUY1TFRNd01Dd2dKSEpuWW1FdGRHOHRhR1Y0TFdKbktTQWhaR1ZtWVhWc2REc2dMeThnS0VNcFhHNWNiaTh2SUhOamMzTXRaRzlqY3kxemRHRnlkQ0JvWldGa2FXNW5jeTEyWVhKcFlXSnNaWE5jYmlSb1pXRmthVzVuY3kxamIyeHZjam9nY21kaVlTMTBieTFvWlhnb0pHZHlZWGt0TVRBd0xDQWtjbWRpWVMxMGJ5MW9aWGd0WW1jcElDRmtaV1poZFd4ME8xeHVMeThnYzJOemN5MWtiMk56TFdWdVpDQm9aV0ZrYVc1bmN5MTJZWEpwWVdKc1pYTmNibHh1SkdoeUxXTnZiRzl5T2lBa1ltOXlaR1Z5TFdOdmJHOXlJQ0ZrWldaaGRXeDBPMXh1WEc0dkx5QXFJRlJoWW14bGMxeHVMeThnS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLbHh1WEc0a2RHRmliR1V0WW1jdGMyTmhiR1U2SUMwNE1DVWdJV1JsWm1GMWJIUTdYRzVjYmk4dklITmpjM010Wkc5amN5MXpkR0Z5ZENCMFlXSnNaUzFzYjI5d1hHNGtkR0ZpYkdVdGRtRnlhV0Z1ZEhNNklDaGNiaUFnSjNCeWFXMWhjbmtuT2lCemFHbG1kQzFqYjJ4dmNpZ2tjSEpwYldGeWVTd2dKSFJoWW14bExXSm5MWE5qWVd4bEtTeGNiaUFnSjNObFkyOXVaR0Z5ZVNjNklITm9hV1owTFdOdmJHOXlLQ1J6WldOdmJtUmhjbmtzSUNSMFlXSnNaUzFpWnkxelkyRnNaU2tzWEc0Z0lDZHpkV05qWlhOekp6b2djMmhwWm5RdFkyOXNiM0lvSkhOMVkyTmxjM01zSUNSMFlXSnNaUzFpWnkxelkyRnNaU2tzWEc0Z0lDZHBibVp2SnpvZ2MyaHBablF0WTI5c2IzSW9KR2x1Wm04c0lDUjBZV0pzWlMxaVp5MXpZMkZzWlNrc1hHNGdJQ2QzWVhKdWFXNW5Kem9nYzJocFpuUXRZMjlzYjNJb0pIZGhjbTVwYm1jc0lDUjBZV0pzWlMxaVp5MXpZMkZzWlNrc1hHNGdJQ2RrWVc1blpYSW5PaUJ6YUdsbWRDMWpiMnh2Y2lna1pHRnVaMlZ5TENBa2RHRmliR1V0WW1jdGMyTmhiR1VwTEZ4dUlDQW5iR2xuYUhRbk9pQWtaR0Z5YXl4Y2JpQWdKMlJoY21zbk9pQWtkMmhwZEdWY2Jpa2dJV1JsWm1GMWJIUTdYRzR2THlCelkzTnpMV1J2WTNNdFpXNWtJSFJoWW14bExXeHZiM0JjYmx4dUpIUmhZbXhsTFhOMGNtbHdaV1F0WW1jdFptRmpkRzl5T2lBd0xqQTJJQ0ZrWldaaGRXeDBPMXh1SkhSaFlteGxMWE4wY21sd1pXUXRZbWM2SUhKblltRW9KR2R5WVhrdE5UQXdMQ0FrZEdGaWJHVXRjM1J5YVhCbFpDMWlaeTFtWVdOMGIzSXBJQ0ZrWldaaGRXeDBPMXh1WEc0a2RHRmliR1V0YUc5MlpYSXRZbWN0Wm1GamRHOXlPaUF3TGpBNElDRmtaV1poZFd4ME8xeHVKSFJoWW14bExXaHZkbVZ5TFdKbk9pQnlaMkpoS0NSbmNtRjVMVFV3TUN3Z0pIUmhZbXhsTFdodmRtVnlMV0puTFdaaFkzUnZjaWtnSVdSbFptRjFiSFE3WEc0a2RHRmliR1V0WVdOMGFYWmxMV0puTFdaaFkzUnZjam9nTUM0d09DQWhaR1ZtWVhWc2REdGNiaVIwWVdKc1pTMWhZM1JwZG1VdFltYzZJSEpuWW1Fb0pHZHlZWGt0TlRBd0xDQWtkR0ZpYkdVdFlXTjBhWFpsTFdKbkxXWmhZM1J2Y2lrZ0lXUmxabUYxYkhRN1hHNWNiaVIwWVdKc1pTMWliM0prWlhJdFkyOXNiM0k2SUNSaWIzSmtaWEl0WTI5c2IzSWdJV1JsWm1GMWJIUTdYRzRrZEdGaWJHVXRaM0p2ZFhBdGMyVndZWEpoZEc5eUxXTnZiRzl5T2lBa2RHRmliR1V0WW05eVpHVnlMV052Ykc5eUlDRmtaV1poZFd4ME8xeHVYRzRrWTI5dGNHOXVaVzUwTFdGamRHbDJaUzFpWnpvZ0pIZG9hWFJsSUNGa1pXWmhkV3gwTzF4dVhHNHZMeUFxSUVOaGNtUnpYRzR2THlBcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xWEc1Y2JpUmpZWEprTFdKbk9pQnlaMkpoTFhSdkxXaGxlQ2drWjNKaGVTMDVNREFzSUNSeVoySmhMWFJ2TFdobGVDMWlaeWtnSVdSbFptRjFiSFE3WEc0a1kyRnlaQzFpYjNKa1pYSXRZMjlzYjNJNklDUmliM0prWlhJdFkyOXNiM0lnSVdSbFptRjFiSFE3WEc0a1kyRnlaQzFwYm01bGNpMWliM0prWlhJdFkyOXNiM0k2SUhKblltRXRkRzh0YUdWNEtDUm5jbUY1TFRnd01Dd2dKSEpuWW1FdGRHOHRhR1Y0TFdKbktTQWhaR1ZtWVhWc2REdGNiaVJqWVhKa0xXSnZlQzF6YUdGa2IzYzZJREFnTUM0eE1qVnlaVzBnTUM0NE56VnlaVzBnTUNCeVoySmhLQ1JpYkdGamF5d2dNQzR4TmlrZ0lXUmxabUYxYkhRN1hHNWNiaTh2SUNvZ1FXTmpiM0prYVc5dVhHNHZMeUFxS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FYRzVjYmlSaFkyTnZjbVJwYjI0dFltYzZJQ1JqWVhKa0xXSm5JQ0ZrWldaaGRXeDBPMXh1WEc0dkx5QXFJRUoxZEhSdmJuTmNiaTh2SUNvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaXBjYmx4dUpHSjBiaTFpYjNndGMyaGhaRzkzT2lBa1ltOTRMWE5vWVdSdmR5MXpiU0FoWkdWbVlYVnNkRHRjYmlSaWRHNHRhRzkyWlhJdFltOTRMWE5vWVdSdmR6b2dKR0p2ZUMxemFHRmtiM2NnSVdSbFptRjFiSFE3SUM4dklDaERLVnh1WEc0dkx5QXFJRVp2Y20xelhHNHZMeUFxS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FYRzVjYmlScGJuQjFkQzFpWnpvZ0pHTmhjbVF0WW1jZ0lXUmxabUYxYkhRN1hHNGthVzV3ZFhRdFpHbHpZV0pzWldRdFltYzZJSEpuWW1FdGRHOHRhR1Y0S0NSbmNtRjVMVGd3TUN3Z0pISm5ZbUV0ZEc4dGFHVjRMV0puS1NBaFpHVm1ZWFZzZER0Y2JseHVKR2x1Y0hWMExXSnZjbVJsY2kxamIyeHZjam9nY21kaVlTMTBieTFvWlhnb0pHZHlZWGt0TnpBd0xDQWtjbWRpWVMxMGJ5MW9aWGd0WW1jcElDRmtaV1poZFd4ME8xeHVKR2x1Y0hWMExYQnNZV05sYUc5c1pHVnlMV052Ykc5eU9pQWtkR1Y0ZEMxdGRYUmxaQ0FoWkdWbVlYVnNkRHRjYmx4dUpHWnZjbTB0WTJobFkyc3RhVzV3ZFhRdFltOXlaR1Z5T2lBeGNIZ2djMjlzYVdRZ0pHbHVjSFYwTFdKdmNtUmxjaTFqYjJ4dmNpQWhaR1ZtWVhWc2REdGNiaVJtYjNKdExXTm9aV05yTFdsdWNIVjBMV1p2WTNWekxXSnZlQzF6YUdGa2IzYzZJREFnTUNBd0lEQXVNVEp5WlcwZ2NtZGlZU2h5WjJKaExYUnZMV2hsZUNna1ozSmhlUzAxTURBc0lDUnlaMkpoTFhSdkxXaGxlQzFpWnlrc0lETXdKU2tnSVdSbFptRjFiSFE3WEc1Y2JpUm1iM0p0TFhOM2FYUmphQzFqYjJ4dmNqb2dKR2x1Y0hWMExXSnZjbVJsY2kxamIyeHZjaUFoWkdWbVlYVnNkRHRjYmlSbWIzSnRMWE4zYVhSamFDMWlaeTFwYldGblpUb2dkWEpzS0Z3aVpHRjBZVHBwYldGblpTOXpkbWNyZUcxc0xEeHpkbWNnZUcxc2JuTTlKMmgwZEhBNkx5OTNkM2N1ZHpNdWIzSm5Mekl3TURBdmMzWm5KeUIyYVdWM1FtOTRQU2N0TkNBdE5DQTRJRGduUGp4amFYSmpiR1VnY2owbk15Y2dabWxzYkQwbkkzc2tabTl5YlMxemQybDBZMmd0WTI5c2IzSjlKeTgrUEM5emRtYytYQ0lwSUNGa1pXWmhkV3gwTzF4dVhHNGtabTl5YlMxelpXeGxZM1F0WW1jNklDUnBibkIxZEMxaVp5QWhaR1ZtWVhWc2REdGNiaVJtYjNKdExYTmxiR1ZqZEMxcGJtUnBZMkYwYjNJdFkyOXNiM0k2SUNSaWIyUjVMV052Ykc5eUlDRmtaV1poZFd4ME8xeHVKR1p2Y20wdGMyVnNaV04wTFdsdVpHbGpZWFJ2Y2pvZ2RYSnNLRndpWkdGMFlUcHBiV0ZuWlM5emRtY3JlRzFzTER4emRtY2dlRzFzYm5NOUoyaDBkSEE2THk5M2QzY3Vkek11YjNKbkx6SXdNREF2YzNabkp5QjJhV1YzUW05NFBTY3dJREFnTVRZZ01UWW5Qanh3WVhSb0lHWnBiR3c5SjI1dmJtVW5JSE4wY205clpUMG5JM3NrWm05eWJTMXpaV3hsWTNRdGFXNWthV05oZEc5eUxXTnZiRzl5ZlNjZ2MzUnliMnRsTFd4cGJtVmpZWEE5SjNKdmRXNWtKeUJ6ZEhKdmEyVXRiR2x1WldwdmFXNDlKM0p2ZFc1a0p5QnpkSEp2YTJVdGQybGtkR2c5SnpJbklHUTlKMDB5SURWc05pQTJJRFl0TmljdlBqd3ZjM1puUGx3aUtTQWhaR1ZtWVhWc2REdGNiaVJtYjNKdExYTmxiR1ZqZEMxcGJtUnBZMkYwYjNJdGNuUnNPaUIxY213b1hDSmtZWFJoT21sdFlXZGxMM04yWnl0NGJXd3NQSE4yWnlCNGJXeHVjejBuYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOXpkbWNuSUhacFpYZENiM2c5SnpBZ01DQXhOaUF4TmljK1BIQmhkR2dnWm1sc2JEMG5ibTl1WlNjZ2MzUnliMnRsUFNjamV5Um1iM0p0TFhObGJHVmpkQzFwYm1ScFkyRjBiM0l0WTI5c2IzSjlKeUJ6ZEhKdmEyVXRiR2x1WldOaGNEMG5jbTkxYm1RbklITjBjbTlyWlMxc2FXNWxhbTlwYmowbmNtOTFibVFuSUhOMGNtOXJaUzEzYVdSMGFEMG5NaWNnWkQwblRUSWdOV3cySURZZ05pMDJKeTgrUEM5emRtYytYQ0lwSUNGa1pXWmhkV3gwT3lBdkx5QW9ReWxjYmx4dUpHWnZjbTB0Y21GdVoyVXRkSEpoWTJzdFltYzZJSEpuWW1FdGRHOHRhR1Y0S0NSbmNtRjVMVGd3TUN3Z0pISm5ZbUV0ZEc4dGFHVjRMV0puS1NBaFpHVm1ZWFZzZER0Y2JpUm1iM0p0TFhKaGJtZGxMWFJ5WVdOckxXUnBjMkZpYkdWa0xXSm5PaUFrWjNKaGVTMDFNQ0FoWkdWbVlYVnNkRHNnTHk4Z0tFTXBYRzVjYmlSbWIzSnRMWEpoYm1kbExYUm9kVzFpTFdKbk9pQnlaMkpoTFhSdkxXaGxlQ2drWjNKaGVTMHlNREFzSUNSeVoySmhMWFJ2TFdobGVDMWlaeWtnSVdSbFptRjFiSFE3WEc0a1ptOXliUzF5WVc1blpTMTBhSFZ0WWkxaWIzZ3RjMmhoWkc5M09pQXdJREFnTm5CNElEQWdKR2R5WVhrdE1qQXdJQ0ZrWldaaGRXeDBPMXh1SkdadmNtMHRjbUZ1WjJVdGRHaDFiV0l0Wm05amRYTXRZbTk0TFhOb1lXUnZkem9nTUNBd0lEaHdlQ0F3Y0hnZ0pHZHlZWGt0TWpBd0lDRmtaV1poZFd4ME8xeHVKR1p2Y20wdGNtRnVaMlV0ZEdoMWJXSXRZV04wYVhabExXSm5PaUFrWm05eWJTMXlZVzVuWlMxMGFIVnRZaTFpWnlBaFpHVm1ZWFZzZER0Y2JpUm1iM0p0TFhKaGJtZGxMWFJvZFcxaUxXUnBjMkZpYkdWa0xXSm5PaUJ5WjJKaExYUnZMV2hsZUNna1ozSmhlUzAyTURBc0lDUnlaMkpoTFhSdkxXaGxlQzFpWnlrZ0lXUmxabUYxYkhRN1hHNWNiaTh2SUNvZ1RtRjJjMXh1THk4Z0tpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2x4dVhHNGtibUYyTFd4cGJtc3RZMjlzYjNJNklDUm9aV0ZrYVc1bmN5MWpiMnh2Y2lBaFpHVm1ZWFZzZER0Y2JpUnVZWFl0ZEdGaWN5MXNhVzVyTFdGamRHbDJaUzFpWnpvZ0pHTmhjbVF0WW1jZ0lXUmxabUYxYkhRN1hHNGtibUYyTFhSaFluTXRiR2x1YXkxb2IzWmxjaTFpYjNKa1pYSXRZMjlzYjNJNklDUmliM0prWlhJdFkyOXNiM0lnSVdSbFptRjFiSFE3WEc0a2JtRjJMWFJoWW5NdGJHbHVheTFoWTNScGRtVXRZbTl5WkdWeUxXTnZiRzl5T2lBa2JtRjJMWFJoWW5NdGJHbHVheTFvYjNabGNpMWliM0prWlhJdFkyOXNiM0lnSVdSbFptRjFiSFE3WEc1Y2JpOHZJQ29nVG1GMlltRnlYRzR2THlBcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xWEc1Y2JpUnVZWFppWVhJdGJHbG5hSFF0YUc5MlpYSXRZMjlzYjNJNklDTTBaVFV4TlRVZ0lXUmxabUYxYkhRN1hHNGtibUYyWW1GeUxXeHBaMmgwTFdGamRHbDJaUzFqYjJ4dmNqb2dJelJsTlRFMU5TQWhaR1ZtWVhWc2REdGNiaVJ1WVhaaVlYSXRiR2xuYUhRdFpHbHpZV0pzWldRdFkyOXNiM0k2SUhKblltRW9KR0pzWVdOckxDQXdMaklwSUNGa1pXWmhkV3gwTzF4dVhHNHZMeUFxSUVSeWIzQmtiM2R1YzF4dUx5OGdLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtseHVYRzRrWkhKdmNHUnZkMjR0WW1jNklISm5ZbUV0ZEc4dGFHVjRLQ1JuY21GNUxUa3dNQ3dnSkhKblltRXRkRzh0YUdWNExXSm5LU0FoWkdWbVlYVnNkRHRjYmlSa2NtOXdaRzkzYmkxa2FYWnBaR1Z5TFdKbk9pQWtZbTl5WkdWeUxXbHVibVZ5TFdOdmJHOXlJQ0ZrWldaaGRXeDBPMXh1WEc0a1pISnZjR1J2ZDI0dGJHbHVheTFvYjNabGNpMWlaem9nY21kaVlTZ2taM0poZVMwMU1EQXNJREF1TURncElDRmtaV1poZFd4ME8xeHVYRzR2THlBcUlGQmhaMmx1WVhScGIyNWNiaTh2SUNvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaXBjYmx4dUpIQmhaMmx1WVhScGIyNHRZbWM2SUhKblltRW9KR2R5WVhrdE5UQXdMQ0F3TGpBNEtTQWhaR1ZtWVhWc2REdGNiaVJ3WVdkcGJtRjBhVzl1TFdadlkzVnpMV0puT2lCeVoySmhLQ1JuY21GNUxUVXdNQ3dnTUM0eE5pa2dJV1JsWm1GMWJIUTdYRzVjYmlSd1lXZHBibUYwYVc5dUxXUnBjMkZpYkdWa0xXTnZiRzl5T2lBa2RHVjRkQzF0ZFhSbFpDQWhaR1ZtWVhWc2REdGNiaVJ3WVdkcGJtRjBhVzl1TFdScGMyRmliR1ZrTFdKbk9pQnlaMkpoS0NSbmNtRjVMVFV3TUN3Z01DNHdOaWtnSVdSbFptRjFiSFE3WEc0dkx5QXFJRkJ2Y0c5MlpYSnpYRzR2THlBcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xWEc0a2NHOXdiM1psY2kxaVp6b2dKR05oY21RdFltY2dJV1JsWm1GMWJIUTdYRzVjYmk4dklDb2dUVzlrWVd4elhHNHZMeUFxS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FYRzVjYmlSdGIyUmhiQzFqYjI1MFpXNTBMV0puT2lBa1kyRnlaQzFpWnlBaFpHVm1ZWFZzZER0Y2JpUnRiMlJoYkMxamIyNTBaVzUwTFdKdmVDMXphR0ZrYjNjdGVITTZJREFnTUM0eE1qVnlaVzBnTVM0eU5YSmxiU0F3SUhKblltRW9KR0pzWVdOckxDQXdMakk0S1NBaFpHVm1ZWFZzZER0Y2JpUnRiMlJoYkMxamJHOXpaUzFpZEc0dFltYzZJSEpuWW1Fb0pHSmhjMlVzSURBdU1UWXBJQ0ZrWldaaGRXeDBPeUF2THlBb1F5bGNibHh1THk4Z0tpQlFjbTluY21WemN5QmlZWEp6WEc0dkx5QXFLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcVhHNWNiaVJ3Y205bmNtVnpjeTFpWnpvZ2NtZGlZUzEwYnkxb1pYZ29KR2R5WVhrdE9EQXdMQ0FrY21kaVlTMTBieTFvWlhndFltY3BJQ0ZrWldaaGRXeDBPMXh1WEc0dkx5QXFJRXhwYzNRZ1ozSnZkWEJjYmk4dklDb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lvcUtpb3FLaW9xS2lwY2JseHVKR3hwYzNRdFozSnZkWEF0WW05eVpHVnlMV052Ykc5eU9pQWtZbTl5WkdWeUxXTnZiRzl5SUNGa1pXWmhkV3gwTzF4dUpHeHBjM1F0WjNKdmRYQXRhWFJsYlMxaVp5MXpZMkZzWlRvZ0xUY3dKU0FoWkdWbVlYVnNkRHRjYmlSc2FYTjBMV2R5YjNWd0xXbDBaVzB0WW1jdGFHOTJaWEl0YzJOaGJHVTZJREV3SlNBaFpHVm1ZWFZzZERzZ0x5OGdJQ2hqS1Z4dUpHeHBjM1F0WjNKdmRYQXRhRzkyWlhJdFltYzZJSEpuWW1Fb0pHSmhjMlVzSURBdU1EZ3BJQ0ZrWldaaGRXeDBPMXh1WEc0a2EySmtMV052Ykc5eU9pQWtaR0Z5YXlBaFpHVm1ZWFZzZER0Y2JseHVMeThnUTI5dVptbG5YRzRrY25Sc0xYTjFjSEJ2Y25RNklHWmhiSE5sSUNGa1pXWmhkV3gwTzF4dUpHUmhjbXN0YzNSNWJHVTZJSFJ5ZFdVZ0lXUmxabUYxYkhRN1hHNGlYWDA9ICovXG4iLCIvLyBFZGl0b3Jcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcblxuQHVzZSAnLi4vLi4vc2Nzcy9fYm9vdHN0cmFwLWV4dGVuZGVkL2luY2x1ZGUnIGFzIGxpZ2h0O1xuQHVzZSAnLi4vLi4vc2Nzcy9fYm9vdHN0cmFwLWV4dGVuZGVkL2luY2x1ZGUtZGFyaycgYXMgZGFyaztcbkBpbXBvcnQgJy4uLy4uL3Njc3MvX2N1c3RvbS12YXJpYWJsZXMvbGlicyc7XG5cbi8vIGNvbW1vbiBzdHlsZXNcbi5xbC1jb250YWluZXIge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgJi5xbC1kaXNhYmxlZCAucWwtZWRpdG9yIHVsW2RhdGEtY2hlY2tlZF0gPiBsaTo6YmVmb3JlIHtcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgfVxuXG4gICYucWwtZGlzYWJsZWQgLnFsLXRvb2x0aXAge1xuICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgfVxufVxuXG4ucWwtY2xpcGJvYXJkIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBvdmVyZmxvdy15OiBoaWRkZW47XG4gIGxlZnQ6IC02MjUwcmVtO1xuICBoZWlnaHQ6IDAuMDYyNXJlbTtcbiAgdG9wOiA1MCU7XG5cbiAgQGluY2x1ZGUgYXBwLXJ0bCB7XG4gICAgbGVmdDogYXV0bztcbiAgICByaWdodDogLTYyNTByZW07XG4gIH1cbn1cblxuLnFsLWVkaXRvciB7XG4gIG92ZXJmbG93LXk6IGF1dG87XG4gIGhlaWdodDogMTAwJTtcbiAgdGFiLXNpemU6IDQ7XG4gIC1tb3otdGFiLXNpemU6IDQ7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBvdXRsaW5lOiBub25lO1xuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG4gIHdoaXRlLXNwYWNlOiBwcmUtd3JhcDtcblxuICA+ICoge1xuICAgIGN1cnNvcjogdGV4dDtcbiAgfVxuXG4gICYucWwtYmxhbms6OmJlZm9yZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGNvbnRlbnQ6IGF0dHIoZGF0YS1wbGFjZWhvbGRlcik7XG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xuICAgIGxlZnQ6IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIH1cbn1cblxuLy8gVGhlbWVzXG4ucWwtc25vdyxcbi5xbC1idWJibGUge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXG4gICoge1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIH1cblxuICAucWwtb3V0LWJvdHRvbSxcbiAgLnFsLW91dC10b3Age1xuICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgfVxuXG4gIC5xbC1oaWRkZW4ge1xuICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC5xbC1ldmVuIHtcbiAgICBmaWxsLXJ1bGU6IGV2ZW5vZGQ7XG4gIH1cblxuICAucWwtZW1wdHkge1xuICAgIGZpbGw6IG5vbmU7XG4gIH1cblxuICAucWwtdHJhbnNwYXJlbnQge1xuICAgIG9wYWNpdHk6IDAuNDtcbiAgfVxuXG4gIC5xbC10aGluLFxuICAucWwtc3Ryb2tlLnFsLXRoaW4ge1xuICAgIHN0cm9rZS13aWR0aDogMTtcbiAgfVxuXG4gIC5xbC1lZGl0b3IgYSB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIH1cblxuICAucWwtZGlyZWN0aW9uLnFsLWFjdGl2ZSB7XG4gICAgc3ZnOmxhc3QtY2hpbGQge1xuICAgICAgZGlzcGxheTogaW5saW5lO1xuICAgIH1cblxuICAgIHN2ZzpmaXJzdC1jaGlsZCB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbiAgfVxuXG4gIC5xbC1kaXJlY3Rpb24gc3ZnOmxhc3QtY2hpbGQge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cblxuICAmLnFsLXRvb2xiYXIsXG4gICYgLnFsLXRvb2xiYXIge1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgcGFkZGluZzogMC41cmVtO1xuXG4gICAgJjo6YWZ0ZXIge1xuICAgICAgY2xlYXI6IGJvdGg7XG4gICAgICBjb250ZW50OiAnJztcbiAgICAgIGRpc3BsYXk6IHRhYmxlO1xuICAgIH1cblxuICAgIGJ1dHRvbiB7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIHBhZGRpbmc6IDAuMTg3NXJlbSAwLjMxMjVyZW07XG4gICAgICBoZWlnaHQ6IDEuNXJlbTtcbiAgICAgIHdpZHRoOiAxLjc1cmVtO1xuICAgICAgYmFja2dyb3VuZDogbm9uZTtcbiAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcblxuICAgICAgJjphY3RpdmU6aG92ZXIge1xuICAgICAgICBvdXRsaW5lOiBub25lO1xuICAgICAgfVxuXG4gICAgICBAaW5jbHVkZSBhcHAtcnRsIHtcbiAgICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgICAgfVxuXG4gICAgICBzdmcge1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIGZsb2F0OiBsZWZ0O1xuXG4gICAgICAgIEBpbmNsdWRlIGFwcC1ydGwge1xuICAgICAgICAgIGZsb2F0OiByaWdodDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGlucHV0LnFsLWltYWdlW3R5cGU9J2ZpbGUnXSB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbiAgfVxuXG4gIC5xbC10b29sdGlwIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMC42MjVyZW0pO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcblxuICAgICYucWwtZmxpcCB7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTAuNjI1cmVtKTtcbiAgICB9XG5cbiAgICBhIHtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICB9XG4gIH1cblxuICAucWwtZm9ybWF0cyB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIG1hcmdpbi1yaWdodDogMC45Mzc1cmVtO1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG5cbiAgICBAaW5jbHVkZSBhcHAtcnRsIHtcbiAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICAgIG1hcmdpbi1sZWZ0OiAwLjkzNzVyZW07XG4gICAgfVxuXG4gICAgJjo6YWZ0ZXIge1xuICAgICAgY29udGVudDogJyc7XG4gICAgICBkaXNwbGF5OiB0YWJsZTtcbiAgICAgIGNsZWFyOiBib3RoO1xuICAgIH1cbiAgfVxuXG4gIC5xbC1waWNrZXIge1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGhlaWdodDogMS41cmVtO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBmbG9hdDogbGVmdDtcblxuICAgIEBpbmNsdWRlIGFwcC1ydGwge1xuICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgIH1cblxuICAgICYucWwtZXhwYW5kZWQgLnFsLXBpY2tlci1vcHRpb25zIHtcbiAgICAgIHRvcDogMTAwJTtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgei1pbmRleDogMTtcbiAgICAgIG1hcmdpbi10b3A6IC0wLjA2MjVyZW07XG4gICAgfVxuXG4gICAgJi5xbC1oZWFkZXIsXG4gICAgJi5xbC1mb250LFxuICAgICYucWwtc2l6ZSB7XG4gICAgICAucWwtcGlja2VyLWxhYmVsW2RhdGEtbGFiZWxdOm5vdChbZGF0YS1sYWJlbD0nJ10pOjpiZWZvcmUsXG4gICAgICAucWwtcGlja2VyLWl0ZW1bZGF0YS1sYWJlbF06bm90KFtkYXRhLWxhYmVsPScnXSk6OmJlZm9yZSB7XG4gICAgICAgIGNvbnRlbnQ6IGF0dHIoZGF0YS1sYWJlbCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgJi5xbC1oZWFkZXIge1xuICAgICAgd2lkdGg6IDYuMTI1cmVtO1xuXG4gICAgICAucWwtcGlja2VyLWxhYmVsLFxuICAgICAgLnFsLXBpY2tlci1pdGVtIHtcbiAgICAgICAgJjo6YmVmb3JlIHtcbiAgICAgICAgICBjb250ZW50OiAnTm9ybWFsJztcbiAgICAgICAgfVxuXG4gICAgICAgICZbZGF0YS12YWx1ZT0nMSddOjpiZWZvcmUge1xuICAgICAgICAgIGNvbnRlbnQ6ICdIZWFkaW5nIDEnO1xuICAgICAgICB9XG5cbiAgICAgICAgJltkYXRhLXZhbHVlPScyJ106OmJlZm9yZSB7XG4gICAgICAgICAgY29udGVudDogJ0hlYWRpbmcgMic7XG4gICAgICAgIH1cblxuICAgICAgICAmW2RhdGEtdmFsdWU9JzMnXTo6YmVmb3JlIHtcbiAgICAgICAgICBjb250ZW50OiAnSGVhZGluZyAzJztcbiAgICAgICAgfVxuXG4gICAgICAgICZbZGF0YS12YWx1ZT0nNCddOjpiZWZvcmUge1xuICAgICAgICAgIGNvbnRlbnQ6ICdIZWFkaW5nIDQnO1xuICAgICAgICB9XG5cbiAgICAgICAgJltkYXRhLXZhbHVlPSc1J106OmJlZm9yZSB7XG4gICAgICAgICAgY29udGVudDogJ0hlYWRpbmcgNSc7XG4gICAgICAgIH1cblxuICAgICAgICAmW2RhdGEtdmFsdWU9JzYnXTo6YmVmb3JlIHtcbiAgICAgICAgICBjb250ZW50OiAnSGVhZGluZyA2JztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgICYucWwtZm9udCB7XG4gICAgICB3aWR0aDogNi43NXJlbTtcblxuICAgICAgLnFsLXBpY2tlci1sYWJlbCxcbiAgICAgIC5xbC1waWNrZXItaXRlbSB7XG4gICAgICAgICY6OmJlZm9yZSB7XG4gICAgICAgICAgY29udGVudDogJ1NhbnMgU2VyaWYnO1xuICAgICAgICB9XG5cbiAgICAgICAgJltkYXRhLXZhbHVlPSdzZXJpZiddOjpiZWZvcmUge1xuICAgICAgICAgIGNvbnRlbnQ6ICdTZXJpZic7XG4gICAgICAgIH1cblxuICAgICAgICAmW2RhdGEtdmFsdWU9J21vbm9zcGFjZSddOjpiZWZvcmUge1xuICAgICAgICAgIGNvbnRlbnQ6ICdNb25vc3BhY2UnO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgJi5xbC1zaXplIHtcbiAgICAgIHdpZHRoOiA2LjEyNXJlbTtcblxuICAgICAgLnFsLXBpY2tlci1sYWJlbCxcbiAgICAgIC5xbC1waWNrZXItaXRlbSB7XG4gICAgICAgICY6OmJlZm9yZSB7XG4gICAgICAgICAgY29udGVudDogJ05vcm1hbCc7XG4gICAgICAgIH1cblxuICAgICAgICAmW2RhdGEtdmFsdWU9J3NtYWxsJ106OmJlZm9yZSB7XG4gICAgICAgICAgY29udGVudDogJ1NtYWxsJztcbiAgICAgICAgfVxuXG4gICAgICAgICZbZGF0YS12YWx1ZT0nbGFyZ2UnXTo6YmVmb3JlIHtcbiAgICAgICAgICBjb250ZW50OiAnTGFyZ2UnO1xuICAgICAgICB9XG5cbiAgICAgICAgJltkYXRhLXZhbHVlPSdodWdlJ106OmJlZm9yZSB7XG4gICAgICAgICAgY29udGVudDogJ0h1Z2UnO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgJjpub3QoLnFsLWNvbG9yLXBpY2tlcik6bm90KC5xbC1pY29uLXBpY2tlcikgc3ZnIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogNTAlO1xuICAgICAgcmlnaHQ6IDA7XG4gICAgICBtYXJnaW4tdG9wOiAtMC41NjI1cmVtO1xuICAgICAgd2lkdGg6IDEuMTI1cmVtO1xuXG4gICAgICBAaW5jbHVkZSBhcHAtcnRsIHtcbiAgICAgICAgcmlnaHQ6IGF1dG87XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLnFsLXBpY2tlci1sYWJlbCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBwYWRkaW5nLXJpZ2h0OiAwLjEyNXJlbTtcbiAgICBwYWRkaW5nLWxlZnQ6IDAuNXJlbTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYm9yZGVyOiAwLjA2MjVyZW0gc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuXG4gICAgJjo6YmVmb3JlIHtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjM3NXJlbTtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB9XG4gIH1cblxuICAucWwtcGlja2VyLW9wdGlvbnMge1xuICAgIHBhZGRpbmc6IDAuMjVyZW0gMC41cmVtO1xuICAgIG1pbi13aWR0aDogMTAwJTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuXG4gICAgLnFsLXBpY2tlci1pdGVtIHtcbiAgICAgIHBhZGRpbmctYm90dG9tOiAwLjMxMjVyZW07XG4gICAgICBwYWRkaW5nLXRvcDogMC4zMTI1cmVtO1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgfVxuICB9XG5cbiAgLnFsLWNvbG9yLXBpY2tlcixcbiAgLnFsLWljb24tcGlja2VyIHtcbiAgICB3aWR0aDogMS43NXJlbTtcblxuICAgIC5xbC1waWNrZXItbGFiZWwge1xuICAgICAgcGFkZGluZzogMC4xMjVyZW0gMC4yNXJlbTtcbiAgICB9XG4gIH1cblxuICAucWwtaWNvbi1waWNrZXIge1xuICAgIC5xbC1waWNrZXItb3B0aW9ucyB7XG4gICAgICBwYWRkaW5nOiAwLjI1cmVtIDA7XG4gICAgfVxuXG4gICAgLnFsLXBpY2tlci1pdGVtIHtcbiAgICAgIHBhZGRpbmc6IDAuMTI1cmVtIDAuMjVyZW07XG4gICAgICB3aWR0aDogMS41cmVtO1xuICAgICAgaGVpZ2h0OiAxLjVyZW07XG4gICAgfVxuICB9XG5cbiAgLnFsLWNvbG9yLXBpY2tlciB7XG4gICAgLnFsLXBpY2tlci1vcHRpb25zIHtcbiAgICAgIHBhZGRpbmc6IDAuMTg3NXJlbSAwLjMxMjVyZW07XG4gICAgICB3aWR0aDogOS41cmVtO1xuICAgIH1cblxuICAgIC5xbC1waWNrZXItaXRlbSB7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIG1hcmdpbjogMC4xMjVyZW07XG4gICAgICBwYWRkaW5nOiAwO1xuICAgICAgd2lkdGg6IDFyZW07XG4gICAgICBoZWlnaHQ6IDFyZW07XG4gICAgICBib3JkZXI6IDAuMDYyNXJlbSBzb2xpZCB0cmFuc3BhcmVudDtcblxuICAgICAgQGluY2x1ZGUgYXBwLXJ0bCB7XG4gICAgICAgIGZsb2F0OiByaWdodDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmLnFsLWJhY2tncm91bmQgLnFsLXBpY2tlci1pdGVtIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgfVxuXG4gICAgJi5xbC1jb2xvciAucWwtcGlja2VyLWl0ZW0ge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDtcbiAgICB9XG4gIH1cblxuICBAaW5jbHVkZSBhcHAtcnRsIHtcbiAgICAucWwtaXRhbGljIHN2ZyxcbiAgICAucWwtbGlzdCBzdmcsXG4gICAgLnFsLWluZGVudCBzdmcsXG4gICAgLnFsLWRpcmVjdGlvbiBzdmcsXG4gICAgLnFsLWFsaWduIHN2ZyxcbiAgICAucWwtbGluayBzdmcsXG4gICAgLnFsLWltYWdlIHN2ZyxcbiAgICAucWwtY2xlYW4gc3ZnIHtcbiAgICAgIHRyYW5zZm9ybTogc2NhbGVYKC0xKTtcbiAgICB9XG4gIH1cbn1cblxuLnFsLXNub3cge1xuICAmLnFsLXRvb2xiYXIsXG4gIC5xbC10b29sYmFyIHtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgIGJhY2tncm91bmQtY2xpcDogcGFkZGluZy1ib3g7XG4gIH1cblxuICAucWwtZWRpdG9yIHtcbiAgICBtaW4taGVpZ2h0OiAxNXJlbTtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICB9XG5cbiAgLnFsLXBpY2tlci5xbC1leHBhbmRlZCAucWwtcGlja2VyLWxhYmVsIHtcbiAgICB6LWluZGV4OiAyO1xuICAgIGNvbG9yOiAjY2NjICFpbXBvcnRhbnQ7XG5cbiAgICAucWwtZmlsbCB7XG4gICAgICBmaWxsOiAjY2NjICFpbXBvcnRhbnQ7XG4gICAgfVxuXG4gICAgLnFsLXN0cm9rZSB7XG4gICAgICBzdHJva2U6ICNjY2MgIWltcG9ydGFudDtcbiAgICB9XG4gIH1cblxuICAucWwtc3Ryb2tlIHtcbiAgICBmaWxsOiBub25lO1xuICAgIHN0cm9rZS13aWR0aDogMjtcbiAgICBzdHJva2UtbGluZWpvaW46IHJvdW5kO1xuICAgIHN0cm9rZS1saW5lY2FwOiByb3VuZDtcbiAgfVxuXG4gIC5xbC1zdHJva2UtbWl0ZXIge1xuICAgIGZpbGw6IG5vbmU7XG4gICAgc3Ryb2tlLXdpZHRoOiAyO1xuICAgIHN0cm9rZS1taXRlcmxpbWl0OiAxMDtcbiAgfVxuXG4gIC5xbC1waWNrZXItbGFiZWwge1xuICAgIGJvcmRlcjogMC4wNjI1cmVtIHNvbGlkIHRyYW5zcGFyZW50O1xuICB9XG5cbiAgLnFsLXBpY2tlci1vcHRpb25zIHtcbiAgICBib3JkZXI6IDAuMDYyNXJlbSBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgIGJhY2tncm91bmQtY2xpcDogcGFkZGluZy1ib3g7XG4gIH1cblxuICAucWwtY29sb3ItcGlja2VyIC5xbC1waWNrZXItaXRlbS5xbC1zZWxlY3RlZCxcbiAgLnFsLWNvbG9yLXBpY2tlciAucWwtcGlja2VyLWl0ZW06aG92ZXIge1xuICAgIGJvcmRlci1jb2xvcjogIzAwMDtcbiAgfVxuXG4gIC5xbC10b29sdGlwIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIHBhZGRpbmc6IDAuMzEyNXJlbSAwLjc1cmVtO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgYmFja2dyb3VuZC1jbGlwOiBwYWRkaW5nLWJveDtcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuXG4gICAgJjo6YmVmb3JlIHtcbiAgICAgIGNvbnRlbnQ6ICdWaXNpdCBVUkw6JztcbiAgICAgIG1hcmdpbi1yaWdodDogMC41cmVtO1xuICAgICAgbGluZS1oZWlnaHQ6IDEuNjI1cmVtO1xuXG4gICAgICBAaW5jbHVkZSBhcHAtcnRsIHtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgICAgICBtYXJnaW4tbGVmdDogMC41cmVtO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlucHV0W3R5cGU9J3RleHQnXSB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgcGFkZGluZzogMC4xODc1cmVtIDAuMzEyNXJlbTtcbiAgICAgIHdpZHRoOiAxMC42MjVyZW07XG4gICAgICBoZWlnaHQ6IDEuNjI1cmVtO1xuICAgICAgZm9udC1zaXplOiAwLjgxMjVyZW07XG4gICAgfVxuXG4gICAgYS5xbC1wcmV2aWV3IHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gICAgICBtYXgtd2lkdGg6IDEyLjVyZW07XG4gICAgICBvdmVyZmxvdy14OiBoaWRkZW47XG4gICAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgICB9XG5cbiAgICBhLnFsLWFjdGlvbjo6YWZ0ZXIge1xuICAgICAgY29udGVudDogJ0VkaXQnO1xuICAgICAgbWFyZ2luLWxlZnQ6IDFyZW07XG4gICAgICBwYWRkaW5nLXJpZ2h0OiAwLjVyZW07XG4gICAgICBib3JkZXItcmlnaHQ6IDAuMDYyNXJlbSBzb2xpZCAjY2NjO1xuXG4gICAgICBAaW5jbHVkZSBhcHAtcnRsIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMXJlbTtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAwLjVyZW07XG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDA7XG4gICAgICAgIGJvcmRlci1yaWdodDogMDtcbiAgICAgICAgYm9yZGVyLWxlZnQ6IDAuMDYyNXJlbSBzb2xpZCAjY2NjO1xuICAgICAgfVxuICAgIH1cblxuICAgIGEucWwtcmVtb3ZlOjpiZWZvcmUge1xuICAgICAgY29udGVudDogJ1JlbW92ZSc7XG4gICAgICBtYXJnaW4tbGVmdDogMC41cmVtO1xuXG4gICAgICBAaW5jbHVkZSBhcHAtcnRsIHtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAwLjVyZW07XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgICAgfVxuICAgIH1cblxuICAgIGEge1xuICAgICAgbGluZS1oZWlnaHQ6IDEuNjI1cmVtO1xuICAgIH1cblxuICAgICYucWwtZWRpdGluZyBhLnFsLXByZXZpZXcsXG4gICAgJi5xbC1lZGl0aW5nIGEucWwtcmVtb3ZlIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuXG4gICAgJi5xbC1lZGl0aW5nIGlucHV0W3R5cGU9J3RleHQnXSB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgfVxuXG4gICAgJi5xbC1lZGl0aW5nIGEucWwtYWN0aW9uOjphZnRlciB7XG4gICAgICBjb250ZW50OiAnU2F2ZSc7XG4gICAgICBib3JkZXItcmlnaHQ6IDA7XG4gICAgICBwYWRkaW5nLXJpZ2h0OiAwO1xuXG4gICAgICBAaW5jbHVkZSBhcHAtcnRsIHtcbiAgICAgICAgYm9yZGVyLWxlZnQ6IDA7XG4gICAgICAgIHBhZGRpbmctbGVmdDogMDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmW2RhdGEtbW9kZT0nbGluayddOjpiZWZvcmUge1xuICAgICAgY29udGVudDogJ0VudGVyIGxpbms6JztcbiAgICB9XG5cbiAgICAmW2RhdGEtbW9kZT0nZm9ybXVsYSddOjpiZWZvcmUge1xuICAgICAgY29udGVudDogJ0VudGVyIGZvcm11bGE6JztcbiAgICB9XG5cbiAgICAmW2RhdGEtbW9kZT0ndmlkZW8nXTo6YmVmb3JlIHtcbiAgICAgIGNvbnRlbnQ6ICdFbnRlciB2aWRlbzonO1xuICAgIH1cbiAgfVxufVxuXG4ucWwtYnViYmxlIHtcbiAgJi5xbC10b29sYmFyLFxuICAucWwtdG9vbGJhciB7XG4gICAgYnV0dG9uOmhvdmVyLFxuICAgIGJ1dHRvbjpmb2N1cyxcbiAgICBidXR0b24ucWwtYWN0aXZlLFxuICAgIC5xbC1waWNrZXItbGFiZWw6aG92ZXIsXG4gICAgLnFsLXBpY2tlci1sYWJlbC5xbC1hY3RpdmUsXG4gICAgLnFsLXBpY2tlci1pdGVtOmhvdmVyLFxuICAgIC5xbC1waWNrZXItaXRlbS5xbC1zZWxlY3RlZCB7XG4gICAgICBjb2xvcjogI2ZmZjtcbiAgICB9XG5cbiAgICBidXR0b246aG92ZXIgLnFsLXN0cm9rZSxcbiAgICBidXR0b246Zm9jdXMgLnFsLXN0cm9rZSxcbiAgICBidXR0b24ucWwtYWN0aXZlIC5xbC1zdHJva2UsXG4gICAgLnFsLXBpY2tlci1sYWJlbDpob3ZlciAucWwtc3Ryb2tlLFxuICAgIC5xbC1waWNrZXItbGFiZWwucWwtYWN0aXZlIC5xbC1zdHJva2UsXG4gICAgLnFsLXBpY2tlci1pdGVtOmhvdmVyIC5xbC1zdHJva2UsXG4gICAgLnFsLXBpY2tlci1pdGVtLnFsLXNlbGVjdGVkIC5xbC1zdHJva2UsXG4gICAgYnV0dG9uOmhvdmVyIC5xbC1zdHJva2UtbWl0ZXIsXG4gICAgYnV0dG9uOmZvY3VzIC5xbC1zdHJva2UtbWl0ZXIsXG4gICAgYnV0dG9uLnFsLWFjdGl2ZSAucWwtc3Ryb2tlLW1pdGVyLFxuICAgIC5xbC1waWNrZXItbGFiZWw6aG92ZXIgLnFsLXN0cm9rZS1taXRlcixcbiAgICAucWwtcGlja2VyLWxhYmVsLnFsLWFjdGl2ZSAucWwtc3Ryb2tlLW1pdGVyLFxuICAgIC5xbC1waWNrZXItaXRlbTpob3ZlciAucWwtc3Ryb2tlLW1pdGVyLFxuICAgIC5xbC1waWNrZXItaXRlbS5xbC1zZWxlY3RlZCAucWwtc3Ryb2tlLW1pdGVyIHtcbiAgICAgIHN0cm9rZTogI2ZmZjtcbiAgICB9XG4gICAgYnV0dG9uOmhvdmVyIC5xbC1maWxsLFxuICAgIGJ1dHRvbjpmb2N1cyAucWwtZmlsbCxcbiAgICBidXR0b24ucWwtYWN0aXZlIC5xbC1maWxsLFxuICAgIC5xbC1waWNrZXItbGFiZWw6aG92ZXIgLnFsLWZpbGwsXG4gICAgLnFsLXBpY2tlci1sYWJlbC5xbC1hY3RpdmUgLnFsLWZpbGwsXG4gICAgLnFsLXBpY2tlci1pdGVtOmhvdmVyIC5xbC1maWxsLFxuICAgIC5xbC1waWNrZXItaXRlbS5xbC1zZWxlY3RlZCAucWwtZmlsbCxcbiAgICBidXR0b246aG92ZXIgLnFsLXN0cm9rZS5xbC1maWxsLFxuICAgIGJ1dHRvbjpmb2N1cyAucWwtc3Ryb2tlLnFsLWZpbGwsXG4gICAgYnV0dG9uLnFsLWFjdGl2ZSAucWwtc3Ryb2tlLnFsLWZpbGwsXG4gICAgLnFsLXBpY2tlci1sYWJlbDpob3ZlciAucWwtc3Ryb2tlLnFsLWZpbGwsXG4gICAgLnFsLXBpY2tlci1sYWJlbC5xbC1hY3RpdmUgLnFsLXN0cm9rZS5xbC1maWxsLFxuICAgIC5xbC1waWNrZXItaXRlbTpob3ZlciAucWwtc3Ryb2tlLnFsLWZpbGwsXG4gICAgLnFsLXBpY2tlci1pdGVtLnFsLXNlbGVjdGVkIC5xbC1zdHJva2UucWwtZmlsbCB7XG4gICAgICBmaWxsOiAjZmZmO1xuICAgIH1cblxuICAgIEBtZWRpYSAocG9pbnRlcjogY29hcnNlKSB7XG4gICAgICBidXR0b246aG92ZXI6bm90KC5xbC1hY3RpdmUpIHtcbiAgICAgICAgY29sb3I6ICNjY2M7XG4gICAgICB9XG4gICAgICBidXR0b246aG92ZXI6bm90KC5xbC1hY3RpdmUpIC5xbC1maWxsLFxuICAgICAgYnV0dG9uOmhvdmVyOm5vdCgucWwtYWN0aXZlKSAucWwtc3Ryb2tlLnFsLWZpbGwge1xuICAgICAgICBmaWxsOiAjY2NjO1xuICAgICAgfVxuICAgICAgYnV0dG9uOmhvdmVyOm5vdCgucWwtYWN0aXZlKSAucWwtc3Ryb2tlLFxuICAgICAgYnV0dG9uOmhvdmVyOm5vdCgucWwtYWN0aXZlKSAucWwtc3Ryb2tlLW1pdGVyIHtcbiAgICAgICAgc3Ryb2tlOiAjY2NjO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC5xbC1zdHJva2Uge1xuICAgIGZpbGw6IG5vbmU7XG4gICAgc3Ryb2tlOiAjY2NjO1xuICAgIHN0cm9rZS1saW5lam9pbjogcm91bmQ7XG4gICAgc3Ryb2tlLWxpbmVjYXA6IHJvdW5kO1xuICAgIHN0cm9rZS13aWR0aDogMjtcbiAgfVxuXG4gIC5xbC1zdHJva2UtbWl0ZXIge1xuICAgIGZpbGw6IG5vbmU7XG4gICAgc3Ryb2tlOiAjY2NjO1xuICAgIHN0cm9rZS1taXRlcmxpbWl0OiAxMDtcbiAgICBzdHJva2Utd2lkdGg6IDI7XG4gIH1cblxuICAucWwtZmlsbCxcbiAgLnFsLXN0cm9rZS5xbC1maWxsIHtcbiAgICBmaWxsOiAjY2NjO1xuICB9XG5cbiAgLnFsLXBpY2tlciB7XG4gICAgY29sb3I6ICNjY2M7XG5cbiAgICAmLnFsLWV4cGFuZGVkIC5xbC1waWNrZXItbGFiZWwge1xuICAgICAgei1pbmRleDogMjtcbiAgICAgIGNvbG9yOiAjNzc3O1xuXG4gICAgICAucWwtZmlsbCB7XG4gICAgICAgIGZpbGw6ICM3Nzc7XG4gICAgICB9XG5cbiAgICAgIC5xbC1zdHJva2Uge1xuICAgICAgICBzdHJva2U6ICM3Nzc7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLnFsLXBpY2tlci1vcHRpb25zIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDQ0O1xuICB9XG5cbiAgLnFsLWNvbG9yLXBpY2tlciAucWwtcGlja2VyLWxhYmVsIHN2ZyxcbiAgLnFsLWljb24tcGlja2VyIC5xbC1waWNrZXItbGFiZWwgc3ZnIHtcbiAgICByaWdodDogMC4yNXJlbTtcblxuICAgIEBpbmNsdWRlIGFwcC1ydGwge1xuICAgICAgcmlnaHQ6IGF1dG87XG4gICAgICBsZWZ0OiAwLjI1cmVtO1xuICAgIH1cbiAgfVxuXG4gIC5xbC1jb2xvci1waWNrZXIge1xuICAgIC5xbC1jb2xvci1waWNrZXIgc3ZnIHtcbiAgICAgIG1hcmdpbjogMC4wNjI1cmVtO1xuICAgIH1cblxuICAgIC5xbC1waWNrZXItaXRlbS5xbC1zZWxlY3RlZCxcbiAgICAucWwtcGlja2VyLWl0ZW06aG92ZXIge1xuICAgICAgYm9yZGVyLWNvbG9yOiAjZmZmO1xuICAgIH1cbiAgfVxuXG4gIC5xbC10b29sYmFyIC5xbC1mb3JtYXRzIHtcbiAgICBtYXJnaW46IDAuNXJlbSAwLjc1cmVtIDAuNXJlbSAwO1xuXG4gICAgQGluY2x1ZGUgYXBwLXJ0bCB7XG4gICAgICBtYXJnaW46IDAuNXJlbSAwIDAuNXJlbSAwLjc1cmVtO1xuICAgIH1cblxuICAgICY6Zmlyc3QtY2hpbGQge1xuICAgICAgbWFyZ2luLWxlZnQ6IDAuNzVyZW07XG5cbiAgICAgIEBpbmNsdWRlIGFwcC1ydGwge1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDAuNzVyZW07XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLnFsLXRvb2x0aXAtYXJyb3cge1xuICAgIGNvbnRlbnQ6ICcgJztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbGVmdDogNTAlO1xuICAgIG1hcmdpbi1sZWZ0OiAtMC4zNzVyZW07XG4gICAgYm9yZGVyLXJpZ2h0OiAwLjM3NXJlbSBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICBib3JkZXItbGVmdDogMC4zNzVyZW0gc29saWQgdHJhbnNwYXJlbnQ7XG4gIH1cblxuICAucWwtdG9vbHRpcCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzQ0NDtcbiAgICBjb2xvcjogI2ZmZjtcblxuICAgICY6bm90KC5xbC1mbGlwKSAucWwtdG9vbHRpcC1hcnJvdyB7XG4gICAgICB0b3A6IC0wLjM3NXJlbTtcbiAgICAgIGJvcmRlci1ib3R0b206IDAuMzc1cmVtIHNvbGlkICM0NDQ7XG4gICAgfVxuXG4gICAgJi5xbC1mbGlwIC5xbC10b29sdGlwLWFycm93IHtcbiAgICAgIGJvdHRvbTogLTAuMzc1cmVtO1xuICAgICAgYm9yZGVyLXRvcDogMC4zNzVyZW0gc29saWQgIzQ0NDtcbiAgICB9XG5cbiAgICAmLnFsLWVkaXRpbmcge1xuICAgICAgLnFsLXRvb2x0aXAtZWRpdG9yIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICB9XG5cbiAgICAgIC5xbC1mb3JtYXRzIHtcbiAgICAgICAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC5xbC10b29sdGlwLWVkaXRvciB7XG4gICAgZGlzcGxheTogbm9uZTtcblxuICAgIGlucHV0W3R5cGU9J3RleHQnXSB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBwYWRkaW5nOiAwLjYyNXJlbSAxLjI1cmVtO1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBvdXRsaW5lOiBub25lO1xuICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgICBib3JkZXI6IG5vbmU7XG4gICAgICBjb2xvcjogI2ZmZjtcbiAgICAgIGZvbnQtc2l6ZTogMC44MTI1cmVtO1xuICAgIH1cblxuICAgIGEge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgcmlnaHQ6IDEuMjVyZW07XG4gICAgICB0b3A6IDAuNjI1cmVtO1xuXG4gICAgICBAaW5jbHVkZSBhcHAtcnRsIHtcbiAgICAgICAgcmlnaHQ6IGF1dG87XG4gICAgICAgIGxlZnQ6IDEuMjVyZW07XG4gICAgICB9XG5cbiAgICAgICY6OmJlZm9yZSB7XG4gICAgICAgIGNvbnRlbnQ6ICdcXEQ3JztcbiAgICAgICAgY29sb3I6ICNjY2M7XG4gICAgICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgJi5xbC1jb250YWluZXI6bm90KC5xbC1kaXNhYmxlZCkgYSB7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICAmOjpiZWZvcmUsXG4gICAgJjo6YWZ0ZXIge1xuICAgICAgbWFyZ2luLWxlZnQ6IDUwJTtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICAgIGxlZnQ6IDA7XG4gICAgICB0cmFuc2l0aW9uOiB2aXNpYmlsaXR5IDBzIGVhc2UgMjAwbXM7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtMTAwJSk7XG4gICAgfVxuXG4gICAgJjpob3Zlcjo6YmVmb3JlLFxuICAgICY6aG92ZXI6OmFmdGVyIHtcbiAgICAgIHZpc2liaWxpdHk6IHZpc2libGU7XG4gICAgfVxuXG4gICAgJjo6YmVmb3JlIHtcbiAgICAgIGNvbnRlbnQ6IGF0dHIoaHJlZik7XG4gICAgICB0b3A6IC0wLjMxMjVyZW07XG4gICAgICB6LWluZGV4OiAxO1xuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgIHBhZGRpbmc6IDAuMzEyNXJlbSAwLjkzNzVyZW07XG4gICAgICBib3JkZXItcmFkaXVzOiAwLjkzNzVyZW07XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDQ0O1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgY29sb3I6ICNmZmY7XG4gICAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgICAgZm9udC1zaXplOiAwLjc1cmVtO1xuICAgIH1cblxuICAgICY6OmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6ICcgJztcbiAgICAgIHRvcDogMDtcbiAgICAgIGhlaWdodDogMDtcbiAgICAgIHdpZHRoOiAwO1xuICAgICAgYm9yZGVyLXRvcDogMC4zNzVyZW0gc29saWQgIzQ0NDtcbiAgICAgIGJvcmRlci1yaWdodDogMC4zNzVyZW0gc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgICBib3JkZXItbGVmdDogMC4zNzVyZW0gc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgfVxuICB9XG59XG5cbi8vIExpZ2h0IHN0eWxlc1xuQGlmICRlbmFibGUtbGlnaHQtc3R5bGUge1xuICAubGlnaHQtc3R5bGUge1xuICAgIC5xbC1lZGl0b3IucWwtYmxhbms6YmVmb3JlIHtcbiAgICAgIGNvbG9yOiBsaWdodC4kaW5wdXQtcGxhY2Vob2xkZXItY29sb3I7XG4gICAgfVxuXG4gICAgLnFsLXNub3csXG4gICAgLnFsLWJ1YmJsZSB7XG4gICAgICAmLnFsLXRvb2xiYXIgLnFsLXBpY2tlci1vcHRpb25zLFxuICAgICAgJiAucWwtdG9vbGJhciAucWwtcGlja2VyLW9wdGlvbnMge1xuICAgICAgICBib3gtc2hhZG93OiBsaWdodC4kZHJvcGRvd24tYm94LXNoYWRvdztcbiAgICAgIH1cblxuICAgICAgLnFsLXBpY2tlciB7XG4gICAgICAgICYucWwtaGVhZGVyIC5xbC1waWNrZXItaXRlbSB7XG4gICAgICAgICAgJltkYXRhLXZhbHVlPScxJ106OmJlZm9yZSB7XG4gICAgICAgICAgICBmb250LXNpemU6IGxpZ2h0LiRoMS1mb250LXNpemU7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgJltkYXRhLXZhbHVlPScyJ106OmJlZm9yZSB7XG4gICAgICAgICAgICBmb250LXNpemU6IGxpZ2h0LiRoMi1mb250LXNpemU7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgJltkYXRhLXZhbHVlPSczJ106OmJlZm9yZSB7XG4gICAgICAgICAgICBmb250LXNpemU6IGxpZ2h0LiRoMy1mb250LXNpemU7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgJltkYXRhLXZhbHVlPSc0J106OmJlZm9yZSB7XG4gICAgICAgICAgICBmb250LXNpemU6IGxpZ2h0LiRoNC1mb250LXNpemU7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgJltkYXRhLXZhbHVlPSc1J106OmJlZm9yZSB7XG4gICAgICAgICAgICBmb250LXNpemU6IGxpZ2h0LiRoNS1mb250LXNpemU7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgJltkYXRhLXZhbHVlPSc2J106OmJlZm9yZSB7XG4gICAgICAgICAgICBmb250LXNpemU6IGxpZ2h0LiRoNi1mb250LXNpemU7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgJi5xbC1mb250IC5xbC1waWNrZXItaXRlbSB7XG4gICAgICAgICAgJltkYXRhLXZhbHVlPSdzZXJpZiddOjpiZWZvcmUge1xuICAgICAgICAgICAgZm9udC1mYW1pbHk6IGxpZ2h0LiRmb250LWZhbWlseS1zZXJpZjtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAmW2RhdGEtdmFsdWU9J21vbm9zcGFjZSddOjpiZWZvcmUge1xuICAgICAgICAgICAgZm9udC1mYW1pbHk6IGxpZ2h0LiRmb250LWZhbWlseS1tb25vc3BhY2U7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgJi5xbC1zaXplIC5xbC1waWNrZXItaXRlbSB7XG4gICAgICAgICAgJltkYXRhLXZhbHVlPSdzbWFsbCddOjpiZWZvcmUge1xuICAgICAgICAgICAgZm9udC1zaXplOiBsaWdodC4kZm9udC1zaXplLXNtO1xuICAgICAgICAgIH1cblxuICAgICAgICAgICZbZGF0YS12YWx1ZT0nbGFyZ2UnXTo6YmVmb3JlIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogbGlnaHQuJGZvbnQtc2l6ZS1sZztcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAmW2RhdGEtdmFsdWU9J2h1Z2UnXTo6YmVmb3JlIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogbGlnaHQuJGZvbnQtc2l6ZS14bDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAucWwtc25vdyB7XG4gICAgICAucWwtZWRpdG9yLnFsLWJsYW5rOjpiZWZvcmUge1xuICAgICAgICBwYWRkaW5nOiAwIGxpZ2h0LiRpbnB1dC1idG4tcGFkZGluZy14O1xuICAgICAgfVxuXG4gICAgICAmLnFsLWNvbnRhaW5lciB7XG4gICAgICAgIGJvcmRlcjogMC4wNjI1cmVtIHNvbGlkIGxpZ2h0LiRpbnB1dC1ib3JkZXItY29sb3I7XG4gICAgICB9XG5cbiAgICAgIC5xbC1lZGl0b3Ige1xuICAgICAgICBwYWRkaW5nOiBsaWdodC4kaW5wdXQtYnRuLXBhZGRpbmcteDtcbiAgICAgIH1cblxuICAgICAgJi5xbC10b29sYmFyLFxuICAgICAgJiAucWwtdG9vbGJhciB7XG4gICAgICAgIGJvcmRlcjogMC4wNjI1cmVtIHNvbGlkIGxpZ2h0LiRpbnB1dC1ib3JkZXItY29sb3I7XG5cbiAgICAgICAgQG1lZGlhIChwb2ludGVyOiBjb2Fyc2UpIHtcbiAgICAgICAgICBidXR0b246aG92ZXI6bm90KC5xbC1hY3RpdmUpIHtcbiAgICAgICAgICAgIGNvbG9yOiBsaWdodC4kYm9keS1jb2xvcjtcbiAgICAgICAgICB9XG4gICAgICAgICAgYnV0dG9uOmhvdmVyOm5vdCgucWwtYWN0aXZlKSAucWwtc3Ryb2tlLFxuICAgICAgICAgIGJ1dHRvbjpob3Zlcjpub3QoLnFsLWFjdGl2ZSkgLnFsLXN0cm9rZS1taXRlciB7XG4gICAgICAgICAgICBzdHJva2U6IGxpZ2h0LiRib2R5LWNvbG9yO1xuICAgICAgICAgIH1cbiAgICAgICAgICBidXR0b246aG92ZXI6bm90KC5xbC1hY3RpdmUpIC5xbC1maWxsLFxuICAgICAgICAgIGJ1dHRvbjpob3Zlcjpub3QoLnFsLWFjdGl2ZSkgLnFsLXN0cm9rZS5xbC1maWxsIHtcbiAgICAgICAgICAgIGZpbGw6IGxpZ2h0LiRib2R5LWNvbG9yO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAmLnFsLXRvb2xiYXIgKyAucWwtY29udGFpbmVyLnFsLXNub3cge1xuICAgICAgICBib3JkZXItdG9wOiAwO1xuICAgICAgfVxuXG4gICAgICAucWwtc3Ryb2tlIHtcbiAgICAgICAgc3Ryb2tlOiBsaWdodC4kYm9keS1jb2xvcjtcbiAgICAgIH1cblxuICAgICAgLnFsLWZpbGwsXG4gICAgICAucWwtc3Ryb2tlLnFsLWZpbGwge1xuICAgICAgICBmaWxsOiBsaWdodC4kYm9keS1jb2xvcjtcbiAgICAgIH1cblxuICAgICAgLnFsLXN0cm9rZS1taXRlciB7XG4gICAgICAgIHN0cm9rZTogbGlnaHQuJGJvZHktY29sb3I7XG4gICAgICB9XG4gICAgICAucWwtcGlja2VyIHtcbiAgICAgICAgY29sb3I6IGxpZ2h0LiRib2R5LWNvbG9yO1xuXG4gICAgICAgICYucWwtZXhwYW5kZWQgLnFsLXBpY2tlci1vcHRpb25zIHtcbiAgICAgICAgICBib3JkZXItY29sb3I6IGxpZ2h0LiRkcm9wZG93bi1ib3JkZXItY29sb3I7XG4gICAgICAgIH1cblxuICAgICAgICAmLnFsLWV4cGFuZGVkIC5xbC1waWNrZXItbGFiZWwge1xuICAgICAgICAgIGJvcmRlci1jb2xvcjogbGlnaHQuJGlucHV0LWJvcmRlci1jb2xvcjtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAucWwtdG9vbHRpcCB7XG4gICAgICAgIGJvcmRlcjogbGlnaHQuJGRyb3Bkb3duLWJvcmRlci13aWR0aCBzb2xpZCBsaWdodC4kZHJvcGRvd24tYm9yZGVyLWNvbG9yO1xuICAgICAgICBjb2xvcjogbGlnaHQuJGJvZHktY29sb3I7XG4gICAgICAgIGJveC1zaGFkb3c6IGxpZ2h0LiRkcm9wZG93bi1ib3gtc2hhZG93O1xuXG4gICAgICAgIGlucHV0W3R5cGU9J3RleHQnXSB7XG4gICAgICAgICAgYm9yZGVyOiAwLjA2MjVyZW0gc29saWQgbGlnaHQuJGlucHV0LWJvcmRlci1jb2xvcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIC5xbC1idWJibGUgLnFsLXRvb2x0aXAge1xuICAgICAgYm9yZGVyLXJhZGl1czogbGlnaHQuJGJvcmRlci1yYWRpdXM7XG4gICAgICB6LWluZGV4OiBsaWdodC4kemluZGV4LW1lbnUtZml4ZWQgKyAxMDtcbiAgICB9XG4gIH1cbn1cblxuLy8gZGFyayBzdHlsZXNcbkBpZiAkZW5hYmxlLWRhcmstc3R5bGUge1xuICAuZGFyay1zdHlsZSB7XG4gICAgLnFsLWVkaXRvci5xbC1ibGFuazpiZWZvcmUge1xuICAgICAgY29sb3I6IGRhcmsuJGlucHV0LXBsYWNlaG9sZGVyLWNvbG9yO1xuICAgIH1cblxuICAgIC5xbC1zbm93LFxuICAgIC5xbC1idWJibGUge1xuICAgICAgLnFsLXRvb2x0aXAge1xuICAgICAgICBiYWNrZ3JvdW5kOiBkYXJrLiRib2R5LWJnO1xuICAgICAgfVxuICAgICAgJi5xbC10b29sYmFyIC5xbC1waWNrZXItb3B0aW9ucyxcbiAgICAgICYgLnFsLXRvb2xiYXIgLnFsLXBpY2tlci1vcHRpb25zIHtcbiAgICAgICAgYm94LXNoYWRvdzogZGFyay4kZHJvcGRvd24tYm94LXNoYWRvdztcbiAgICAgIH1cblxuICAgICAgLnFsLXBpY2tlciB7XG4gICAgICAgICYucWwtaGVhZGVyIC5xbC1waWNrZXItaXRlbSB7XG4gICAgICAgICAgJltkYXRhLXZhbHVlPScxJ106OmJlZm9yZSB7XG4gICAgICAgICAgICBmb250LXNpemU6IGRhcmsuJGgxLWZvbnQtc2l6ZTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAmW2RhdGEtdmFsdWU9JzInXTo6YmVmb3JlIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogZGFyay4kaDItZm9udC1zaXplO1xuICAgICAgICAgIH1cblxuICAgICAgICAgICZbZGF0YS12YWx1ZT0nMyddOjpiZWZvcmUge1xuICAgICAgICAgICAgZm9udC1zaXplOiBkYXJrLiRoMy1mb250LXNpemU7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgJltkYXRhLXZhbHVlPSc0J106OmJlZm9yZSB7XG4gICAgICAgICAgICBmb250LXNpemU6IGRhcmsuJGg0LWZvbnQtc2l6ZTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAmW2RhdGEtdmFsdWU9JzUnXTo6YmVmb3JlIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogZGFyay4kaDUtZm9udC1zaXplO1xuICAgICAgICAgIH1cblxuICAgICAgICAgICZbZGF0YS12YWx1ZT0nNiddOjpiZWZvcmUge1xuICAgICAgICAgICAgZm9udC1zaXplOiBkYXJrLiRoNi1mb250LXNpemU7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgJi5xbC1mb250IC5xbC1waWNrZXItaXRlbSB7XG4gICAgICAgICAgJltkYXRhLXZhbHVlPSdzZXJpZiddOjpiZWZvcmUge1xuICAgICAgICAgICAgZm9udC1mYW1pbHk6IGRhcmsuJGZvbnQtZmFtaWx5LXNlcmlmO1xuICAgICAgICAgIH1cblxuICAgICAgICAgICZbZGF0YS12YWx1ZT0nbW9ub3NwYWNlJ106OmJlZm9yZSB7XG4gICAgICAgICAgICBmb250LWZhbWlseTogZGFyay4kZm9udC1mYW1pbHktbW9ub3NwYWNlO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgICYucWwtc2l6ZSAucWwtcGlja2VyLWl0ZW0ge1xuICAgICAgICAgICZbZGF0YS12YWx1ZT0nc21hbGwnXTo6YmVmb3JlIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogZGFyay4kZm9udC1zaXplLXNtO1xuICAgICAgICAgIH1cblxuICAgICAgICAgICZbZGF0YS12YWx1ZT0nbGFyZ2UnXTo6YmVmb3JlIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogZGFyay4kZm9udC1zaXplLWxnO1xuICAgICAgICAgIH1cblxuICAgICAgICAgICZbZGF0YS12YWx1ZT0naHVnZSddOjpiZWZvcmUge1xuICAgICAgICAgICAgZm9udC1zaXplOiBkYXJrLiRmb250LXNpemUteGw7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgLnFsLXNub3cge1xuICAgICAgLnFsLWVkaXRvci5xbC1ibGFuazo6YmVmb3JlIHtcbiAgICAgICAgcGFkZGluZzogMCBkYXJrLiRpbnB1dC1idG4tcGFkZGluZy14O1xuICAgICAgfVxuXG4gICAgICAmLnFsLWNvbnRhaW5lciB7XG4gICAgICAgIGJvcmRlcjogMC4wNjI1cmVtIHNvbGlkIGRhcmsuJGlucHV0LWJvcmRlci1jb2xvcjtcbiAgICAgIH1cblxuICAgICAgLnFsLWVkaXRvciB7XG4gICAgICAgIHBhZGRpbmc6IGRhcmsuJGlucHV0LWJ0bi1wYWRkaW5nLXg7XG4gICAgICAgIGJhY2tncm91bmQ6IGRhcmsuJGNhcmQtYmc7XG4gICAgICB9XG5cbiAgICAgIC5xbC1waWNrZXItb3B0aW9ucyB7XG4gICAgICAgIGJhY2tncm91bmQ6IGRhcmsuJGNhcmQtYmc7XG4gICAgICB9XG5cbiAgICAgICYucWwtdG9vbGJhcixcbiAgICAgICYgLnFsLXRvb2xiYXIge1xuICAgICAgICBib3JkZXI6IDAuMDYyNXJlbSBzb2xpZCBkYXJrLiRpbnB1dC1ib3JkZXItY29sb3I7XG4gICAgICAgIGJhY2tncm91bmQ6IGRhcmsuJGNhcmQtYmc7XG5cbiAgICAgICAgQG1lZGlhIChwb2ludGVyOiBjb2Fyc2UpIHtcbiAgICAgICAgICBidXR0b246aG92ZXI6bm90KC5xbC1hY3RpdmUpIHtcbiAgICAgICAgICAgIGNvbG9yOiBkYXJrLiRib2R5LWNvbG9yO1xuICAgICAgICAgIH1cbiAgICAgICAgICBidXR0b246aG92ZXI6bm90KC5xbC1hY3RpdmUpIC5xbC1zdHJva2UsXG4gICAgICAgICAgYnV0dG9uOmhvdmVyOm5vdCgucWwtYWN0aXZlKSAucWwtc3Ryb2tlLW1pdGVyIHtcbiAgICAgICAgICAgIHN0cm9rZTogZGFyay4kYm9keS1jb2xvcjtcbiAgICAgICAgICB9XG4gICAgICAgICAgYnV0dG9uOmhvdmVyOm5vdCgucWwtYWN0aXZlKSAucWwtZmlsbCxcbiAgICAgICAgICBidXR0b246aG92ZXI6bm90KC5xbC1hY3RpdmUpIC5xbC1zdHJva2UucWwtZmlsbCB7XG4gICAgICAgICAgICBmaWxsOiBkYXJrLiRib2R5LWNvbG9yO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAmLnFsLXRvb2xiYXIgKyAucWwtY29udGFpbmVyLnFsLXNub3cge1xuICAgICAgICBib3JkZXItdG9wOiAwO1xuICAgICAgfVxuXG4gICAgICAucWwtc3Ryb2tlLW1pdGVyIHtcbiAgICAgICAgc3Ryb2tlOiBkYXJrLiRib2R5LWNvbG9yO1xuICAgICAgfVxuXG4gICAgICAucWwtc3Ryb2tlIHtcbiAgICAgICAgc3Ryb2tlOiBkYXJrLiRib2R5LWNvbG9yO1xuICAgICAgfVxuXG4gICAgICAucWwtZmlsbCxcbiAgICAgIC5xbC1zdHJva2UucWwtZmlsbCB7XG4gICAgICAgIGZpbGw6IGRhcmsuJGJvZHktY29sb3I7XG4gICAgICB9XG5cbiAgICAgIC5xbC1waWNrZXIge1xuICAgICAgICBjb2xvcjogZGFyay4kYm9keS1jb2xvcjtcblxuICAgICAgICAmLnFsLWV4cGFuZGVkIC5xbC1waWNrZXItb3B0aW9ucyB7XG4gICAgICAgICAgYm9yZGVyLWNvbG9yOiBkYXJrLiRkcm9wZG93bi1ib3JkZXItY29sb3I7XG4gICAgICAgIH1cblxuICAgICAgICAmLnFsLWV4cGFuZGVkIC5xbC1waWNrZXItbGFiZWwge1xuICAgICAgICAgIGJvcmRlci1jb2xvcjogZGFyay4kaW5wdXQtYm9yZGVyLWNvbG9yO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC5xbC10b29sdGlwIHtcbiAgICAgICAgYm9yZGVyOiBkYXJrLiRkcm9wZG93bi1ib3JkZXItd2lkdGggc29saWQgZGFyay4kZHJvcGRvd24tYm9yZGVyLWNvbG9yO1xuICAgICAgICBjb2xvcjogZGFyay4kYm9keS1jb2xvcjtcbiAgICAgICAgYm94LXNoYWRvdzogZGFyay4kZHJvcGRvd24tYm94LXNoYWRvdztcblxuICAgICAgICBpbnB1dFt0eXBlPSd0ZXh0J10ge1xuICAgICAgICAgIGJvcmRlcjogMC4wNjI1cmVtIHNvbGlkIGRhcmsuJGlucHV0LWJvcmRlci1jb2xvcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIC5xbC1idWJibGUgLnFsLXRvb2x0aXAge1xuICAgICAgYm9yZGVyLXJhZGl1czogZGFyay4kYm9yZGVyLXJhZGl1cztcbiAgICAgIHotaW5kZXg6IGRhcmsuJHppbmRleC1tZW51LWZpeGVkICsgMTA7XG4gICAgfVxuICB9XG59XG4iLCIkZW5hYmxlLWxpZ2h0LXN0eWxlOiB0cnVlO1xuJGVuYWJsZS1kYXJrLXN0eWxlOiB0cnVlO1xuJGVuYWJsZS1ydGwtc3VwcG9ydDogdHJ1ZTtcblxuQG1peGluIGFwcC1sdHIoJGhhcy1jaGlsZDogdHJ1ZSkge1xuICBAaWYgJGVuYWJsZS1ydGwtc3VwcG9ydCB7XG4gICAgQGlmICRoYXMtY2hpbGQge1xuICAgICAgaHRtbDpub3QoW2Rpcj0ncnRsJ10pICYge1xuICAgICAgICBAY29udGVudDtcbiAgICAgIH1cbiAgICB9IEBlbHNlIHtcbiAgICAgIGh0bWw6bm90KFtkaXI9J3J0bCddKSB7XG4gICAgICAgIEBjb250ZW50O1xuICAgICAgfVxuICAgIH1cbiAgfSBAZWxzZSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuQG1peGluIGFwcC1sdHItc3R5bGUoKSB7XG4gIEBpZiAkZW5hYmxlLXJ0bC1zdXBwb3J0IHtcbiAgICAmOm5vdChbZGlyPSdydGwnXSkge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9IEBlbHNlIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG5AbWl4aW4gYXBwLXJ0bCgkaGFzLWNoaWxkOiB0cnVlKSB7XG4gIEBpZiAkZW5hYmxlLXJ0bC1zdXBwb3J0IHtcbiAgICBAaWYgJGhhcy1jaGlsZCB7XG4gICAgICBbZGlyPSdydGwnXSAmIHtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgICB9XG4gICAgfSBAZWxzZSB7XG4gICAgICBbZGlyPSdydGwnXSB7XG4gICAgICAgIEBjb250ZW50O1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5AbWl4aW4gYXBwLXJ0bC1zdHlsZSgpIHtcbiAgQGlmICRlbmFibGUtcnRsLXN1cHBvcnQge1xuICAgICZbZGlyPSdydGwnXSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH1cbn1cbiIsIi8vIFZhcmlhYmxlc1xuLy9cbi8vIFZhcmlhYmxlcyBzaG91bGQgZm9sbG93IHRoZSBgJGNvbXBvbmVudC1zdGF0ZS1wcm9wZXJ0eS1zaXplYCBmb3JtdWxhIGZvclxuLy8gY29uc2lzdGVudCBuYW1pbmcuIEV4OiAkbmF2LWxpbmstZGlzYWJsZWQtY29sb3IgYW5kICRtb2RhbC1jb250ZW50LWJveC1zaGFkb3cteHMuXG4vL1xuLy8gKEMpIEN1c3RvbSB2YXJpYWJsZXMgZm9yIGV4dGVuZGVkIGNvbXBvbmVudHMgb2YgYm9vdHN0cmFwIG9ubHlcblxuLy8gKiBDb2xvciBzeXN0ZW1cbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcblxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGdyYXktY29sb3ItdmFyaWFibGVzXG4kd2hpdGU6ICNmZmYgIWRlZmF1bHQ7XG4kYmxhY2s6ICMyNjNjNTUgIWRlZmF1bHQ7XG4kZ3JheS0yNTogcmdiYSgkYmxhY2ssIDAuMDI1KSAhZGVmYXVsdDsgLy8gKEMpXG4kZ3JheS01MDogcmdiYSgkYmxhY2ssIDAuMDYpICFkZWZhdWx0OyAvLyAoQylcbiRncmF5LTEwMDogcmdiYSgkYmxhY2ssIDAuMSkgIWRlZmF1bHQ7XG4kZ3JheS0yMDA6IHJnYmEoJGJsYWNrLCAwLjIpICFkZWZhdWx0O1xuJGdyYXktMzAwOiByZ2JhKCRibGFjaywgMC4zKSAhZGVmYXVsdDtcbiRncmF5LTQwMDogcmdiYSgkYmxhY2ssIDAuNCkgIWRlZmF1bHQ7XG4kZ3JheS01MDA6IHJnYmEoJGJsYWNrLCAwLjUpICFkZWZhdWx0O1xuJGdyYXktNjAwOiByZ2JhKCRibGFjaywgMC42KSAhZGVmYXVsdDtcbiRncmF5LTcwMDogcmdiYSgkYmxhY2ssIDAuNykgIWRlZmF1bHQ7XG4kZ3JheS04MDA6IHJnYmEoJGJsYWNrLCAwLjgpICFkZWZhdWx0O1xuJGdyYXktOTAwOiByZ2JhKCRibGFjaywgMC45KSAhZGVmYXVsdDtcbi8vIHNjc3MtZG9jcy1lbmQgZ3JheS1jb2xvci12YXJpYWJsZXNcblxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGdyYXktY29sb3JzLW1hcFxuJGdyYXlzOiAoXG4gICcyNSc6ICRncmF5LTI1LFxuICAnNTAnOiAkZ3JheS01MFxuKSAhZGVmYXVsdDtcbi8vIHNjc3MtZG9jcy1lbmQgZ3JheS1jb2xvcnMtbWFwXG5cbi8vIHNjc3MtZG9jcy1zdGFydCBjb2xvci12YXJpYWJsZXNcbiRibHVlOiAjNWE4ZGVlICFkZWZhdWx0O1xuJGluZGlnbzogIzY2MTBmMiAhZGVmYXVsdDtcbiRwdXJwbGU6ICM2ZjQyYzEgIWRlZmF1bHQ7XG4kcGluazogI2U4M2U4YyAhZGVmYXVsdDtcbiRyZWQ6ICNmZjViNWMgIWRlZmF1bHQ7XG4kb3JhbmdlOiAjZmQ3ZTE0ICFkZWZhdWx0O1xuJHllbGxvdzogI2ZkYWM0MSAhZGVmYXVsdDtcbiRncmVlbjogIzM5ZGE4YSAhZGVmYXVsdDtcbiR0ZWFsOiAjMjBjOTk3ICFkZWZhdWx0O1xuJGN5YW46ICMwMGNmZGQgIWRlZmF1bHQ7XG4vLyBzY3NzLWRvY3MtZW5kIGNvbG9yLXZhcmlhYmxlc1xuXG4vLyBzY3NzLWRvY3Mtc3RhcnQgdGhlbWUtY29sb3ItdmFyaWFibGVzXG4kcHJpbWFyeTogJGJsdWUgIWRlZmF1bHQ7XG4kc2Vjb25kYXJ5OiAjNjk4MDlhICFkZWZhdWx0O1xuJHN1Y2Nlc3M6ICRncmVlbiAhZGVmYXVsdDtcbiRpbmZvOiAkY3lhbiAhZGVmYXVsdDtcbiR3YXJuaW5nOiAkeWVsbG93ICFkZWZhdWx0O1xuJGRhbmdlcjogJHJlZCAhZGVmYXVsdDtcbiRsaWdodDogI2U1ZTllZCAhZGVmYXVsdDtcbiRkYXJrOiAjNDk1NTYzICFkZWZhdWx0O1xuJGdyYXk6ICRncmF5LTUwMCAhZGVmYXVsdDsgLy8gKEMpXG4vLyBzY3NzLWRvY3MtZW5kIHRoZW1lLWNvbG9yLXZhcmlhYmxlc1xuXG4vLyBzY3NzLWRvY3Mtc3RhcnQgdGhlbWUtY29sb3JzLW1hcFxuJHRoZW1lLWNvbG9yczogKFxuICAncHJpbWFyeSc6ICRwcmltYXJ5LFxuICAnc2Vjb25kYXJ5JzogJHNlY29uZGFyeSxcbiAgJ3N1Y2Nlc3MnOiAkc3VjY2VzcyxcbiAgJ2luZm8nOiAkaW5mbyxcbiAgJ3dhcm5pbmcnOiAkd2FybmluZyxcbiAgJ2Rhbmdlcic6ICRkYW5nZXIsXG4gICdsaWdodCc6ICRsaWdodCxcbiAgJ2RhcmsnOiAkZGFyayxcbiAgJ2dyYXknOiAkZ3JheVxuKSAhZGVmYXVsdDtcbi8vIHNjc3MtZG9jcy1lbmQgdGhlbWUtY29sb3JzLW1hcFxuXG4kY29sb3Itc2NoZW1lOiAnbGlnaHQnICFkZWZhdWx0OyAvLyAoQylcbi8vIFRoZSBjb250cmFzdCByYXRpbyB0byByZWFjaCBhZ2FpbnN0IHdoaXRlLCB0byBkZXRlcm1pbmUgaWYgY29sb3IgY2hhbmdlcyBmcm9tIFwibGlnaHRcIiB0byBcImRhcmtcIi4gQWNjZXB0YWJsZSB2YWx1ZXMgZm9yIFdDQUcgMi4wIGFyZSAzLCA0LjUgYW5kIDcuXG4vLyBTZWUgaHR0cHM6Ly93d3cudzMub3JnL1RSL1dDQUcyMC8jdmlzdWFsLWF1ZGlvLWNvbnRyYXN0LWNvbnRyYXN0XG4kbWluLWNvbnRyYXN0LXJhdGlvOiAxLjYgIWRlZmF1bHQ7XG5cbi8vIGZ1c3YtZGlzYWJsZVxuJGJsdWUtNjAwOiBzaGFkZS1jb2xvcigkYmx1ZSwgMTAlKSAhZGVmYXVsdDtcbiRibHVlLTcwMDogc2hhZGUtY29sb3IoJGJsdWUsIDE1JSkgIWRlZmF1bHQ7XG4kYmx1ZS04MDA6IHNoYWRlLWNvbG9yKCRibHVlLCAyMCUpICFkZWZhdWx0O1xuJGJsdWUtOTAwOiBzaGFkZS1jb2xvcigkYmx1ZSwgMjUlKSAhZGVmYXVsdDtcblxuJGdyZWVuLTYwMDogc2hhZGUtY29sb3IoJGdyZWVuLCAxMCUpICFkZWZhdWx0O1xuJGdyZWVuLTcwMDogc2hhZGUtY29sb3IoJGdyZWVuLCAxNSUpICFkZWZhdWx0O1xuJGdyZWVuLTgwMDogc2hhZGUtY29sb3IoJGdyZWVuLCAyMCUpICFkZWZhdWx0O1xuJGdyZWVuLTkwMDogc2hhZGUtY29sb3IoJGdyZWVuLCAyNSUpICFkZWZhdWx0O1xuXG4kY3lhbi02MDA6IHNoYWRlLWNvbG9yKCRjeWFuLCAxMCUpICFkZWZhdWx0O1xuJGN5YW4tNzAwOiBzaGFkZS1jb2xvcigkY3lhbiwgMTUlKSAhZGVmYXVsdDtcbiRjeWFuLTgwMDogc2hhZGUtY29sb3IoJGN5YW4sIDIwJSkgIWRlZmF1bHQ7XG4kY3lhbi05MDA6IHNoYWRlLWNvbG9yKCRjeWFuLCAyNSUpICFkZWZhdWx0O1xuXG4keWVsbG93LTYwMDogc2hhZGUtY29sb3IoJHllbGxvdywgMTAlKSAhZGVmYXVsdDtcbiR5ZWxsb3ctNzAwOiBzaGFkZS1jb2xvcigkeWVsbG93LCAxNSUpICFkZWZhdWx0O1xuJHllbGxvdy04MDA6IHNoYWRlLWNvbG9yKCR5ZWxsb3csIDIwJSkgIWRlZmF1bHQ7XG4keWVsbG93LTkwMDogc2hhZGUtY29sb3IoJHllbGxvdywgMjUlKSAhZGVmYXVsdDtcblxuJHJlZC02MDA6IHNoYWRlLWNvbG9yKCRyZWQsIDEwJSkgIWRlZmF1bHQ7XG4kcmVkLTcwMDogc2hhZGUtY29sb3IoJHJlZCwgMTUlKSAhZGVmYXVsdDtcbiRyZWQtODAwOiBzaGFkZS1jb2xvcigkcmVkLCAyMCUpICFkZWZhdWx0O1xuJHJlZC05MDA6IHNoYWRlLWNvbG9yKCRyZWQsIDI1JSkgIWRlZmF1bHQ7XG5cbi8vICogT3B0aW9uc1xuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuXG4kZW5hYmxlLW5lZ2F0aXZlLW1hcmdpbnM6IHRydWUgIWRlZmF1bHQ7XG4kZW5hYmxlLXZhbGlkYXRpb24taWNvbnM6IGZhbHNlICFkZWZhdWx0O1xuXG4vLyBQcmVmaXggZm9yIDpyb290IENTUyB2YXJpYWJsZXNcbiR2YXJpYWJsZS1wcmVmaXg6IGJzLSAhZGVmYXVsdDtcblxuLy8gKiBTcGFjaW5nXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cbiRzcGFjZXI6IDFyZW0gIWRlZmF1bHQ7XG5cbiRzaXplcy1weDogKFxuICBweC0yMDogMjBweCxcbiAgcHgtMzA6IDMwcHgsXG4gIHB4LTQwOiA0MHB4LFxuICBweC01MDogNTBweCxcbiAgcHgtNzU6IDc1cHgsXG4gIHB4LTEwMDogMTAwcHgsXG4gIHB4LTE1MDogMTUwcHgsXG4gIHB4LTIwMDogMjAwcHgsXG4gIHB4LTI1MDogMjUwcHgsXG4gIHB4LTMwMDogMzAwcHgsXG4gIHB4LTM1MDogMzUwcHgsXG4gIHB4LTQwMDogNDAwcHgsXG4gIHB4LTUwMDogNTAwcHgsXG4gIHB4LTYwMDogNjAwcHgsXG4gIHB4LTcwMDogNzAwcHgsXG4gIHB4LTgwMDogODAwcHgsXG4gIGF1dG86IGF1dG9cbikgIWRlZmF1bHQ7IC8vIChDKVxuXG4kcmdiYS10by1oZXgtYmc6ICNmZmYgIWRlZmF1bHQ7IC8vIChDKVxuJHJnYmEtdG8taGV4LWJnLWludmVydGVkOiAjMDAwICFkZWZhdWx0OyAvLyAoQylcblxuLy8gKiBCb2R5XG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cbiRib2R5LWJnOiAjZjJmMmY2ICFkZWZhdWx0O1xuJGJvZHktY29sb3I6IHJnYmEtdG8taGV4KCRncmF5LTcwMCwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcbiRyZ2JhLXRvLWhleC1iZzogI2ZmZiAhZGVmYXVsdDsgLy8gKEMpXG4kcmdiYS10by1oZXgtYmctaW52ZXJ0ZWQ6ICMwMDAgIWRlZmF1bHQ7IC8vIChDKVxuXG4vLyAqIExpbmtzXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cbiRsaW5rLWNvbG9yOiAkcHJpbWFyeSAhZGVmYXVsdDtcbiRsaW5rLWRlY29yYXRpb246IG5vbmUgIWRlZmF1bHQ7XG4kbGluay1zaGFkZS1wZXJjZW50YWdlOiAxMCUgIWRlZmF1bHQ7XG4kbGluay1ob3Zlci1jb2xvcjogc2hpZnQtY29sb3IoJGxpbmstY29sb3IsICRsaW5rLXNoYWRlLXBlcmNlbnRhZ2UpICFkZWZhdWx0O1xuJGxpbmstaG92ZXItZGVjb3JhdGlvbjogbnVsbCAhZGVmYXVsdDtcblxuLy8gKiBHcmlkXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cbi8vIEdyaWQgY29udGFpbmVyc1xuXG4vLyBzY3NzLWRvY3Mtc3RhcnQgY29udGFpbmVyLW1heC13aWR0aHNcbiRjb250YWluZXItbWF4LXdpZHRoczogKFxuICBzbTogNTQwcHgsXG4gIG1kOiA3MjBweCxcbiAgbGc6IDk2MHB4LFxuICB4bDogMTE0MHB4LFxuICB4eGw6IDE0NDBweCAvLyBDdXN0b20geHhsIHNpemVcbikgIWRlZmF1bHQ7XG4vLyBzY3NzLWRvY3MtZW5kIGNvbnRhaW5lci1tYXgtd2lkdGhzXG5cbiRncmlkLWd1dHRlci13aWR0aDogMS42MjVyZW0gIWRlZmF1bHQ7XG4kY29udGFpbmVyLXBhZGRpbmcteDogMS44NzVyZW0gIWRlZmF1bHQ7IC8vIChDKVxuJGNvbnRhaW5lci1wYWRkaW5nLXgtc206IDFyZW0gIWRlZmF1bHQ7IC8vIChDKVxuJGNvbnRhaW5lci1wYWRkaW5nLXk6IDEuODc1cmVtICFkZWZhdWx0OyAvLyAoQylcblxuLy8gKiBDb21wb25lbnRzXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cbi8vIHNjc3MtZG9jcy1zdGFydCBib3JkZXItdmFyaWFibGVzXG4kYm9yZGVyLXdpZHRoOiAxcHggIWRlZmF1bHQ7XG4kYm9yZGVyLWNvbG9yOiByZ2JhLXRvLWhleCgkZ3JheS0yMDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7XG4kYm9yZGVyLWlubmVyLWNvbG9yOiByZ2JhLXRvLWhleCgkZ3JheS0xMDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7IC8vIChDKVxuLy8gc2Nzcy1kb2NzLWVuZCBib3JkZXItdmFyaWFibGVzXG5cbi8vIHNjc3MtZG9jcy1zdGFydCBib3JkZXItcmFkaXVzLXZhcmlhYmxlc1xuJGJvcmRlci1yYWRpdXM6IDAuMjVyZW0gIWRlZmF1bHQ7XG4kYm9yZGVyLXJhZGl1cy14bDogMC4zNzVyZW0gIWRlZmF1bHQ7IC8vIChDKVxuJGJvcmRlci1yYWRpdXMtbGc6IDAuMzEyNXJlbSAhZGVmYXVsdDtcbiRib3JkZXItcmFkaXVzLXNtOiAwLjE4NzVyZW0gIWRlZmF1bHQ7XG4kYm9yZGVyLXJhZGl1cy14czogMC4xMjVyZW0gIWRlZmF1bHQ7IC8vIChDKVxuLy8gc2Nzcy1kb2NzLWVuZCBib3JkZXItcmFkaXVzLXZhcmlhYmxlc1xuXG4vLyBzY3NzLWRvY3Mtc3RhcnQgYm94LXNoYWRvdy12YXJpYWJsZXNcbiRib3gtc2hhZG93OiAwIDAuMjVyZW0gMXJlbSByZ2JhKHJnYmEtdG8taGV4KCRncmF5LTUwMCwgJHJnYmEtdG8taGV4LWJnKSwgMC40NSkgIWRlZmF1bHQ7XG4kYm94LXNoYWRvdy1zbTogMCAwLjEyNXJlbSAwLjI1cmVtIHJnYmEocmdiYS10by1oZXgoJGdyYXktNTAwLCAkcmdiYS10by1oZXgtYmcpLCAwLjQpICFkZWZhdWx0O1xuJGJveC1zaGFkb3ctbGc6IDAgMC42MjVyZW0gMS4yNXJlbSByZ2JhKHJnYmEtdG8taGV4KCRncmF5LTUwMCwgJHJnYmEtdG8taGV4LWJnKSwgMC41KSAhZGVmYXVsdDtcbi8vIHNjc3MtZG9jcy1lbmQgYm94LXNoYWRvdy12YXJpYWJsZXNcblxuJGNvbXBvbmVudC1hY3RpdmUtY29sb3I6ICR3aGl0ZSAhZGVmYXVsdDtcbiRjb21wb25lbnQtYWN0aXZlLWJnOiByZ2JhKCRwcmltYXJ5LCAwLjA4KSAhZGVmYXVsdDtcblxuJGNvbXBvbmVudC1saW5lLWhlaWdodDogMS41NCAhZGVmYXVsdDsgLy8gKEMpXG4kY29tcG9uZW50LWZvY3VzLXNoYWRvdy13aWR0aDogMnB4ICFkZWZhdWx0OyAvLyAoQylcblxuJGZsb2F0aW5nLWNvbXBvbmVudC1ib3JkZXItY29sb3I6IHRyYW5zcGFyZW50ICFkZWZhdWx0OyAvLyAoQylcbiRmbG9hdGluZy1jb21wb25lbnQtc2hhZG93OiAkYm94LXNoYWRvdyAhZGVmYXVsdDsgLy8gKEMpXG5cbiRoci1jb2xvcjogcmdiYS10by1oZXgoJGdyYXktMjAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xuJGhyLW9wYWNpdHk6IDEgIWRlZmF1bHQ7XG4kYm9yZGVyZWQtcm93LWJvcmRlci1jb2xvcjogJGhyLWNvbG9yICFkZWZhdWx0OyAvLyAoQylcblxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGNhcmV0LXZhcmlhYmxlc1xuJGNhcmV0LXdpZHRoOiAwLjQ1ZW0gIWRlZmF1bHQ7XG4kY2FyZXQtdmVydGljYWwtYWxpZ246IG1pZGRsZSAhZGVmYXVsdDtcbiRjYXJldC1zcGFjaW5nOiAwLjc1ZW0gIWRlZmF1bHQ7XG4vLyBzY3NzLWRvY3MtZW5kIGNhcmV0LXZhcmlhYmxlc1xuXG4vLyAqIFR5cG9ncmFwaHlcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcblxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGZvbnQtdmFyaWFibGVzXG4kZm9udC1mYW1pbHktc2Fucy1zZXJpZjogJ0lCTSBQbGV4IFNhbnMnLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsICdTZWdvZSBVSScsICdPeHlnZW4nLCAnVWJ1bnR1JywgJ0NhbnRhcmVsbCcsXG4gICdGaXJhIFNhbnMnLCAnRHJvaWQgU2FucycsICdIZWx2ZXRpY2EgTmV1ZScsIHNhbnMtc2VyaWYgIWRlZmF1bHQ7XG4kZm9udC1mYW1pbHktc2VyaWY6ICdSdWJpaycsICdUaW1lcyBOZXcgUm9tYW4nLCBzZXJpZiAhZGVmYXVsdDsgLy8gKEMpXG4kZm9udC1mYW1pbHktbW9ub3NwYWNlOiAnU0ZNb25vLVJlZ3VsYXInLCBNZW5sbywgTW9uYWNvLCBDb25zb2xhcywgJ0xpYmVyYXRpb24gTW9ubycsICdDb3VyaWVyIE5ldycsIG1vbm9zcGFjZSAhZGVmYXVsdDtcbi8vIHN0eWxlbGludC1lbmFibGUgdmFsdWUta2V5d29yZC1jYXNlXG4kZm9udC1mYW1pbHktYmFzZTogdmFyKC0tI3skdmFyaWFibGUtcHJlZml4fWZvbnQtc2Fucy1zZXJpZikgIWRlZmF1bHQ7XG4kZm9udC1mYW1pbHktY29kZTogdmFyKC0tI3skdmFyaWFibGUtcHJlZml4fWZvbnQtbW9ub3NwYWNlKSAhZGVmYXVsdDtcblxuLy8gJGZvbnQtc2l6ZS1yb290IGVmZmVjdHMgdGhlIHZhbHVlIG9mIGByZW1gLCB3aGljaCBpcyB1c2VkIGZvciBhcyB3ZWxsIGZvbnQgc2l6ZXMsIHBhZGRpbmdzIGFuZCBtYXJnaW5zXG4vLyAkZm9udC1zaXplLWJhc2UgZWZmZWN0cyB0aGUgZm9udCBzaXplIG9mIHRoZSBib2R5IHRleHRcbiRmb250LXNpemUtcm9vdDogMTZweCAhZGVmYXVsdDtcbiRmb250LXNpemUtYmFzZTogMC45Mzc1cmVtICFkZWZhdWx0OyAvLyBBc3N1bWVzIHRoZSBicm93c2VyIGRlZmF1bHQsIHR5cGljYWxseSBgMTZweGBcbiRmb250LXNpemUteGw6IDEuMjVyZW0gIWRlZmF1bHQ7IC8vIChDKVxuJGZvbnQtc2l6ZS1sZzogMS4wNjNyZW0gIWRlZmF1bHQ7XG4kZm9udC1zaXplLXNtOiAwLjgxM3JlbSAhZGVmYXVsdDtcbiRmb250LXNpemUteHM6IDAuNzVyZW0gIWRlZmF1bHQ7IC8vIChDKVxuXG4kZm9udC13ZWlnaHQtc2VtaWJvbGQ6IDYwMCAhZGVmYXVsdDsgLy8gKEMpXG4kZm9udC13ZWlnaHQtYm9sZGVyOiA5MDAgIWRlZmF1bHQ7XG4kZm9udC13ZWlnaHQtbGlnaHRlcjogMTAwICFkZWZhdWx0O1xuXG4kbGluZS1oZWlnaHQtYmFzZTogMS40NyAhZGVmYXVsdDtcbiRsaW5lLWhlaWdodC14bDogMS41ICFkZWZhdWx0OyAvLyAoQylcbiRsaW5lLWhlaWdodC1sZzogMS41ICFkZWZhdWx0O1xuJGxpbmUtaGVpZ2h0LXNtOiAxLjIgIWRlZmF1bHQ7XG4kbGluZS1oZWlnaHQteHM6IDEgIWRlZmF1bHQ7IC8vIChDKVxuXG4kaDEtZm9udC1zaXplOiAyLjM3NXJlbSAhZGVmYXVsdDtcbiRoMi1mb250LXNpemU6IDJyZW0gIWRlZmF1bHQ7XG4kaDMtZm9udC1zaXplOiAxLjYyNXJlbSAhZGVmYXVsdDtcbiRoNC1mb250LXNpemU6IDEuMzc1cmVtICFkZWZhdWx0O1xuJGg1LWZvbnQtc2l6ZTogMS4xMjVyZW0gIWRlZmF1bHQ7XG4kaDYtZm9udC1zaXplOiAkZm9udC1zaXplLWJhc2UgIWRlZmF1bHQ7XG4vLyBzY3NzLWRvY3MtZW5kIGZvbnQtdmFyaWFibGVzXG5cbi8vIHNjc3MtZG9jcy1zdGFydCBoZWFkaW5ncy12YXJpYWJsZXNcbiRoZWFkaW5ncy1tYXJnaW4tYm90dG9tOiAkc3BhY2VyICFkZWZhdWx0O1xuJGhlYWRpbmdzLWZvbnQtZmFtaWx5OiAkZm9udC1mYW1pbHktc2VyaWYgIWRlZmF1bHQ7XG4kaGVhZGluZ3MtZm9udC13ZWlnaHQ6IDUwMCAhZGVmYXVsdDtcbiRoZWFkaW5ncy1saW5lLWhlaWdodDogMS4xICFkZWZhdWx0O1xuJGhlYWRpbmdzLWNvbG9yOiByZ2JhLXRvLWhleCgkZ3JheS04MDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7XG4vLyBzY3NzLWRvY3MtZW5kIGhlYWRpbmdzLXZhcmlhYmxlc1xuXG4vLyBzY3NzLWRvY3Mtc3RhcnQgZGlzcGxheS1oZWFkaW5nc1xuJGRpc3BsYXktZm9udC13ZWlnaHQ6IDUwMCAhZGVmYXVsdDtcbi8vIHNjc3MtZG9jcy1lbmQgZGlzcGxheS1oZWFkaW5nc1xuXG4vLyBzY3NzLWRvY3Mtc3RhcnQgdHlwZS12YXJpYWJsZXNcbiRsZWFkLWZvbnQtc2l6ZTogJGZvbnQtc2l6ZS1iYXNlICogMS4xMjUgIWRlZmF1bHQ7XG4kbGVhZC1mb250LXdlaWdodDogNDAwICFkZWZhdWx0O1xuXG4kdGlueS1mb250LXNpemU6IDcwJSAhZGVmYXVsdDsgLy8gKEMpXG4kc21hbGwtZm9udC1zaXplOiA4NSUgIWRlZmF1bHQ7XG4kYmlnLWZvbnQtc2l6ZTogMTEyJSAhZGVmYXVsdDsgLy8gKEMpXG4kbGFyZ2UtZm9udC1zaXplOiAxNTAlICFkZWZhdWx0OyAvLyAoQylcbiR4bGFyZ2UtZm9udC1zaXplOiAxNzAlICFkZWZhdWx0OyAvLyAoQylcblxuJHRleHQtbXV0ZWQ6IHJnYmEtdG8taGV4KCRncmF5LTQwMCwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcbiR0ZXh0LW11dGVkLWhvdmVyOiByZ2JhLXRvLWhleCgkZ3JheS02MDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7IC8vIChDKVxuXG4kdGV4dC1saWdodDogcmdiYS10by1oZXgoJGdyYXktNDAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0OyAvLyAoQylcbiR0ZXh0LWxpZ2h0ZXI6IHJnYmEtdG8taGV4KCRncmF5LTMwMCwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDsgLy8gKEMpXG4kdGV4dC1saWdodGVzdDogcmdiYS10by1oZXgoJGdyYXktMjAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0OyAvLyAoQylcbi8vIHNjc3MtZG9jcy1lbmQgdHlwZS12YXJpYWJsZXNcblxuLy8gKiBaLWluZGV4IG1hc3RlciBsaXN0XG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cbiR6aW5kZXgtbWVudS1maXhlZDogMTA4MCAhZGVmYXVsdDtcbiR6aW5kZXgtbW9kYWw6IDEwOTAgIWRlZmF1bHQ7XG4kemluZGV4LW1vZGFsLWJhY2tkcm9wOiAkemluZGV4LW1vZGFsIC0gMSAhZGVmYXVsdDtcbi8vICR6aW5kZXgtbW9kYWwtdG9wOiAxMDkwICFkZWZhdWx0OyAvLyAoQylcbiR6aW5kZXgtb2ZmY2FudmFzOiAxMDkwICFkZWZhdWx0O1xuJHppbmRleC1vZmZjYW52YXMtYmFja2Ryb3A6ICR6aW5kZXgtb2ZmY2FudmFzIC0gMSAhZGVmYXVsdDtcbiR6aW5kZXgtbGF5b3V0LW1vYmlsZTogMTEwMCAhZGVmYXVsdDsgLy8gKEMpXG4kemluZGV4LXBvcG92ZXI6IDEwOTEgIWRlZmF1bHQ7XG4kemluZGV4LXRvYXN0OiAxMDk1ICFkZWZhdWx0OyAvLyAoQylcbiR6aW5kZXgtdG9vbHRpcDogMTA5OSAhZGVmYXVsdDtcbiR6aW5kZXgtbm90aWZpY2F0aW9uOiA5OTk5OTkgIWRlZmF1bHQ7IC8vIChDKVxuXG4vLyAqIFRhYmxlc1xuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuXG4vLyBzY3NzLWRvY3Mtc3RhcnQgdGFibGUtdmFyaWFibGVzXG4kdGFibGUtY2VsbC1wYWRkaW5nLXk6IDAuNjI1cmVtICFkZWZhdWx0O1xuJHRhYmxlLWNlbGwtcGFkZGluZy14OiAxLjVyZW0gIWRlZmF1bHQ7XG4kdGFibGUtY2VsbC1wYWRkaW5nLXktc206IDAuMzEyNXJlbSAhZGVmYXVsdDtcbiR0YWJsZS1jZWxsLXBhZGRpbmcteC1zbTogMC42MjVyZW0gIWRlZmF1bHQ7XG5cbiR0YWJsZS1jZWxsLXZlcnRpY2FsLWFsaWduOiBtaWRkbGUgIWRlZmF1bHQ7XG5cbiR0YWJsZS10aC1mb250LXdlaWdodDogJGZvbnQtd2VpZ2h0LXNlbWlib2xkICFkZWZhdWx0O1xuXG4kdGFibGUtc3RyaXBlZC1iZy1mYWN0b3I6IDAuMDMgIWRlZmF1bHQ7XG4kdGFibGUtc3RyaXBlZC1iZzogcmdiYS10by1oZXgocmdiYSgkYmxhY2ssICR0YWJsZS1zdHJpcGVkLWJnLWZhY3RvciksICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7XG5cbiR0YWJsZS1ob3Zlci1iZy1mYWN0b3I6IDAuMDYgIWRlZmF1bHQ7XG4kdGFibGUtaG92ZXItYmc6IHJnYmEtdG8taGV4KHJnYmEoJGJsYWNrLCAkdGFibGUtaG92ZXItYmctZmFjdG9yKSwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcblxuJHRhYmxlLWJvcmRlci1mYWN0b3I6IDAuMiAhZGVmYXVsdDtcbiR0YWJsZS1ib3JkZXItd2lkdGg6ICRib3JkZXItd2lkdGggIWRlZmF1bHQ7XG4kdGFibGUtYm9yZGVyLWNvbG9yOiAkYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xuJHRhYmxlLWdyb3VwLXNlcGFyYXRvci1jb2xvcjogJHRhYmxlLWJvcmRlci1jb2xvciAhZGVmYXVsdDtcblxuLy8gKiBCdXR0b25zICsgRm9ybXNcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbi8vPyB2YWx1ZXMgYXJlIG5vdCBhcyBwZXIgZGVzaWduIGFzIHdlIG5lZWQgdG8gc2V0IHNhbWUgaGVpZ2h0IHdpdGggaWNvbnMgYW5kIHdpdGhvdXQgaWNvbnNcbiRpbnB1dC1idG4tcGFkZGluZy15OiAwLjQ2OXJlbSAhZGVmYXVsdDtcbiRpbnB1dC1idG4tcGFkZGluZy14OiAxLjM3NXJlbSAhZGVmYXVsdDtcbiRpbnB1dC1idG4tZm9udC1zaXplOiAkZm9udC1zaXplLWJhc2UgIWRlZmF1bHQ7XG4kaW5wdXQtYnRuLWxpbmUtaGVpZ2h0OiAxLjQgIWRlZmF1bHQ7XG5cbiRpbnB1dC1idG4tZm9jdXMtd2lkdGg6IDAuMDYyNXJlbSAhZGVmYXVsdDtcbiRpbnB1dC1idG4tZm9jdXMtY29sb3Itb3BhY2l0eTogMC4xOCAhZGVmYXVsdDtcbiRpbnB1dC1idG4tZm9jdXMtY29sb3I6IHJnYmEoJGdyYXktNTAwLCAkaW5wdXQtYnRuLWZvY3VzLWNvbG9yLW9wYWNpdHkpICFkZWZhdWx0O1xuJGlucHV0LWJ0bi1mb2N1cy1ibHVyOiAwLjE4NzVyZW0gIWRlZmF1bHQ7XG4kaW5wdXQtYnRuLWZvY3VzLWJveC1zaGFkb3c6IDAgJGlucHV0LWJ0bi1mb2N1cy13aWR0aCAkaW5wdXQtYnRuLWZvY3VzLWJsdXIgMCAkaW5wdXQtYnRuLWZvY3VzLWNvbG9yICFkZWZhdWx0O1xuXG4kaW5wdXQtYnRuLXBhZGRpbmcteS14czogMC4xcmVtICFkZWZhdWx0OyAvLyAoQylcbiRpbnB1dC1idG4tcGFkZGluZy14LXhzOiAwLjVyZW0gIWRlZmF1bHQ7IC8vIChDKVxuJGlucHV0LWJ0bi1mb250LXNpemUteHM6ICRmb250LXNpemUteHMgIWRlZmF1bHQ7IC8vIChDKVxuJGlucHV0LWJ0bi1saW5lLWhlaWdodC14czogJGxpbmUtaGVpZ2h0LXhzICFkZWZhdWx0OyAvLyAoQylcblxuJGlucHV0LWJ0bi1wYWRkaW5nLXktc206IDAuMTg3cmVtICFkZWZhdWx0O1xuJGlucHV0LWJ0bi1wYWRkaW5nLXgtc206IDFyZW0gIWRlZmF1bHQ7XG4kaW5wdXQtYnRuLWZvbnQtc2l6ZS1zbTogJGZvbnQtc2l6ZS1zbSAhZGVmYXVsdDtcbiRpbnB1dC1idG4tbGluZS1oZWlnaHQtc206ICRsaW5lLWhlaWdodC1zbSAhZGVmYXVsdDtcblxuJGlucHV0LWJ0bi1wYWRkaW5nLXktbGc6IDAuNzRyZW0gIWRlZmF1bHQ7XG4kaW5wdXQtYnRuLXBhZGRpbmcteC1sZzogMi4xODc1cmVtICFkZWZhdWx0O1xuJGlucHV0LWJ0bi1mb250LXNpemUtbGc6ICRmb250LXNpemUtbGcgIWRlZmF1bHQ7XG4kaW5wdXQtYnRuLWxpbmUtaGVpZ2h0LWxnOiAkbGluZS1oZWlnaHQtbGcgIWRlZmF1bHQ7XG5cbiRpbnB1dC1idG4tcGFkZGluZy15LXhsOiAwLjg3NXJlbSAhZGVmYXVsdDsgLy8gKEMpXG4kaW5wdXQtYnRuLXBhZGRpbmcteC14bDogMi4xMjVyZW0gIWRlZmF1bHQ7IC8vIChDKVxuJGlucHV0LWJ0bi1mb250LXNpemUteGw6ICRmb250LXNpemUteGwgIWRlZmF1bHQ7IC8vIChDKVxuJGlucHV0LWJ0bi1saW5lLWhlaWdodC14bDogJGxpbmUtaGVpZ2h0LXhsICFkZWZhdWx0OyAvLyAoQylcblxuLy8gKiBCdXR0b25zXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cbiRidG4tcGFkZGluZy15LXhzOiAkaW5wdXQtYnRuLXBhZGRpbmcteS14cyAhZGVmYXVsdDsgLy8gKEMpXG4kYnRuLXBhZGRpbmcteC14czogJGlucHV0LWJ0bi1wYWRkaW5nLXgteHMgIWRlZmF1bHQ7IC8vIChDKVxuJGJ0bi1mb250LXNpemUteHM6ICRpbnB1dC1idG4tZm9udC1zaXplLXhzICFkZWZhdWx0OyAvLyAoQylcblxuJGJ0bi1wYWRkaW5nLXkteGw6ICRpbnB1dC1idG4tcGFkZGluZy15LXhsICFkZWZhdWx0OyAvLyAoQylcbiRidG4tcGFkZGluZy14LXhsOiAkaW5wdXQtYnRuLXBhZGRpbmcteC14bCAhZGVmYXVsdDsgLy8gKEMpXG4kYnRuLWZvbnQtc2l6ZS14bDogJGlucHV0LWJ0bi1mb250LXNpemUteGwgIWRlZmF1bHQ7IC8vIChDKVxuXG4kYnRuLWxpbmUtaGVpZ2h0LXhzOiAkaW5wdXQtYnRuLWxpbmUtaGVpZ2h0LXhzICFkZWZhdWx0OyAvLyAoQylcbiRidG4tbGluZS1oZWlnaHQtc206ICRsaW5lLWhlaWdodC1zbTsgLy8oQylcbiRidG4tbGluZS1oZWlnaHQtbGc6ICRsaW5lLWhlaWdodC1sZzsgLy8oQylcbiRidG4tbGluZS1oZWlnaHQteGw6ICRpbnB1dC1idG4tbGluZS1oZWlnaHQteGwgIWRlZmF1bHQ7IC8vIChDKVxuXG4kYnRuLWJveC1zaGFkb3c6ICRib3gtc2hhZG93LXNtICFkZWZhdWx0O1xuJGJ0bi1ob3Zlci1ib3gtc2hhZG93OiAkYm94LXNoYWRvdyAhZGVmYXVsdDsgLy8gKEMpXG4kYnRuLWZvY3VzLWJveC1zaGFkb3c6IG5vbmUgIWRlZmF1bHQ7XG4kYnRuLWFjdGl2ZS1ib3gtc2hhZG93OiBub25lICFkZWZhdWx0O1xuXG4kYnRuLWJvcmRlci1yYWRpdXMteHM6ICRib3JkZXItcmFkaXVzLXhzICFkZWZhdWx0OyAvLyAoQylcbiRidG4tYm9yZGVyLXJhZGl1cy14bDogJGJvcmRlci1yYWRpdXMteGwgIWRlZmF1bHQ7IC8vIChDKVxuXG4kYnRuLXRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2UtaW4tb3V0ICFkZWZhdWx0O1xuXG4kYnRuLWxhYmVsLWJnLXNoYWRlLWFtb3VudDogODQlICFkZWZhdWx0OyAvLyAoQylcbiRidG4tbGFiZWwtYmctdGludC1hbW91bnQ6IDg0JSAhZGVmYXVsdDsgLy8gKEMpXG5cbiRidG4tbGFiZWwtZGlzYWJsZWQtYmctc2hhZGUtYW1vdW50OiA3NSUgIWRlZmF1bHQ7IC8vIChDKVxuJGJ0bi1sYWJlbC1kaXNhYmxlZC1iZy10aW50LWFtb3VudDogNzUlICFkZWZhdWx0OyAvLyAoQylcblxuJGJ0bi1ob3Zlci1iZy1zaGFkZS1hbW91bnQ6IDIwJSAhZGVmYXVsdDtcbiRidG4taG92ZXItYmctdGludC1hbW91bnQ6IDIwJSAhZGVmYXVsdDtcbiRidG4taG92ZXItYm9yZGVyLXNoYWRlLWFtb3VudDogMjAlICFkZWZhdWx0O1xuJGJ0bi1ob3Zlci1ib3JkZXItdGludC1hbW91bnQ6IDIwJSAhZGVmYXVsdDtcbiRidG4tYWN0aXZlLWJnLXNoYWRlLWFtb3VudDogMTUlICFkZWZhdWx0O1xuJGJ0bi1hY3RpdmUtYmctdGludC1hbW91bnQ6IDE1JSAhZGVmYXVsdDtcbiRidG4tYWN0aXZlLWJvcmRlci1zaGFkZS1hbW91bnQ6IDE1JSAhZGVmYXVsdDtcbiRidG4tYWN0aXZlLWJvcmRlci10aW50LWFtb3VudDogMTUlICFkZWZhdWx0O1xuXG4vLyAqIEZvcm1zXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cbi8vIHNjc3MtZG9jcy1zdGFydCBmb3JtLXRleHQtdmFyaWFibGVzXG4kZm9ybS10ZXh0LW1hcmdpbi10b3A6IDAuMjVyZW0gIWRlZmF1bHQ7XG4kZm9ybS10ZXh0LWZvbnQtc2l6ZTogJHNtYWxsLWZvbnQtc2l6ZSAhZGVmYXVsdDtcbiRmb3JtLXRleHQtY29sb3I6ICR0ZXh0LWxpZ2h0ICFkZWZhdWx0O1xuLy8gc2Nzcy1kb2NzLWVuZCBmb3JtLXRleHQtdmFyaWFibGVzXG5cbi8vIHNjc3MtZG9jcy1zdGFydCBmb3JtLWxhYmVsLXZhcmlhYmxlc1xuJGZvcm0tbGFiZWwtbWFyZ2luLWJvdHRvbTogMC4yNXJlbSAhZGVmYXVsdDtcbiRmb3JtLWxhYmVsLWZvbnQtc2l6ZTogMC43NXJlbSAhZGVmYXVsdDtcbiRmb3JtLWxhYmVsLWZvbnQtd2VpZ2h0OiA0MDAgIWRlZmF1bHQ7XG4kZm9ybS1sYWJlbC1sZXR0ZXItc3BhY2luZzogaW5oZXJpdCAhZGVmYXVsdDsgLy8oQylcbiRmb3JtLWxhYmVsLXRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2UgIWRlZmF1bHQ7IC8vKEMpXG4vLyBzY3NzLWRvY3MtZW5kIGZvcm0tbGFiZWwtdmFyaWFibGVzXG5cbi8vIHNjc3MtZG9jcy1zdGFydCBmb3JtLWlucHV0LXZhcmlhYmxlc1xuJGlucHV0LXBhZGRpbmcteDogMC43MzVyZW0gIWRlZmF1bHQ7XG4kaW5wdXQtbGluZS1oZWlnaHQ6ICRpbnB1dC1idG4tbGluZS1oZWlnaHQgIWRlZmF1bHQ7XG5cbiRpbnB1dC1wYWRkaW5nLXktc206IDAuMjVyZW0gIWRlZmF1bHQ7XG4kaW5wdXQtcGFkZGluZy14LXNtOiAwLjZyZW0gIWRlZmF1bHQ7XG5cbiRpbnB1dC1wYWRkaW5nLXktbGc6IDAuNzVyZW0gIWRlZmF1bHQ7XG4kaW5wdXQtcGFkZGluZy14LWxnOiAwLjg1cmVtICFkZWZhdWx0O1xuXG4kaW5wdXQtYmc6ICR3aGl0ZSAhZGVmYXVsdDtcbiRpbnB1dC1kaXNhYmxlZC1iZzogcmdiYS10by1oZXgocmdiYS10by1oZXgocmdiYSgkZ3JheS01MDAsIDAuMSksICRyZ2JhLXRvLWhleC1iZyksICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7XG5cbiRpbnB1dC1jb2xvcjogJGJvZHktY29sb3IgIWRlZmF1bHQ7XG4kaW5wdXQtYm9yZGVyLWNvbG9yOiByZ2JhLXRvLWhleCgkZ3JheS0yMDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7XG5cbiRpbnB1dC1mb2N1cy1ib3JkZXItY29sb3Itc2NhbGU6IDQwJTsgLy8oQylcbiRpbnB1dC1mb2N1cy1ib3JkZXItY29sb3I6IHRpbnQtY29sb3IoJGNvbXBvbmVudC1hY3RpdmUtYmcsICRpbnB1dC1mb2N1cy1ib3JkZXItY29sb3Itc2NhbGUpICFkZWZhdWx0O1xuLy8gJGlucHV0LWZvY3VzLWJveC1zaGFkb3c6IDAgMXB4IDNweCAwIHJnYmEoJGdyYXktNTAwLCAwLjE4KSAhZGVmYXVsdDtcblxuJGlucHV0LXBsYWNlaG9sZGVyLXRyYW5zaXRpb246IGFsbCAwLjI1cyBlYXNlO1xuJGlucHV0LXBsYWNlaG9sZGVyLXRyYW5zZm9ybTogdHJhbnNsYXRlKDVweCk7XG4kaW5wdXQtcGxhY2Vob2xkZXItY29sb3I6IHJnYmEtdG8taGV4KCRncmF5LTQwMCwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcblxuJGlucHV0LWhlaWdodC1pbm5lcjogcHgtdG8tcmVtKFxuICBmbG9vcihyZW0tdG8tcHgoKCRpbnB1dC1idG4tZm9udC1zaXplICogJGlucHV0LWJ0bi1saW5lLWhlaWdodCkgKyAoJGlucHV0LWJ0bi1wYWRkaW5nLXkgKiAyKSkpXG4pICFkZWZhdWx0O1xuJGlucHV0LWhlaWdodC1pbm5lci1zbTogcHgtdG8tcmVtKFxuICBmbG9vcihyZW0tdG8tcHgoKCRpbnB1dC1idG4tZm9udC1zaXplLXNtICogJGlucHV0LWJ0bi1saW5lLWhlaWdodC1zbSkgKyAoJGlucHV0LWJ0bi1wYWRkaW5nLXktc20gKiAyKSkpXG4pICFkZWZhdWx0OyAvLyAoQylcbiRpbnB1dC1oZWlnaHQtaW5uZXItbGc6IHB4LXRvLXJlbShcbiAgZmxvb3IocmVtLXRvLXB4KCgkZm9udC1zaXplLWxnICogJGxpbmUtaGVpZ2h0LWxnKSArICgkaW5wdXQtYnRuLXBhZGRpbmcteS1sZyAqIDIpKSlcbikgIWRlZmF1bHQ7IC8vIChDKVxuLy8gc2Nzcy1kb2NzLWVuZCBmb3JtLWlucHV0LXZhcmlhYmxlc1xuXG4vLyBzY3NzLWRvY3Mtc3RhcnQgZm9ybS1jaGVjay12YXJpYWJsZXNcbiRmb3JtLWNoZWNrLWlucHV0LXdpZHRoOiAxLjJlbSAhZGVmYXVsdDtcbiRmb3JtLWRhdGF0YWJsZXMtY2hlY2staW5wdXQtc2l6ZTogMThweCAhZGVmYXVsdDsgLy8gKEMpIEZvciBkYXRhdGFibGVzIHdpdGggY2hlY2tib3gtIHVwZGF0ZSBhY2NvcmRpbmcgdG8gJGZvcm0tY2hlY2staW5wdXQtd2lkdGhcbiRmb3JtLWNoZWNrLW1pbi1oZWlnaHQ6ICRmb250LXNpemUtYmFzZSAqICRsaW5lLWhlaWdodC1iYXNlICFkZWZhdWx0O1xuJGZvcm0tY2hlY2staW5wdXQtYm9yZGVyOiAxcHggc29saWQgcmdiYS10by1oZXgoJGdyYXktMzAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xuXG4kZm9ybS1jaGVjay1sYWJlbC1jdXJzb3I6IHBvaW50ZXIgIWRlZmF1bHQ7XG4kZm9ybS1jaGVjay1sYWJlbC1kaXNhYmxlZC1jb2xvcjogJHRleHQtbXV0ZWQgIWRlZmF1bHQ7IC8vIChDKVxuXG4kZm9ybS1jaGVjay1pbnB1dC1jaGVja2VkLWNvbG9yOiAkY29tcG9uZW50LWFjdGl2ZS1jb2xvciAhZGVmYXVsdDtcbiRmb3JtLWNoZWNrLWlucHV0LWNoZWNrZWQtYmctaW1hZ2U6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCw8c3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgdmlld0JveD0nMCAwIDIwIDIwJz48cGF0aCBmaWxsPSdub25lJyBzdHJva2U9JyN7JGZvcm0tY2hlY2staW5wdXQtY2hlY2tlZC1jb2xvcn0nIHN0cm9rZS1saW5lY2FwPSdyb3VuZCcgc3Ryb2tlLWxpbmVqb2luPSdyb3VuZCcgc3Ryb2tlLXdpZHRoPScyJyBkPSdNNiAxMGwzIDNsNi02Jy8+PC9zdmc+XCIpICFkZWZhdWx0O1xuJGZvcm0tY2hlY2stcmFkaW8tY2hlY2tlZC1iZy1pbWFnZTogdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLDxzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB2aWV3Qm94PSctNCAtNCA4IDgnPjxjaXJjbGUgcj0nMS41JyBmaWxsPScjeyRmb3JtLWNoZWNrLWlucHV0LWNoZWNrZWQtY29sb3J9Jy8+PC9zdmc+XCIpICFkZWZhdWx0O1xuJGZvcm0tY2hlY2staW5wdXQtZm9jdXMtYm94LXNoYWRvdzogMCAwIDAgMC4xMnJlbSByZ2JhKHJnYmEtdG8taGV4KCRncmF5LTUwMCwgJHJnYmEtdG8taGV4LWJnKSwgMzAlKSAhZGVmYXVsdDtcblxuJGZvcm0tY2hlY2staW5wdXQtaW5kZXRlcm1pbmF0ZS1jb2xvcjogJGNvbXBvbmVudC1hY3RpdmUtY29sb3IgIWRlZmF1bHQ7XG4kZm9ybS1jaGVjay1pbnB1dC1pbmRldGVybWluYXRlLWJnLWltYWdlOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsPHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCAyMCAyMCc+PHBhdGggZmlsbD0nbm9uZScgc3Ryb2tlPScjeyRmb3JtLWNoZWNrLWlucHV0LWluZGV0ZXJtaW5hdGUtY29sb3J9JyBzdHJva2UtbGluZWNhcD0ncm91bmQnIHN0cm9rZS1saW5lam9pbj0ncm91bmQnIHN0cm9rZS13aWR0aD0nMicgZD0nTTYgMTBoOCcvPjwvc3ZnPlwiKSAhZGVmYXVsdDtcbi8vIHNjc3MtZG9jcy1lbmQgZm9ybS1jaGVjay12YXJpYWJsZXNcblxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGZvcm0tc3dpdGNoLXZhcmlhYmxlc1xuXG4kZm9ybS1zd2l0Y2gtY29sb3I6ICRncmF5LTMwMCAhZGVmYXVsdDtcbiRmb3JtLXN3aXRjaC13aWR0aDogMmVtICFkZWZhdWx0O1xuJGZvcm0tc3dpdGNoLXBhZGRpbmctc3RhcnQ6ICRmb3JtLXN3aXRjaC13aWR0aCArIDAuNWVtICFkZWZhdWx0O1xuXG4kZm9ybS1zd2l0Y2gtY2hlY2tlZC1iZy1wb3NpdGlvbi1ydGw6IGxlZnQgY2VudGVyICFkZWZhdWx0OyAvLyhDKVxuLy8gc2Nzcy1kb2NzLWVuZCBmb3JtLXN3aXRjaC12YXJpYWJsZXNcblxuLy9pbnB1dC1ncm91cC12YXJpYWJsZXNcbiRpbnB1dC1ncm91cC1hZGRvbi1jb2xvcjogJGlucHV0LWNvbG9yICFkZWZhdWx0O1xuJGlucHV0LWdyb3VwLWFkZG9uLWJnOiAkaW5wdXQtYmcgIWRlZmF1bHQ7XG4kaW5wdXQtZ3JvdXAtYWRkb24tYm9yZGVyLWNvbG9yOiAkaW5wdXQtYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xuLy8gc2Nzcy1kb2NzLWVuZCBpbnB1dC1ncm91cC12YXJpYWJsZXNcblxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGZvcm0tc2VsZWN0LXZhcmlhYmxlc1xuLy8gJGZvcm0tc2VsZWN0LXBhZGRpbmcteTogJGlucHV0LWJ0bi1wYWRkaW5nLXkgIWRlZmF1bHQ7XG4vLyAkZm9ybS1zZWxlY3QtcGFkZGluZy14OiAkaW5wdXQtYnRuLXBhZGRpbmcteCAhZGVmYXVsdDtcbiRmb3JtLXNlbGVjdC1wYWRkaW5nLXk6ICRpbnB1dC1idG4tcGFkZGluZy15ICFkZWZhdWx0O1xuJGZvcm0tc2VsZWN0LXBhZGRpbmcteDogJGlucHV0LXBhZGRpbmcteCAhZGVmYXVsdDtcbiRmb3JtLXNlbGVjdC1pbmRpY2F0b3ItcGFkZGluZzogJGZvcm0tc2VsZWN0LXBhZGRpbmcteCArIDFyZW0gIWRlZmF1bHQ7XG4kZm9ybS1zZWxlY3QtZGlzYWJsZWQtY29sb3I6ICRib2R5LWNvbG9yICFkZWZhdWx0O1xuJGZvcm0tc2VsZWN0LWRpc2FibGVkLWJnOiAkaW5wdXQtZGlzYWJsZWQtYmcgIWRlZmF1bHQ7XG4kZm9ybS1zZWxlY3QtYmctc2l6ZTogMTdweCAxMnB4ICFkZWZhdWx0O1xuJGZvcm0tc2VsZWN0LWluZGljYXRvci1jb2xvcjogJGdyYXktNDAwICFkZWZhdWx0O1xuJGZvcm0tc2VsZWN0LWluZGljYXRvcjogdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLDxzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB2aWV3Qm94PScwIDAgMTYgMTYnPjxwYXRoIGZpbGw9J25vbmUnIHN0cm9rZT0nI3skZm9ybS1zZWxlY3QtaW5kaWNhdG9yLWNvbG9yfScgc3Ryb2tlLWxpbmVjYXA9J3JvdW5kJyBzdHJva2UtbGluZWpvaW49J3JvdW5kJyBzdHJva2Utd2lkdGg9JzInIGQ9J00yIDVsNiA2IDYtNicvPjwvc3ZnPlwiKSAhZGVmYXVsdDtcbiRmb3JtLXNlbGVjdC1pbmRpY2F0b3ItcnRsOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsPHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCAxNiAxNic+PHBhdGggZmlsbD0nbm9uZScgc3Ryb2tlPScjeyRmb3JtLXNlbGVjdC1pbmRpY2F0b3ItY29sb3J9JyBzdHJva2UtbGluZWNhcD0ncm91bmQnIHN0cm9rZS1saW5lam9pbj0ncm91bmQnIHN0cm9rZS13aWR0aD0nMicgZD0nTTIgNWw2IDYgNi02Jy8+PC9zdmc+XCIpICFkZWZhdWx0OyAvLyAoQylcblxuJGZvcm0tc2VsZWN0LWZvY3VzLWJveC1zaGFkb3c6ICRpbnB1dC1idG4tZm9jdXMtYm94LXNoYWRvdyAhZGVmYXVsdDtcblxuJGZvcm0tc2VsZWN0LXBhZGRpbmcteS1zbTogJGlucHV0LWJ0bi1wYWRkaW5nLXktc20gIWRlZmF1bHQ7XG4kZm9ybS1zZWxlY3QtcGFkZGluZy14LXNtOiAkaW5wdXQtcGFkZGluZy14LXNtICFkZWZhdWx0O1xuXG4kZm9ybS1zZWxlY3QtcGFkZGluZy15LWxnOiAkaW5wdXQtYnRuLXBhZGRpbmcteS1sZyAhZGVmYXVsdDtcbiRmb3JtLXNlbGVjdC1wYWRkaW5nLXgtbGc6ICRpbnB1dC1wYWRkaW5nLXgtbGcgIWRlZmF1bHQ7XG4vLyBzY3NzLWRvY3MtZW5kIGZvcm0tc2VsZWN0LXZhcmlhYmxlc1xuXG4vLyBzY3NzLWRvY3Mtc3RhcnQgZm9ybS1yYW5nZS12YXJpYWJsZXNcbiRmb3JtLXJhbmdlLXRyYWNrLWhlaWdodDogMC4zNzVyZW0gIWRlZmF1bHQ7XG4kZm9ybS1yYW5nZS10cmFjay1iZzogcmdiYS10by1oZXgoJGdyYXktMTAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xuJGZvcm0tcmFuZ2UtdHJhY2stYm94LXNoYWRvdzogbm9uZSAhZGVmYXVsdDtcbiRmb3JtLXJhbmdlLXRyYWNrLWRpc2FibGVkLWJnOiAkZ3JheS01MCAhZGVmYXVsdDsgLy8gKEMpXG5cbiRmb3JtLXJhbmdlLXRodW1iLXdpZHRoOiAwLjg3NXJlbSAhZGVmYXVsdDtcbiRmb3JtLXJhbmdlLXRodW1iLWhlaWdodDogJGZvcm0tcmFuZ2UtdGh1bWItd2lkdGggIWRlZmF1bHQ7XG4kZm9ybS1yYW5nZS10aHVtYi1iZzogJHdoaXRlICFkZWZhdWx0O1xuJGZvcm0tcmFuZ2UtdGh1bWItYm94LXNoYWRvdzogMCAwIDZweCAwICRncmF5LTIwMCAhZGVmYXVsdDtcbiRmb3JtLXJhbmdlLXRodW1iLWZvY3VzLWJveC1zaGFkb3c6IDAgMCA4cHggMHB4ICRncmF5LTIwMCAhZGVmYXVsdDtcbiRmb3JtLXJhbmdlLXRodW1iLWFjdGl2ZS1iZzogJGZvcm0tcmFuZ2UtdGh1bWItYmcgIWRlZmF1bHQ7XG4kZm9ybS1yYW5nZS10aHVtYi1kaXNhYmxlZC1iZzogcmdiYS10by1oZXgoJGdyYXktMTAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xuLy8gc2Nzcy1kb2NzLWVuZCBmb3JtLXJhbmdlLXZhcmlhYmxlc1xuXG4vLyBzY3NzLWRvY3Mtc3RhcnQgZm9ybS1mbG9hdGluZy12YXJpYWJsZXNcbiRmb3JtLWZsb2F0aW5nLWxhYmVsLW9wYWNpdHk6IDAuNzUgIWRlZmF1bHQ7XG4kZm9ybS1mbG9hdGluZy10cmFuc2l0aW9uOiBvcGFjaXR5IDAuMnMgZWFzZS1pbi1vdXQsIHRyYW5zZm9ybSAwLjJzIGVhc2UtaW4tb3V0ICFkZWZhdWx0O1xuJGZvcm0tZmxvYXRpbmctbGFiZWwtdHJhbnNmb3JtLXJ0bDogc2NhbGUoMC44NSkgdHJhbnNsYXRlWSgtMC41cmVtKSB0cmFuc2xhdGVYKC0wLjE1cmVtKSAhZGVmYXVsdDsgLy8gKEMpXG4vLyBzY3NzLWRvY3MtZW5kIGZvcm0tZmxvYXRpbmctdmFyaWFibGVzXG5cbi8vIEZvcm0gdmFsaWRhdGlvblxuXG4vLyBzY3NzLWRvY3Mtc3RhcnQgZm9ybS1mZWVkYmFjay12YXJpYWJsZXNcbiRmb3JtLWZlZWRiYWNrLXZhbGlkLWNvbG9yOiAkc3VjY2VzcyAhZGVmYXVsdDtcbiRmb3JtLWZlZWRiYWNrLWludmFsaWQtY29sb3I6ICRkYW5nZXIgIWRlZmF1bHQ7XG5cbiRmb3JtLXNlbGVjdC1mZWVkYmFjay1pY29uLXBhZGRpbmc6ICRmb3JtLXNlbGVjdC1pbmRpY2F0b3ItcGFkZGluZyArICRpbnB1dC1oZWlnaHQtaW5uZXIgIWRlZmF1bHQ7IC8vIChDKVxuJGZvcm0tc2VsZWN0LWZlZWRiYWNrLWljb24tcGFkZGluZy1zbTogJGZvcm0tc2VsZWN0LWluZGljYXRvci1wYWRkaW5nICsgJGlucHV0LWhlaWdodC1pbm5lci1zbSAhZGVmYXVsdDsgLy8gKEMpXG4kZm9ybS1zZWxlY3QtZmVlZGJhY2staWNvbi1wYWRkaW5nLWxnOiAkZm9ybS1zZWxlY3QtaW5kaWNhdG9yLXBhZGRpbmcgKyAkaW5wdXQtaGVpZ2h0LWlubmVyLWxnICFkZWZhdWx0OyAvLyAoQylcbi8vIHNjc3MtZG9jcy1lbmQgZm9ybS1mZWVkYmFjay12YXJpYWJsZXNcblxuLy8gKiBOYXZzXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cbiRuYXYtc3BhY2VyOiAwLjEyNXJlbSAhZGVmYXVsdDsgLy8gKEMpXG5cbiRuYXYtbGluay1wYWRkaW5nLXk6IDAuNDY5cmVtICFkZWZhdWx0O1xuJG5hdi1saW5rLXBhZGRpbmcteDogMS4zNzVyZW0gIWRlZmF1bHQ7XG4kbmF2LWxpbmstY29sb3I6ICRoZWFkaW5ncy1jb2xvciAhZGVmYXVsdDtcbiRuYXYtbGluay1kaXNhYmxlZC1jb2xvcjogJHRleHQtbXV0ZWQgIWRlZmF1bHQ7XG4kbmF2LWxpbmstbGluZS1oZWlnaHQ6ICRjb21wb25lbnQtbGluZS1oZWlnaHQgIWRlZmF1bHQ7IC8vIChDKVxuXG4kbmF2LWxpbmstcGFkZGluZy15LWxnOiAwLjg3NXJlbSAhZGVmYXVsdDsgLy8gKEMpXG4kbmF2LWxpbmstcGFkZGluZy14LWxnOiAxLjMxMjVyZW0gIWRlZmF1bHQ7IC8vIChDKVxuJG5hdi1saW5rLWxpbmUtaGVpZ2h0LWxnOiAkbGluZS1oZWlnaHQtbGcgIWRlZmF1bHQ7IC8vIChDKVxuXG4kbmF2LWxpbmstcGFkZGluZy15LXNtOiAwLjMxMjVyZW0gIWRlZmF1bHQ7IC8vIChDKVxuJG5hdi1saW5rLXBhZGRpbmcteC1zbTogMC44NzVyZW0gIWRlZmF1bHQ7IC8vIChDKVxuJG5hdi1saW5rLWxpbmUtaGVpZ2h0LXNtOiAkbGluZS1oZWlnaHQtc20gIWRlZmF1bHQ7IC8vIChDKVxuXG4kbmF2LXRhYnMtYm9yZGVyLWNvbG9yOiAkYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xuJG5hdi10YWJzLWxpbmstaG92ZXItYm9yZGVyLWNvbG9yOiAkZ3JheS0xMDAgIWRlZmF1bHQ7XG4kbmF2LXRhYnMtbGluay1hY3RpdmUtY29sb3I6ICRuYXYtbGluay1jb2xvciAhZGVmYXVsdDtcbiRuYXYtdGFicy1saW5rLWFjdGl2ZS1iZzogJHdoaXRlICFkZWZhdWx0O1xuJG5hdi10YWJzLWxpbmstYWN0aXZlLWJvcmRlci1jb2xvcjogJG5hdi10YWJzLWJvcmRlci1jb2xvciAhZGVmYXVsdDtcblxuJG5hdi1waWxscy1saW5rLWFjdGl2ZS1jb2xvcjogJHdoaXRlICFkZWZhdWx0O1xuJG5hdi1waWxscy1saW5rLWFjdGl2ZS1iZzogdHJhbnNwYXJlbnQgIWRlZmF1bHQ7XG5cbi8vICogTmF2YmFyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cbiRuYXZiYXItdG9nZ2xlci1wYWRkaW5nLXk6IDAuNXJlbSAhZGVmYXVsdDtcbiRuYXZiYXItdG9nZ2xlci1wYWRkaW5nLXg6IDAuN3JlbSAhZGVmYXVsdDtcbiRuYXZiYXItdG9nZ2xlci1mb250LXNpemU6IDAuNjI1cmVtICFkZWZhdWx0O1xuXG4kbmF2YmFyLWRhcmstY29sb3I6IHJnYmEoJHdoaXRlLCAwLjgpICFkZWZhdWx0O1xuJG5hdmJhci1kYXJrLWhvdmVyLWNvbG9yOiAkd2hpdGUgIWRlZmF1bHQ7XG4kbmF2YmFyLWRhcmstYWN0aXZlLWNvbG9yOiAkd2hpdGUgIWRlZmF1bHQ7XG4kbmF2YmFyLWRhcmstZGlzYWJsZWQtY29sb3I6IHJnYmEoJHdoaXRlLCAwLjQpICFkZWZhdWx0O1xuXG4kbmF2YmFyLWxpZ2h0LWNvbG9yOiAkZ3JheS01MDAgIWRlZmF1bHQ7XG4kbmF2YmFyLWxpZ2h0LWhvdmVyLWNvbG9yOiAkYm9keS1jb2xvciAhZGVmYXVsdDtcbiRuYXZiYXItbGlnaHQtYWN0aXZlLWNvbG9yOiAkYm9keS1jb2xvciAhZGVmYXVsdDtcbiRuYXZiYXItbGlnaHQtZGlzYWJsZWQtY29sb3I6ICRncmF5LTMwMCAhZGVmYXVsdDtcbiRuYXZiYXItbGlnaHQtdG9nZ2xlci1ib3JkZXItY29sb3I6IHJnYmEoJGJsYWNrLCAwLjA2KSAhZGVmYXVsdDtcblxuLy8gKiBEcm9wZG93bnNcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcblxuJGRyb3Bkb3duLXBhZGRpbmcteTogMC4zMTI1cmVtICFkZWZhdWx0O1xuJGRyb3Bkb3duLWZvbnQtc2l6ZTogJGZvbnQtc2l6ZS1iYXNlICFkZWZhdWx0O1xuJGRyb3Bkb3duLWJnOiAkd2hpdGUgIWRlZmF1bHQ7XG4kZHJvcGRvd24tYm9yZGVyLWNvbG9yOiAkZmxvYXRpbmctY29tcG9uZW50LWJvcmRlci1jb2xvciAhZGVmYXVsdDtcbiRkcm9wZG93bi1ib3JkZXItd2lkdGg6IDAgIWRlZmF1bHQ7XG4kZHJvcGRvd24tYm9yZGVyLXJhZGl1czogJGJvcmRlci1yYWRpdXMtbGcgIWRlZmF1bHQ7XG4kZHJvcGRvd24tZGl2aWRlci1iZzogJGJvcmRlci1jb2xvciAhZGVmYXVsdDtcbiRkcm9wZG93bi1kaXZpZGVyLW1hcmdpbi15OiAkc3BhY2VyICogMC4zMTI1ICFkZWZhdWx0O1xuJGRyb3Bkb3duLWJveC1zaGFkb3c6ICRmbG9hdGluZy1jb21wb25lbnQtc2hhZG93ICFkZWZhdWx0O1xuXG4kZHJvcGRvd24taW5uZXItYm9yZGVyLXJhZGl1czogMCAhZGVmYXVsdDtcblxuJGRyb3Bkb3duLWxpbmstY29sb3I6ICRib2R5LWNvbG9yICFkZWZhdWx0O1xuJGRyb3Bkb3duLWxpbmstaG92ZXItY29sb3I6ICRkcm9wZG93bi1saW5rLWNvbG9yICFkZWZhdWx0O1xuJGRyb3Bkb3duLWxpbmstaG92ZXItYmc6ICRncmF5LTUwICFkZWZhdWx0O1xuJGRyb3Bkb3duLWxpbmstbGluZS1oZWlnaHQ6ICRjb21wb25lbnQtbGluZS1oZWlnaHQgIWRlZmF1bHQ7IC8vIChDKVxuXG4kZHJvcGRvd24tbGluay1hY3RpdmUtY29sb3I6ICRwcmltYXJ5ICFkZWZhdWx0O1xuJGRyb3Bkb3duLWxpbmstYWN0aXZlLWJnOiByZ2JhKCRwcmltYXJ5LCAwLjA4KSAhZGVmYXVsdDtcblxuJGRyb3Bkb3duLWl0ZW0tcGFkZGluZy15OiAwLjVyZW0gIWRlZmF1bHQ7XG4kZHJvcGRvd24taXRlbS1wYWRkaW5nLXg6IDFyZW0gIWRlZmF1bHQ7XG5cbiRkcm9wZG93bi1saW5rLWRpc2FibGVkLWNvbG9yOiAkdGV4dC1saWdodGVyICFkZWZhdWx0O1xuJGRyb3Bkb3duLWhlYWRlci1jb2xvcjogJGhlYWRpbmdzLWNvbG9yICFkZWZhdWx0O1xuXG4vLyAqIFBhZ2luYXRpb25cbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcblxuJHBhZ2luYXRpb24tcGFkZGluZy15OiAwLjUzNXJlbSAhZGVmYXVsdDtcbiRwYWdpbmF0aW9uLXBhZGRpbmcteDogMC4zMTI1cmVtICFkZWZhdWx0O1xuJHBhZ2luYXRpb24tcGFkZGluZy15LXNtOiAwLjQxcmVtICFkZWZhdWx0O1xuJHBhZ2luYXRpb24tcGFkZGluZy14LXNtOiAwLjI1cmVtICFkZWZhdWx0O1xuJHBhZ2luYXRpb24tcGFkZGluZy15LWxnOiAwLjY2cmVtICFkZWZhdWx0O1xuJHBhZ2luYXRpb24tcGFkZGluZy14LWxnOiAwLjVyZW0gIWRlZmF1bHQ7XG5cbiRwYWdpbmF0aW9uLWNvbG9yOiAkYm9keS1jb2xvciAhZGVmYXVsdDtcbiRwYWdpbmF0aW9uLWJnOiByZ2JhLXRvLWhleChyZ2JhKCRibGFjaywgMC4wOCksICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7XG4kcGFnaW5hdGlvbi1ib3JkZXItd2lkdGg6IDBweCAhZGVmYXVsdDtcbiRwYWdpbmF0aW9uLWJvcmRlci1jb2xvcjogJGJvcmRlci1pbm5lci1jb2xvciAhZGVmYXVsdDtcblxuJHBhZ2luYXRpb24tZm9jdXMtY29sb3I6ICRwYWdpbmF0aW9uLWNvbG9yICFkZWZhdWx0O1xuJHBhZ2luYXRpb24tZm9jdXMtYmc6IHJnYmEtdG8taGV4KHJnYmEoJGJsYWNrLCAwLjE2KSwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcbiRwYWdpbmF0aW9uLWZvY3VzLWJveC1zaGFkb3c6IG5vbmUgIWRlZmF1bHQ7XG5cbiRwYWdpbmF0aW9uLWhvdmVyLWNvbG9yOiAkcGFnaW5hdGlvbi1jb2xvciAhZGVmYXVsdDtcbiRwYWdpbmF0aW9uLWhvdmVyLWJnOiAkcGFnaW5hdGlvbi1mb2N1cy1iZyAhZGVmYXVsdDtcblxuJHBhZ2luYXRpb24tZGlzYWJsZWQtY29sb3I6ICRncmF5LTMwMCAhZGVmYXVsdDtcbiRwYWdpbmF0aW9uLWRpc2FibGVkLWJnOiAkcGFnaW5hdGlvbi1iZyAhZGVmYXVsdDtcblxuJHBhZ2luYXRpb24tbGluZS1oZWlnaHQ6IDEgIWRlZmF1bHQ7IC8vIChjKVxuJHBhZ2luYXRpb24tbWFyZ2luLWVuZDogMC4zMTI1ICFkZWZhdWx0OyAvLyAoYylcbiRwYWdpbmF0aW9uLW1hcmdpbi1lbmQtc206IDAuMjUgIWRlZmF1bHQ7IC8vIChjKVxuJHBhZ2luYXRpb24tbWFyZ2luLWVuZC1sZzogMC4zNzUgIWRlZmF1bHQ7IC8vIChjKVxuXG4vLyAqIENhcmRzXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cbiRjYXJkLXNwYWNlci15OiAkc3BhY2VyICogMS4zNzUgIWRlZmF1bHQ7XG4kY2FyZC1zcGFjZXIteDogJHNwYWNlciAqIDEuMzc1ICFkZWZhdWx0O1xuJGNhcmQtdGl0bGUtc3BhY2VyLXk6ICRjYXJkLXNwYWNlci15ICFkZWZhdWx0O1xuJGNhcmQtc3BhY2VyLXgtc206IDFyZW0gIWRlZmF1bHQ7IC8vIChDKVxuJGNhcmQtYm9yZGVyLXdpZHRoOiAwICFkZWZhdWx0O1xuJGNhcmQtYm9yZGVyLWNvbG9yOiAkYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xuJGNhcmQtYm9yZGVyLXJhZGl1czogJGJvcmRlci1yYWRpdXMtbGcgIWRlZmF1bHQ7XG4kY2FyZC1pbm5lci1ib3JkZXItY29sb3I6ICRib3JkZXItaW5uZXItY29sb3IgIWRlZmF1bHQ7IC8vIChDKVxuJGNhcmQtY2FwLXBhZGRpbmcteTogJGNhcmQtc3BhY2VyLXkgIWRlZmF1bHQ7XG4kY2FyZC1jYXAtYmc6IHRyYW5zcGFyZW50ICFkZWZhdWx0O1xuJGNhcmQtYmc6ICR3aGl0ZSAhZGVmYXVsdDtcbiRjYXJkLWltZy1vdmVybGF5LXBhZGRpbmc6IDEuNXJlbSAhZGVmYXVsdDtcbiRjYXJkLWJveC1zaGFkb3c6IDAgMnB4IDE0cHggcmdiYSgkYmxhY2ssIDAuMTYpICFkZWZhdWx0O1xuXG4vLyAqIEFjY29yZGlvblxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuXG4kYWNjb3JkaW9uLXBhZGRpbmcteTogMC43OHJlbSAhZGVmYXVsdDtcbiRhY2NvcmRpb24tcGFkZGluZy14OiAxLjFyZW0gIWRlZmF1bHQ7XG4kYWNjb3JkaW9uLWNvbG9yOiAkYm9keS1jb2xvciAhZGVmYXVsdDtcbiRhY2NvcmRpb24tYmc6ICR3aGl0ZSAhZGVmYXVsdDtcbiRhY2NvcmRpb24tYm9yZGVyLXJhZGl1czogJGJvcmRlci1yYWRpdXMtbGcgIWRlZmF1bHQ7XG4kYWNjb3JkaW9uLWJ1dHRvbi1jb2xvcjogJGhlYWRpbmdzLWNvbG9yICFkZWZhdWx0O1xuXG4kYWNjb3JkaW9uLWJvcmRlci13aWR0aDogMCAhZGVmYXVsdDtcbiRhY2NvcmRpb24tYm9yZGVyLWNvbG9yOiAkYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xuJGFjY29yZGlvbi1idXR0b24tYWN0aXZlLWJnOiAkYWNjb3JkaW9uLWJnICFkZWZhdWx0O1xuJGFjY29yZGlvbi1idXR0b24tYWN0aXZlLWNvbG9yOiAkYWNjb3JkaW9uLWJ1dHRvbi1jb2xvciAhZGVmYXVsdDtcblxuJGFjY29yZGlvbi1pY29uLXdpZHRoOiAwLjc1cmVtICFkZWZhdWx0O1xuJGFjY29yZGlvbi1pY29uLWNvbG9yOiAkYWNjb3JkaW9uLWJ1dHRvbi1jb2xvciAhZGVmYXVsdDtcbiRhY2NvcmRpb24taWNvbi1hY3RpdmUtY29sb3I6ICRhY2NvcmRpb24tYnV0dG9uLWFjdGl2ZS1jb2xvciAhZGVmYXVsdDtcblxuJGFjY29yZGlvbi1pY29uLXRyYW5zZm9ybTogcm90YXRlKDkwZGVnKSAhZGVmYXVsdDtcblxuJGFjY29yZGlvbi1idXR0b24taWNvbjogdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLCUzQ3N2ZyB3aWR0aD0nMTInIGhlaWdodD0nMTInIHZpZXdCb3g9JzAgMCAxMiAxMicgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayclM0UlM0NkZWZzJTNFJTNDcGF0aCBpZD0nYScgZD0nbTEuNTMyIDEyIDYuMTgyLTYtNi4xODItNkwwIDEuNDg3IDQuNjUgNiAwIDEwLjUxM3onLyUzRSUzQy9kZWZzJTNFJTNDZyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgyLjU3MSknIGZpbGw9J25vbmUnIGZpbGwtcnVsZT0nZXZlbm9kZCclM0UlM0N1c2UgZmlsbD0nI3skYWNjb3JkaW9uLWljb24tY29sb3J9JyB4bGluazpocmVmPSclMjNhJy8lM0UlM0N1c2UgZmlsbC1vcGFjaXR5PScuMScgeGxpbms6aHJlZj0nJTIzYScvJTNFJTNDL2clM0UlM0Mvc3ZnJTNFJTBBXCIpICFkZWZhdWx0O1xuJGFjY29yZGlvbi1idXR0b24tYWN0aXZlLWljb246IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM0Nzdmcgd2lkdGg9JzEyJyBoZWlnaHQ9JzEyJyB2aWV3Qm94PScwIDAgMTIgMTInIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycgeG1sbnM6eGxpbms9J2h0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsnJTNFJTNDZGVmcyUzRSUzQ3BhdGggaWQ9J2EnIGQ9J20xLjUzMiAxMiA2LjE4Mi02LTYuMTgyLTZMMCAxLjQ4NyA0LjY1IDYgMCAxMC41MTN6Jy8lM0UlM0MvZGVmcyUzRSUzQ2cgdHJhbnNmb3JtPSd0cmFuc2xhdGUoMi41NzEpJyBmaWxsPSdub25lJyBmaWxsLXJ1bGU9J2V2ZW5vZGQnJTNFJTNDdXNlIGZpbGw9JyN7JGFjY29yZGlvbi1pY29uLWFjdGl2ZS1jb2xvcn0nIHhsaW5rOmhyZWY9JyUyM2EnLyUzRSUzQ3VzZSBmaWxsLW9wYWNpdHk9Jy4xJyB4bGluazpocmVmPSclMjNhJy8lM0UlM0MvZyUzRSUzQy9zdmclM0UlMEFcIikgIWRlZmF1bHQ7XG5cbi8vICogVG9vbHRpcHNcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcblxuJHRvb2x0aXAtZm9udC1zaXplOiAkZm9udC1zaXplLWJhc2UgIWRlZmF1bHQ7XG4kdG9vbHRpcC1iZzogJGRhcmsgIWRlZmF1bHQ7XG4kdG9vbHRpcC1vcGFjaXR5OiAxICFkZWZhdWx0O1xuJHRvb2x0aXAtYm9yZGVyLXJhZGl1czogJGJvcmRlci1yYWRpdXMtc20gIWRlZmF1bHQ7XG4kdG9vbHRpcC1wYWRkaW5nLXk6IDAuMjVyZW0gIWRlZmF1bHQ7XG4kdG9vbHRpcC1wYWRkaW5nLXg6IDAuN3JlbSAhZGVmYXVsdDtcblxuJHRvb2x0aXAtYm94LXNoYWRvdzogJGJveC1zaGFkb3ctc20gIWRlZmF1bHQ7IC8vIChDKVxuXG4vLyAqIFBvcG92ZXJzXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cbiRwb3BvdmVyLWZvbnQtc2l6ZTogJGZvbnQtc2l6ZS1iYXNlICFkZWZhdWx0O1xuJHBvcG92ZXItYmc6ICR3aGl0ZSAhZGVmYXVsdDtcbiRwb3BvdmVyLWJvcmRlci13aWR0aDogMHB4ICFkZWZhdWx0O1xuJHBvcG92ZXItYm94LXNoYWRvdzogJGZsb2F0aW5nLWNvbXBvbmVudC1zaGFkb3cgIWRlZmF1bHQ7XG5cbiRwb3BvdmVyLWhlYWRlci1iZzogdHJhbnNwYXJlbnQgIWRlZmF1bHQ7XG4kcG9wb3Zlci1oZWFkZXItcGFkZGluZy15OiAwICFkZWZhdWx0O1xuJHBvcG92ZXItaGVhZGVyLXBhZGRpbmcteDogMXJlbSAhZGVmYXVsdDtcbiRwb3BvdmVyLWhlYWRlci1mb250LXNpemU6ICRoNS1mb250LXNpemUgIWRlZmF1bHQ7IC8vIChDKVxuXG4kcG9wb3Zlci1ib2R5LXBhZGRpbmcteTogMXJlbSAhZGVmYXVsdDtcbiRwb3BvdmVyLWJvZHktcGFkZGluZy14OiAkcG9wb3Zlci1ib2R5LXBhZGRpbmcteSAhZGVmYXVsdDtcbiRwb3BvdmVyLWFycm93LW91dGVyLWNvbG9yOiAkcG9wb3Zlci1iZyAhZGVmYXVsdDtcblxuLy8gKiBUb2FzdHNcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcblxuJHRvYXN0LW1heC13aWR0aDogMjIuNXJlbSAhZGVmYXVsdDtcbiR0b2FzdC1wYWRkaW5nLXg6IDFyZW0gIWRlZmF1bHQ7XG4kdG9hc3QtcGFkZGluZy15OiAwLjYyNXJlbSAhZGVmYXVsdDtcbiR0b2FzdC1mb250LXNpemU6ICRmb250LXNpemUtYmFzZSAhZGVmYXVsdDtcbiR0b2FzdC1jb2xvcjogJGJvZHktY29sb3IgIWRlZmF1bHQ7XG4kdG9hc3QtYmFja2dyb3VuZC1jb2xvcjogcmdiYSgkY2FyZC1iZywgMC44NSkgIWRlZmF1bHQ7XG4kdG9hc3QtYm9yZGVyLXdpZHRoOiAwcHggIWRlZmF1bHQ7XG4kdG9hc3QtYm9yZGVyLXJhZGl1czogJGJvcmRlci1yYWRpdXMtbGcgIWRlZmF1bHQ7XG4kdG9hc3QtYm94LXNoYWRvdzogJGZsb2F0aW5nLWNvbXBvbmVudC1zaGFkb3cgIWRlZmF1bHQ7XG4kdG9hc3QtaGVhZGVyLWNvbG9yOiAkYm9keS1jb2xvciAhZGVmYXVsdDtcbiR0b2FzdC1oZWFkZXItYmFja2dyb3VuZC1jb2xvcjogJGNhcmQtYmcgIWRlZmF1bHQ7XG4kdG9hc3Qtc3BhY2luZzogMXJlbSAhZGVmYXVsdDtcblxuLy8gKiBCYWRnZXNcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcblxuJGJhZGdlLWZvbnQtc2l6ZTogMC44MTNlbSAhZGVmYXVsdDtcbiRiYWRnZS1mb250LXdlaWdodDogNTAwICFkZWZhdWx0O1xuJGJhZGdlLXBhZGRpbmcteTogMC40NDRlbSAhZGVmYXVsdDtcbiRiYWRnZS1wYWRkaW5nLXg6IDAuNzVlbSAhZGVmYXVsdDtcbiRiYWRnZS1ib3JkZXItcmFkaXVzOiAkYm9yZGVyLXJhZGl1cy1zbSAhZGVmYXVsdDtcblxuJGJhZGdlLWhlaWdodDogMS41cmVtICFkZWZhdWx0OyAvLyAoQylcbiRiYWRnZS13aWR0aDogMS41cmVtICFkZWZhdWx0OyAvLyAoQylcbiRiYWRnZS1saW5lLWhlaWdodDogMC45MiAhZGVmYXVsdDsgLy8gKEMpXG5cbi8vICogTW9kYWxzXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cbiRtb2RhbC1pbm5lci1wYWRkaW5nOiAkc3BhY2VyICogMS41ICFkZWZhdWx0O1xuJG1vZGFsLWRpYWxvZy1tYXJnaW46IDEuNXJlbSAhZGVmYXVsdDtcblxuJG1vZGFsLWNvbnRlbnQtYm9yZGVyLXdpZHRoOiAwcHggIWRlZmF1bHQ7XG4kbW9kYWwtY29udGVudC1ib3gtc2hhZG93LXhzOiAwIDAuMTI1cmVtIDEuMjVyZW0gMCByZ2JhKCRibGFjaywgMC42KSAhZGVmYXVsdDtcbiRtb2RhbC1jb250ZW50LWJveC1zaGFkb3ctc20tdXA6ICRtb2RhbC1jb250ZW50LWJveC1zaGFkb3cteHMgIWRlZmF1bHQ7XG4kbW9kYWwtaGVhZGVyLWJvcmRlci13aWR0aDogMHB4ICFkZWZhdWx0O1xuXG4kbW9kYWwtaGVhZGVyLXBhZGRpbmcteTogMS4zNzVyZW0gIWRlZmF1bHQ7XG4kbW9kYWwtaGVhZGVyLXBhZGRpbmcteDogJG1vZGFsLWlubmVyLXBhZGRpbmcgIWRlZmF1bHQ7XG4kbW9kYWwtaGVhZGVyLXBhZGRpbmc6ICRtb2RhbC1oZWFkZXItcGFkZGluZy15ICRtb2RhbC1oZWFkZXItcGFkZGluZy14IDAgIWRlZmF1bHQ7IC8vIEtlZXAgdGhpcyBmb3IgYmFja3dhcmRzIGNvbXBhdGliaWxpdHlcbiRtb2RhbC1mb290ZXItcGFkZGluZzogMCAkbW9kYWwtaGVhZGVyLXBhZGRpbmcteCAkbW9kYWwtaGVhZGVyLXBhZGRpbmcteSAhZGVmYXVsdDsgLy8gKEMpXG5cbiRtb2RhbC1sZzogNTByZW0gIWRlZmF1bHQ7XG4kbW9kYWwtbWQ6IDM1cmVtICFkZWZhdWx0O1xuJG1vZGFsLXNtOiAyMi41cmVtICFkZWZhdWx0O1xuXG4kbW9kYWwtZmFkZS10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTEwMHB4KSBzY2FsZSgwLjgpICFkZWZhdWx0O1xuJG1vZGFsLXNob3ctdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApIHNjYWxlKDEpICFkZWZhdWx0O1xuXG4kbW9kYWwtdHJhbnNpdGlvbi1kdXJhdGlvbjogMC4xNXMgIWRlZmF1bHQ7IC8vIChDKVxuJG1vZGFsLXRyYW5zaXRpb246IHRyYW5zZm9ybSAkbW9kYWwtdHJhbnNpdGlvbi1kdXJhdGlvbiBlYXNlLW91dCAhZGVmYXVsdDtcbiRtb2RhbC1jbG9zZS1idG4tYmc6IHJnYmEtdG8taGV4KHJnYmEoJGJsYWNrLCAwLjA4KSwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDsgLy8gKEMpXG5cbiRtb2RhbC1zaW1wbGUtcGFkZGluZzogM3JlbSAhZGVmYXVsdDsgLy8gKEMpXG4kbW9kYWwtc2ltcGxlLWNsb3NlLXBvc2l0aW9uOiAxLjM3NXJlbSAhZGVmYXVsdDsgLy8gKEMpXG5cbi8vICogQWxlcnRzXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cbiRhbGVydC1wYWRkaW5nLXk6ICRzcGFjZXIgKiAwLjc1ICFkZWZhdWx0O1xuJGFsZXJ0LXBhZGRpbmcteDogJHNwYWNlciAqIDEuMjUgIWRlZmF1bHQ7XG4kYWxlcnQtYm9yZGVyLXJhZGl1czogJGJvcmRlci1yYWRpdXMgIWRlZmF1bHQ7XG4kYWxlcnQtYm9yZGVyLXdpZHRoOiAwICFkZWZhdWx0O1xuJGFsZXJ0LWJnLXNjYWxlOiAtODQlICFkZWZhdWx0O1xuJGFsZXJ0LWJvcmRlci1zY2FsZTogLTcwJSAhZGVmYXVsdDtcbiRhbGVydC1jb2xvci1zY2FsZTogMCUgIWRlZmF1bHQ7XG5cbi8vICogUHJvZ3Jlc3MgYmFyc1xuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuXG4kcHJvZ3Jlc3MtaGVpZ2h0OiAwLjc1cmVtICFkZWZhdWx0O1xuJHByb2dyZXNzLWZvbnQtc2l6ZTogMC42MjVyZW0gIWRlZmF1bHQ7XG4kcHJvZ3Jlc3MtYmc6IHJnYmEtdG8taGV4KCRncmF5LTEwMCwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcbiRwcm9ncmVzcy1ib3JkZXItcmFkaXVzOiAxMHJlbSAhZGVmYXVsdDtcbiRwcm9ncmVzcy1iYXItY29sb3I6ICR3aGl0ZSAhZGVmYXVsdDtcblxuLy8gTGlzdCBncm91cFxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuXG4vLyBzY3NzLWRvY3Mtc3RhcnQgbGlzdC1ncm91cC12YXJpYWJsZXNcbiRsaXN0LWdyb3VwLWNvbG9yOiAkYm9keS1jb2xvciAhZGVmYXVsdDtcbiRsaXN0LWdyb3VwLWJnOiB0cmFuc3BhcmVudCAhZGVmYXVsdDtcbiRsaXN0LWdyb3VwLWJvcmRlci1jb2xvcjogJGJvcmRlci1jb2xvciAhZGVmYXVsdDtcbiRsaXN0LWdyb3VwLWl0ZW0tcGFkZGluZy15OiAwLjYyNXJlbSAhZGVmYXVsdDtcbiRsaXN0LWdyb3VwLWl0ZW0tcGFkZGluZy14OiAkc3BhY2VyICFkZWZhdWx0O1xuJGxpc3QtZ3JvdXAtaXRlbS1iZy1zY2FsZTogLTg0JSAhZGVmYXVsdDtcbiRsaXN0LWdyb3VwLWl0ZW0tY29sb3Itc2NhbGU6IDAlICFkZWZhdWx0O1xuJGxpc3QtZ3JvdXAtaXRlbS1iZy1ob3Zlci1zY2FsZTogNSUgIWRlZmF1bHQ7IC8vICAoYylcblxuJGxpc3QtZ3JvdXAtaG92ZXItYmc6IHJnYmEtdG8taGV4KHJnYmEoJGJsYWNrLCAwLjA2KSwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcbiRsaXN0LWdyb3VwLWJvcmRlci1yYWRpdXM6ICRib3JkZXItcmFkaXVzLWxnICFkZWZhdWx0O1xuXG4kbGlzdC1ncm91cC1kaXNhYmxlZC1jb2xvcjogJHRleHQtbXV0ZWQgIWRlZmF1bHQ7XG5cbiRsaXN0LWdyb3VwLWFjdGlvbi1jb2xvcjogJHRleHQtbXV0ZWQtaG92ZXIgIWRlZmF1bHQ7XG4kbGlzdC1ncm91cC1hY3Rpb24taG92ZXItY29sb3I6ICRib2R5LWNvbG9yICFkZWZhdWx0O1xuJGxpc3QtZ3JvdXAtYWN0aW9uLWFjdGl2ZS1iZzogJGdyYXktNTAgIWRlZmF1bHQ7XG4vLyBzY3NzLWRvY3MtZW5kIGxpc3QtZ3JvdXAtdmFyaWFibGVzXG5cbi8vICogSW1hZ2UgdGh1bWJuYWlsc1xuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuXG4kdGh1bWJuYWlsLXBhZGRpbmc6IDAgIWRlZmF1bHQ7XG4kdGh1bWJuYWlsLWJnOiB0cmFuc3BhcmVudCAhZGVmYXVsdDtcbiR0aHVtYm5haWwtYm9yZGVyLXdpZHRoOiAwcHggIWRlZmF1bHQ7XG4kdGh1bWJuYWlsLWJvcmRlci1yYWRpdXM6IDBweCAhZGVmYXVsdDtcblxuLy8gKiBGaWd1cmVzXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cbiRmaWd1cmUtY2FwdGlvbi1jb2xvcjogJHRleHQtbXV0ZWQgIWRlZmF1bHQ7XG5cbi8vICogQnJlYWRjcnVtYnNcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcblxuJGJyZWFkY3J1bWItcGFkZGluZy15OiAwICFkZWZhdWx0O1xuJGJyZWFkY3J1bWItcGFkZGluZy14OiAwICFkZWZhdWx0O1xuJGJyZWFkY3J1bWItaXRlbS1wYWRkaW5nLXg6IDAuNXJlbSAhZGVmYXVsdDtcbiRicmVhZGNydW1iLW1hcmdpbi1ib3R0b206IDFyZW0gIWRlZmF1bHQ7XG4kYnJlYWRjcnVtYi1iZzogdHJhbnNwYXJlbnQgIWRlZmF1bHQ7XG4kYnJlYWRjcnVtYi1kaXZpZGVyLWNvbG9yOiByZ2JhLXRvLWhleCgkZ3JheS01MDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7XG4kYnJlYWRjcnVtYi1hY3RpdmUtY29sb3I6ICRib2R5LWNvbG9yICFkZWZhdWx0O1xuJGJyZWFkY3J1bWItZGl2aWRlcjogJy8nICFkZWZhdWx0O1xuJGJyZWFkY3J1bWItZGl2aWRlci1mbGlwcGVkOiAnXFxcXCcgIWRlZmF1bHQ7XG4kYnJlYWRjcnVtYi1jb2xvcjogJGJyZWFkY3J1bWItYWN0aXZlLWNvbG9yICFkZWZhdWx0OyAvLyAoQylcblxuLy8gKiBDYXJvdXNlbFxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuJGNhcm91c2VsLWNvbnRyb2wtY29sb3I6ICR3aGl0ZSAhZGVmYXVsdDtcbiRjYXJvdXNlbC1jb250cm9sLXdpZHRoOiAxNCUgIWRlZmF1bHQ7XG4kY2Fyb3VzZWwtY29udHJvbC1pY29uLXdpZHRoOiAyLjVyZW0gIWRlZmF1bHQ7XG4kY2Fyb3VzZWwtY29udHJvbC1vcGFjaXR5OiAxICFkZWZhdWx0O1xuJGNhcm91c2VsLWNvbnRyb2wtaG92ZXItb3BhY2l0eTogMSAhZGVmYXVsdDtcblxuJGNhcm91c2VsLWNvbnRyb2wtcHJldi1pY29uLWJnOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNDc3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgd2lkdGg9JzI0JyBoZWlnaHQ9JzI0JyB2aWV3Qm94PScwIDAgMjQgMjQnIHN0eWxlPSdmaWxsOiAjeyRjYXJvdXNlbC1jb250cm9sLWNvbG9yfTt0cmFuc2Zvcm06IDttc0ZpbHRlcjo7JyUzRSUzQ3BhdGggZD0nTTEzLjI5MyA2LjI5MyA3LjU4NiAxMmw1LjcwNyA1LjcwNyAxLjQxNC0xLjQxNEwxMC40MTQgMTJsNC4yOTMtNC4yOTN6JyUzRSUzQy9wYXRoJTNFJTNDL3N2ZyUzRVwiKSAhZGVmYXVsdDtcbiRjYXJvdXNlbC1jb250cm9sLW5leHQtaWNvbi1iZzogdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLCUzQ3N2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHdpZHRoPScyNCcgaGVpZ2h0PScyNCcgdmlld0JveD0nMCAwIDI0IDI0JyBzdHlsZT0nZmlsbDogI3skY2Fyb3VzZWwtY29udHJvbC1jb2xvcn07dHJhbnNmb3JtOiA7bXNGaWx0ZXI6OyclM0UlM0NwYXRoIGQ9J00xMC43MDcgMTcuNzA3IDE2LjQxNCAxMmwtNS43MDctNS43MDctMS40MTQgMS40MTRMMTMuNTg2IDEybC00LjI5MyA0LjI5M3onJTNFJTNDL3BhdGglM0UlM0Mvc3ZnJTNFXCIpICFkZWZhdWx0O1xuXG4vLyBTcGlubmVyc1xuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuXG4kc3Bpbm5lci13aWR0aC1sZzogM3JlbSAhZGVmYXVsdDsgLy8gKEMpXG4kc3Bpbm5lci1oZWlnaHQtbGc6ICRzcGlubmVyLXdpZHRoLWxnICFkZWZhdWx0OyAvLyAoQylcbiRzcGlubmVyLWJvcmRlci13aWR0aC1sZzogMC4zZW0gIWRlZmF1bHQ7IC8vIChDKVxuXG4vLyAqIENsb3NlXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cbiRidG4tY2xvc2Utd2lkdGg6IDAuOGVtICFkZWZhdWx0O1xuJGJ0bi1jbG9zZS1oZWlnaHQ6ICRidG4tY2xvc2Utd2lkdGggIWRlZmF1bHQ7XG4kYnRuLWNsb3NlLWNvbG9yOiAkdGV4dC1tdXRlZCAhZGVmYXVsdDtcbiRidG4tY2xvc2UtYmc6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM0Nzdmcgd2lkdGg9JzE1MHB4JyBoZWlnaHQ9JzE1MXB4JyB2aWV3Qm94PScwIDAgMTUwIDE1MScgdmVyc2lvbj0nMS4xJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHhtbG5zOnhsaW5rPSdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJyUzRSUzQ2RlZnMlM0UlM0Nwb2x5Z29uIGlkPSdwYXRoLTEnIHBvaW50cz0nMTMxLjI1MTY1NyAwIDc0Ljk5MzM3MDUgNTYuMjUgMTguNzQ4MzQyNiAwIDAgMTguNzUgNTYuMjQ1MDI3OCA3NSAwIDEzMS4yNSAxOC43NDgzNDI2IDE1MCA3NC45OTMzNzA1IDkzLjc1IDEzMS4yNTE2NTcgMTUwIDE1MCAxMzEuMjUgOTMuNzU0OTcyMiA3NSAxNTAgMTguNzUnJTNFJTNDL3BvbHlnb24lM0UlM0MvZGVmcyUzRSUzQ2cgaWQ9J/CfjqgtJTVCU2V0dXAlNUQ6LUNvbG9ycy0mYW1wOy1TaGFkb3dzJyBzdHJva2U9J25vbmUnIHN0cm9rZS13aWR0aD0nMScgZmlsbD0nbm9uZScgZmlsbC1ydWxlPSdldmVub2RkJyUzRSUzQ2cgaWQ9J0FydGJvYXJkJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgtMjI1LjAwMDAwMCwgLTI1MC4wMDAwMDApJyUzRSUzQ2cgaWQ9J0ljb24tQ29sb3InIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDIyNS4wMDAwMDAsIDI1MC41MDAwMDApJyUzRSUzQ3VzZSBmaWxsPScjeyRidG4tY2xvc2UtY29sb3J9JyB4bGluazpocmVmPSclMjNwYXRoLTEnJTNFJTNDL3VzZSUzRSUzQ3VzZSBmaWxsLW9wYWNpdHk9JzAuNScgZmlsbD0nI3skYnRuLWNsb3NlLWNvbG9yfScgeGxpbms6aHJlZj0nJTIzcGF0aC0xJyUzRSUzQy91c2UlM0UlM0MvZyUzRSUzQy9nJTNFJTNDL2clM0UlM0Mvc3ZnJTNFXCIpICFkZWZhdWx0O1xuJGJ0bi1jbG9zZS1mb2N1cy1zaGFkb3c6IG5vbmUgIWRlZmF1bHQ7XG4kYnRuLWNsb3NlLW9wYWNpdHk6IDAuOTUgIWRlZmF1bHQ7XG4kYnRuLWNsb3NlLWhvdmVyLW9wYWNpdHk6IDAuOTUgIWRlZmF1bHQ7XG4kYnRuLWNsb3NlLWZvY3VzLW9wYWNpdHk6IDAuOTUgIWRlZmF1bHQ7XG5cbiRjbG9zZS1mb250LXdlaWdodDogMzAwICFkZWZhdWx0OyAvLyAoQylcblxuLy8gKiBPZmZjYW52YXNcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcblxuLy8gc2Nzcy1kb2NzLXN0YXJ0IG9mZmNhbnZhcy12YXJpYWJsZXNcbiRvZmZjYW52YXMtdHJhbnNpdGlvbi1kdXJhdGlvbjogMC4yNXMgIWRlZmF1bHQ7XG4vLyBzY3NzLWRvY3MtZW5kIG9mZmNhbnZhcy12YXJpYWJsZXNcblxuLy8gVXRpbGl0aWVzXG4kb3ZlcmZsb3dzOiBhdXRvLCBoaWRkZW4sIHNjcm9sbCwgdmlzaWJsZSAhZGVmYXVsdDtcblxuLy8gQ29uZmlnXG4kcnRsLXN1cHBvcnQ6IGZhbHNlICFkZWZhdWx0O1xuJGRhcmstc3R5bGU6IGZhbHNlICFkZWZhdWx0O1xuIiwiLy8gVmFyaWFibGVzXG4vL1xuLy8gVmFyaWFibGVzIHNob3VsZCBmb2xsb3cgdGhlIGAkY29tcG9uZW50LXN0YXRlLXByb3BlcnR5LXNpemVgIGZvcm11bGEgZm9yXG4vLyBjb25zaXN0ZW50IG5hbWluZy4gRXg6ICRuYXYtbGluay1kaXNhYmxlZC1jb2xvciBhbmQgJG1vZGFsLWNvbnRlbnQtYm94LXNoYWRvdy14cy5cbi8vXG4vLyAoQykgQ3VzdG9tIHZhcmlhYmxlcyBmb3IgZXh0ZW5kZWQgY29tcG9uZW50cyBvZiBib290c3RyYXAgb25seVxuXG4vLyAhIF92YXJpYWJsZS1kYXJrLnNjc3MgZmlsZSBvdmVycmlkZXMgX3ZhcmlhYmxlLnNjc3MgZmlsZS5cblxuLy8gKiBDb2xvcnNcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcblxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGdyYXktY29sb3ItdmFyaWFibGVzXG4kd2hpdGU6ICNmZmYgIWRlZmF1bHQ7XG4kYmxhY2s6ICMwMDAgIWRlZmF1bHQ7XG4kYmFzZTogIzYzN2JhOSAhZGVmYXVsdDsgLy8gKEMpXG4kZ3JheS0yNTogcmdiYSgkd2hpdGUsIDAuMDE1KSAhZGVmYXVsdDsgLy8gKEMpXG4kZ3JheS01MDogcmdiYSgkd2hpdGUsIDAuMDMpICFkZWZhdWx0OyAvLyAoQylcbiRncmF5LTEwMDogcmdiYSgkd2hpdGUsIDAuNzUpICFkZWZhdWx0O1xuJGdyYXktMjAwOiByZ2JhKCR3aGl0ZSwgMC42KSAhZGVmYXVsdDtcbiRncmF5LTMwMDogcmdiYSgkd2hpdGUsIDAuNCkgIWRlZmF1bHQ7XG4kZ3JheS00MDA6IHJnYmEoJHdoaXRlLCAwLjIpICFkZWZhdWx0O1xuJGdyYXktNTAwOiAkYmFzZSAhZGVmYXVsdDtcbiRncmF5LTYwMDogcmdiYSgkYmxhY2ssIDAuMSkgIWRlZmF1bHQ7XG4kZ3JheS03MDA6IHJnYmEoJGJsYWNrLCAwLjE1KSAhZGVmYXVsdDtcbiRncmF5LTgwMDogcmdiYSgkYmxhY2ssIDAuNDUpICFkZWZhdWx0O1xuJGdyYXktOTAwOiByZ2JhKCRibGFjaywgMC42KSAhZGVmYXVsdDtcbi8vIHNjc3MtZG9jcy1lbmQgZ3JheS1jb2xvci12YXJpYWJsZXNcblxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGdyYXktY29sb3JzLW1hcFxuJGdyYXlzOiAoXG4gICcyNSc6ICRncmF5LTI1LFxuICAnNTAnOiAkZ3JheS01MFxuKSAhZGVmYXVsdDtcbi8vIHNjc3MtZG9jcy1lbmQgZ3JheS1jb2xvcnMtbWFwXG5cbi8vIHNjc3MtZG9jcy1zdGFydCBjb2xvci12YXJpYWJsZXNcbiRibHVlOiAjNWE4ZGVlICFkZWZhdWx0O1xuJGluZGlnbzogIzY2MTBmMiAhZGVmYXVsdDtcbiRwdXJwbGU6ICM2ZjQyYzEgIWRlZmF1bHQ7XG4kcGluazogI2U4M2U4YyAhZGVmYXVsdDtcbiRyZWQ6ICNmZjViNWMgIWRlZmF1bHQ7XG4kb3JhbmdlOiAjZmQ3ZTE0ICFkZWZhdWx0O1xuJHllbGxvdzogI2ZkYWM0MSAhZGVmYXVsdDtcbiRncmVlbjogIzM5ZGE4YSAhZGVmYXVsdDtcbiR0ZWFsOiAjMjBjOTk3ICFkZWZhdWx0O1xuJGN5YW46ICMwMGNmZGQgIWRlZmF1bHQ7XG4vLyBzY3NzLWRvY3MtZW5kIGNvbG9yLXZhcmlhYmxlc1xuXG4vLyBzY3NzLWRvY3Mtc3RhcnQgdGhlbWUtY29sb3ItdmFyaWFibGVzXG4kcHJpbWFyeTogJGJsdWUgIWRlZmF1bHQ7XG4kc2Vjb25kYXJ5OiAjNjk4MDlhICFkZWZhdWx0O1xuJHN1Y2Nlc3M6ICRncmVlbiAhZGVmYXVsdDtcbiRpbmZvOiAkY3lhbiAhZGVmYXVsdDtcbiR3YXJuaW5nOiAkeWVsbG93ICFkZWZhdWx0O1xuJGRhbmdlcjogJHJlZCAhZGVmYXVsdDtcbiRsaWdodDogIzQzNGM1ZiAhZGVmYXVsdDtcbiRkYXJrOiAjNzE3Nzg0ICFkZWZhdWx0O1xuJGdyYXk6ICRncmF5LTEwMCAhZGVmYXVsdDsgLy8gKEMpXG4vLyBzY3NzLWRvY3MtZW5kIHRoZW1lLWNvbG9yLXZhcmlhYmxlc1xuXG4vLyBzY3NzLWRvY3Mtc3RhcnQgdGhlbWUtY29sb3JzLW1hcFxuJHRoZW1lLWNvbG9yczogKFxuICAncHJpbWFyeSc6ICRwcmltYXJ5LFxuICAnc2Vjb25kYXJ5JzogJHNlY29uZGFyeSxcbiAgJ3N1Y2Nlc3MnOiAkc3VjY2VzcyxcbiAgJ2luZm8nOiAkaW5mbyxcbiAgJ3dhcm5pbmcnOiAkd2FybmluZyxcbiAgJ2Rhbmdlcic6ICRkYW5nZXIsXG4gICdsaWdodCc6ICRsaWdodCxcbiAgJ2RhcmsnOiAkZGFyayxcbiAgJ2dyYXknOiAkZ3JheVxuKSAhZGVmYXVsdDtcbi8vIHNjc3MtZG9jcy1lbmQgdGhlbWUtY29sb3JzLW1hcFxuXG4kY29sb3Itc2NoZW1lOiAnZGFyaycgIWRlZmF1bHQ7IC8vIChDKVxuXG4vLyAqIEJvZHlcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcblxuJGJvZHktYmc6ICMxYzIyMmYgIWRlZmF1bHQ7XG4kcmdiYS10by1oZXgtYmc6ICRiYXNlICFkZWZhdWx0OyAvLyAoQylcbiRib2R5LWNvbG9yOiByZ2JhLXRvLWhleCgkZ3JheS0zMDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7XG4kcmdiYS10by1oZXgtYmctaW52ZXJ0ZWQ6IHJnYigxNjAsIDE0OSwgMTQ5KSAhZGVmYXVsdDsgLy8gKEMpIEFTS1xuXG4vLyAqIENvbXBvbmVudHNcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbi8vIHNjc3MtZG9jcy1zdGFydCBib3gtc2hhZG93LXZhcmlhYmxlc1xuJGJveC1zaGFkb3c6IDAgMC4yNXJlbSAxcmVtIHJnYmEoJGJsYWNrLCAwLjI1KSAhZGVmYXVsdDtcbiRib3gtc2hhZG93LXNtOiAwIDAuMTI1cmVtIDAuMjVyZW0gcmdiYSgkYmxhY2ssIDAuMikgIWRlZmF1bHQ7XG4kYm94LXNoYWRvdy1sZzogMCAwLjYyNXJlbSAxLjI1cmVtIHJnYmEoJGJsYWNrLCAwLjMpICFkZWZhdWx0O1xuLy8gc2Nzcy1kb2NzLWVuZCBib3gtc2hhZG93LXZhcmlhYmxlc1xuLy8gJGJvcmRlci1jb2xvcjogcmdiYS10by1oZXgocmdiYSgkd2hpdGUsIDAuMSksICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7XG4vLyAkYm9yZGVyLWlubmVyLWNvbG9yOiByZ2JhLXRvLWhleChyZ2JhKCR3aGl0ZSwgMC4wOSksICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7IC8vIChDKVxuJGJvcmRlci1jb2xvcjogcmdiYS10by1oZXgoJGdyYXktODAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xuJGJvcmRlci1pbm5lci1jb2xvcjogcmdiYSgkd2hpdGUsIDAuMDkpICFkZWZhdWx0OyAvLyAoQylcblxuLy8gKiBUeXBvZ3JhcGh5XG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cbiR0ZXh0LW11dGVkOiByZ2JhLXRvLWhleCgkZ3JheS00MDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7XG4kdGV4dC1tdXRlZC1ob3ZlcjogcmdiYS10by1oZXgoJHdoaXRlLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0OyAvLyAoQylcblxuJHRleHQtbGlnaHQ6IHJnYmEtdG8taGV4KCRncmF5LTUwMCwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDsgLy8gKEMpXG4kdGV4dC1saWdodGVyOiByZ2JhLXRvLWhleCgkZ3JheS00MDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7IC8vIChDKVxuJHRleHQtbGlnaHRlc3Q6IHJnYmEtdG8taGV4KCRncmF5LTMwMCwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDsgLy8gKEMpXG5cbi8vIHNjc3MtZG9jcy1zdGFydCBoZWFkaW5ncy12YXJpYWJsZXNcbiRoZWFkaW5ncy1jb2xvcjogcmdiYS10by1oZXgoJGdyYXktMTAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xuLy8gc2Nzcy1kb2NzLWVuZCBoZWFkaW5ncy12YXJpYWJsZXNcblxuJGhyLWNvbG9yOiAkYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xuXG4vLyAqIFRhYmxlc1xuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuXG4kdGFibGUtYmctc2NhbGU6IC04MCUgIWRlZmF1bHQ7XG5cbi8vIHNjc3MtZG9jcy1zdGFydCB0YWJsZS1sb29wXG4kdGFibGUtdmFyaWFudHM6IChcbiAgJ3ByaW1hcnknOiBzaGlmdC1jb2xvcigkcHJpbWFyeSwgJHRhYmxlLWJnLXNjYWxlKSxcbiAgJ3NlY29uZGFyeSc6IHNoaWZ0LWNvbG9yKCRzZWNvbmRhcnksICR0YWJsZS1iZy1zY2FsZSksXG4gICdzdWNjZXNzJzogc2hpZnQtY29sb3IoJHN1Y2Nlc3MsICR0YWJsZS1iZy1zY2FsZSksXG4gICdpbmZvJzogc2hpZnQtY29sb3IoJGluZm8sICR0YWJsZS1iZy1zY2FsZSksXG4gICd3YXJuaW5nJzogc2hpZnQtY29sb3IoJHdhcm5pbmcsICR0YWJsZS1iZy1zY2FsZSksXG4gICdkYW5nZXInOiBzaGlmdC1jb2xvcigkZGFuZ2VyLCAkdGFibGUtYmctc2NhbGUpLFxuICAnbGlnaHQnOiAkZGFyayxcbiAgJ2RhcmsnOiAkd2hpdGVcbikgIWRlZmF1bHQ7XG4vLyBzY3NzLWRvY3MtZW5kIHRhYmxlLWxvb3BcblxuJHRhYmxlLXN0cmlwZWQtYmctZmFjdG9yOiAwLjA2ICFkZWZhdWx0O1xuJHRhYmxlLXN0cmlwZWQtYmc6IHJnYmEoJGdyYXktNTAwLCAkdGFibGUtc3RyaXBlZC1iZy1mYWN0b3IpICFkZWZhdWx0O1xuXG4kdGFibGUtaG92ZXItYmctZmFjdG9yOiAwLjA4ICFkZWZhdWx0O1xuJHRhYmxlLWhvdmVyLWJnOiByZ2JhKCRncmF5LTUwMCwgJHRhYmxlLWhvdmVyLWJnLWZhY3RvcikgIWRlZmF1bHQ7XG4kdGFibGUtYWN0aXZlLWJnLWZhY3RvcjogMC4wOCAhZGVmYXVsdDtcbiR0YWJsZS1hY3RpdmUtYmc6IHJnYmEoJGdyYXktNTAwLCAkdGFibGUtYWN0aXZlLWJnLWZhY3RvcikgIWRlZmF1bHQ7XG5cbiR0YWJsZS1ib3JkZXItY29sb3I6ICRib3JkZXItY29sb3IgIWRlZmF1bHQ7XG4kdGFibGUtZ3JvdXAtc2VwYXJhdG9yLWNvbG9yOiAkdGFibGUtYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xuXG4kY29tcG9uZW50LWFjdGl2ZS1iZzogJHdoaXRlICFkZWZhdWx0O1xuXG4vLyAqIENhcmRzXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cbiRjYXJkLWJnOiByZ2JhLXRvLWhleCgkZ3JheS05MDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7XG4kY2FyZC1ib3JkZXItY29sb3I6ICRib3JkZXItY29sb3IgIWRlZmF1bHQ7XG4kY2FyZC1pbm5lci1ib3JkZXItY29sb3I6IHJnYmEtdG8taGV4KCRncmF5LTgwMCwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcbiRjYXJkLWJveC1zaGFkb3c6IDAgMC4xMjVyZW0gMC44NzVyZW0gMCByZ2JhKCRibGFjaywgMC4xNikgIWRlZmF1bHQ7XG5cbi8vICogQWNjb3JkaW9uXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cbiRhY2NvcmRpb24tYmc6ICRjYXJkLWJnICFkZWZhdWx0O1xuXG4vLyAqIEJ1dHRvbnNcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcblxuJGJ0bi1ib3gtc2hhZG93OiAkYm94LXNoYWRvdy1zbSAhZGVmYXVsdDtcbiRidG4taG92ZXItYm94LXNoYWRvdzogJGJveC1zaGFkb3cgIWRlZmF1bHQ7IC8vIChDKVxuXG4vLyAqIEZvcm1zXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cbiRpbnB1dC1iZzogJGNhcmQtYmcgIWRlZmF1bHQ7XG4kaW5wdXQtZGlzYWJsZWQtYmc6IHJnYmEtdG8taGV4KCRncmF5LTgwMCwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcblxuJGlucHV0LWJvcmRlci1jb2xvcjogcmdiYS10by1oZXgoJGdyYXktNzAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xuJGlucHV0LXBsYWNlaG9sZGVyLWNvbG9yOiAkdGV4dC1tdXRlZCAhZGVmYXVsdDtcblxuJGZvcm0tY2hlY2staW5wdXQtYm9yZGVyOiAxcHggc29saWQgJGlucHV0LWJvcmRlci1jb2xvciAhZGVmYXVsdDtcbiRmb3JtLWNoZWNrLWlucHV0LWZvY3VzLWJveC1zaGFkb3c6IDAgMCAwIDAuMTJyZW0gcmdiYShyZ2JhLXRvLWhleCgkZ3JheS01MDAsICRyZ2JhLXRvLWhleC1iZyksIDMwJSkgIWRlZmF1bHQ7XG5cbiRmb3JtLXN3aXRjaC1jb2xvcjogJGlucHV0LWJvcmRlci1jb2xvciAhZGVmYXVsdDtcbiRmb3JtLXN3aXRjaC1iZy1pbWFnZTogdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLDxzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB2aWV3Qm94PSctNCAtNCA4IDgnPjxjaXJjbGUgcj0nMycgZmlsbD0nI3skZm9ybS1zd2l0Y2gtY29sb3J9Jy8+PC9zdmc+XCIpICFkZWZhdWx0O1xuXG4kZm9ybS1zZWxlY3QtYmc6ICRpbnB1dC1iZyAhZGVmYXVsdDtcbiRmb3JtLXNlbGVjdC1pbmRpY2F0b3ItY29sb3I6ICRib2R5LWNvbG9yICFkZWZhdWx0O1xuJGZvcm0tc2VsZWN0LWluZGljYXRvcjogdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLDxzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB2aWV3Qm94PScwIDAgMTYgMTYnPjxwYXRoIGZpbGw9J25vbmUnIHN0cm9rZT0nI3skZm9ybS1zZWxlY3QtaW5kaWNhdG9yLWNvbG9yfScgc3Ryb2tlLWxpbmVjYXA9J3JvdW5kJyBzdHJva2UtbGluZWpvaW49J3JvdW5kJyBzdHJva2Utd2lkdGg9JzInIGQ9J00yIDVsNiA2IDYtNicvPjwvc3ZnPlwiKSAhZGVmYXVsdDtcbiRmb3JtLXNlbGVjdC1pbmRpY2F0b3ItcnRsOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsPHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCAxNiAxNic+PHBhdGggZmlsbD0nbm9uZScgc3Ryb2tlPScjeyRmb3JtLXNlbGVjdC1pbmRpY2F0b3ItY29sb3J9JyBzdHJva2UtbGluZWNhcD0ncm91bmQnIHN0cm9rZS1saW5lam9pbj0ncm91bmQnIHN0cm9rZS13aWR0aD0nMicgZD0nTTIgNWw2IDYgNi02Jy8+PC9zdmc+XCIpICFkZWZhdWx0OyAvLyAoQylcblxuJGZvcm0tcmFuZ2UtdHJhY2stYmc6IHJnYmEtdG8taGV4KCRncmF5LTgwMCwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcbiRmb3JtLXJhbmdlLXRyYWNrLWRpc2FibGVkLWJnOiAkZ3JheS01MCAhZGVmYXVsdDsgLy8gKEMpXG5cbiRmb3JtLXJhbmdlLXRodW1iLWJnOiByZ2JhLXRvLWhleCgkZ3JheS0yMDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7XG4kZm9ybS1yYW5nZS10aHVtYi1ib3gtc2hhZG93OiAwIDAgNnB4IDAgJGdyYXktMjAwICFkZWZhdWx0O1xuJGZvcm0tcmFuZ2UtdGh1bWItZm9jdXMtYm94LXNoYWRvdzogMCAwIDhweCAwcHggJGdyYXktMjAwICFkZWZhdWx0O1xuJGZvcm0tcmFuZ2UtdGh1bWItYWN0aXZlLWJnOiAkZm9ybS1yYW5nZS10aHVtYi1iZyAhZGVmYXVsdDtcbiRmb3JtLXJhbmdlLXRodW1iLWRpc2FibGVkLWJnOiByZ2JhLXRvLWhleCgkZ3JheS02MDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7XG5cbi8vICogTmF2c1xuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuXG4kbmF2LWxpbmstY29sb3I6ICRoZWFkaW5ncy1jb2xvciAhZGVmYXVsdDtcbiRuYXYtdGFicy1saW5rLWFjdGl2ZS1iZzogJGNhcmQtYmcgIWRlZmF1bHQ7XG4kbmF2LXRhYnMtbGluay1ob3Zlci1ib3JkZXItY29sb3I6ICRib3JkZXItY29sb3IgIWRlZmF1bHQ7XG4kbmF2LXRhYnMtbGluay1hY3RpdmUtYm9yZGVyLWNvbG9yOiAkbmF2LXRhYnMtbGluay1ob3Zlci1ib3JkZXItY29sb3IgIWRlZmF1bHQ7XG5cbi8vICogTmF2YmFyXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cbiRuYXZiYXItbGlnaHQtaG92ZXItY29sb3I6ICM0ZTUxNTUgIWRlZmF1bHQ7XG4kbmF2YmFyLWxpZ2h0LWFjdGl2ZS1jb2xvcjogIzRlNTE1NSAhZGVmYXVsdDtcbiRuYXZiYXItbGlnaHQtZGlzYWJsZWQtY29sb3I6IHJnYmEoJGJsYWNrLCAwLjIpICFkZWZhdWx0O1xuXG4vLyAqIERyb3Bkb3duc1xuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuXG4kZHJvcGRvd24tYmc6IHJnYmEtdG8taGV4KCRncmF5LTkwMCwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcbiRkcm9wZG93bi1kaXZpZGVyLWJnOiAkYm9yZGVyLWlubmVyLWNvbG9yICFkZWZhdWx0O1xuXG4kZHJvcGRvd24tbGluay1ob3Zlci1iZzogcmdiYSgkZ3JheS01MDAsIDAuMDgpICFkZWZhdWx0O1xuXG4vLyAqIFBhZ2luYXRpb25cbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcblxuJHBhZ2luYXRpb24tYmc6IHJnYmEoJGdyYXktNTAwLCAwLjA4KSAhZGVmYXVsdDtcbiRwYWdpbmF0aW9uLWZvY3VzLWJnOiByZ2JhKCRncmF5LTUwMCwgMC4xNikgIWRlZmF1bHQ7XG5cbiRwYWdpbmF0aW9uLWRpc2FibGVkLWNvbG9yOiAkdGV4dC1tdXRlZCAhZGVmYXVsdDtcbiRwYWdpbmF0aW9uLWRpc2FibGVkLWJnOiByZ2JhKCRncmF5LTUwMCwgMC4wNikgIWRlZmF1bHQ7XG4vLyAqIFBvcG92ZXJzXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4kcG9wb3Zlci1iZzogJGNhcmQtYmcgIWRlZmF1bHQ7XG5cbi8vICogTW9kYWxzXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cbiRtb2RhbC1jb250ZW50LWJnOiAkY2FyZC1iZyAhZGVmYXVsdDtcbiRtb2RhbC1jb250ZW50LWJveC1zaGFkb3cteHM6IDAgMC4xMjVyZW0gMS4yNXJlbSAwIHJnYmEoJGJsYWNrLCAwLjI4KSAhZGVmYXVsdDtcbiRtb2RhbC1jbG9zZS1idG4tYmc6IHJnYmEoJGJhc2UsIDAuMTYpICFkZWZhdWx0OyAvLyAoQylcblxuLy8gKiBQcm9ncmVzcyBiYXJzXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cbiRwcm9ncmVzcy1iZzogcmdiYS10by1oZXgoJGdyYXktODAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xuXG4vLyAqIExpc3QgZ3JvdXBcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcblxuJGxpc3QtZ3JvdXAtYm9yZGVyLWNvbG9yOiAkYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xuJGxpc3QtZ3JvdXAtaXRlbS1iZy1zY2FsZTogLTcwJSAhZGVmYXVsdDtcbiRsaXN0LWdyb3VwLWl0ZW0tYmctaG92ZXItc2NhbGU6IDEwJSAhZGVmYXVsdDsgLy8gIChjKVxuJGxpc3QtZ3JvdXAtaG92ZXItYmc6IHJnYmEoJGJhc2UsIDAuMDgpICFkZWZhdWx0O1xuXG4ka2JkLWNvbG9yOiAkZGFyayAhZGVmYXVsdDtcblxuLy8gQ29uZmlnXG4kcnRsLXN1cHBvcnQ6IGZhbHNlICFkZWZhdWx0O1xuJGRhcmstc3R5bGU6IHRydWUgIWRlZmF1bHQ7XG4iXX0= */
