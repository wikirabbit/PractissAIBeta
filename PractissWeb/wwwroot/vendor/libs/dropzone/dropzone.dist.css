.dropzone {
  width: 100%;
  position: relative;
  padding: 1.5rem;
  cursor: pointer;
  border-radius: 0.3125rem;
}
.dropzone:not(.dz-clickable) {
  opacity: 0.5;
  cursor: not-allowed;
}
.dropzone.dz-drag-hover {
  border-style: solid;
}
.dropzone.dz-drag-hover .dz-message {
  opacity: 0.5;
}

.dz-message {
  font-size: 1.625rem;
}
.dz-message .note {
  font-size: 0.9375rem;
}

.dz-browser-not-supported.dropzone-box {
  min-height: auto !important;
  border: none !important;
  border-radius: 0 !important;
  padding: 0 !important;
  width: auto !important;
  cursor: default !important;
  transition: none;
}
.dz-browser-not-supported .dz-message {
  display: none !important;
}

.dz-started .dz-message {
  display: none;
}

.dz-message {
  margin: 5rem 0;
  font-weight: 500;
  text-align: center;
}
.dz-message .note {
  font-weight: 400;
  display: block;
  margin-top: 0.625rem;
}

.dz-preview {
  position: relative;
  vertical-align: top;
  margin: 1.5rem 0 0 1.5rem;
  background: #fff;
  font-size: 0.8125rem;
  box-sizing: content-box;
  cursor: default;
}

.dz-filename {
  position: absolute;
  width: 100%;
  overflow: hidden;
  padding: 0.625rem 0.625rem 0 0.625rem;
  background: #fff;
  white-space: nowrap;
  text-overflow: ellipsis;
}
.dz-filename:hover {
  white-space: normal;
  text-overflow: inherit;
}

.dz-size {
  padding: 1.875rem 0.625rem 0.625rem 0.625rem;
  font-size: 0.6875rem;
  font-style: italic;
}

.dz-preview .progress,
.dz-preview .progess-bar {
  height: 0.5rem;
}

.dz-preview .progress {
  position: absolute;
  left: 1.25rem;
  right: 1.25rem;
  top: 50%;
  margin-top: -0.25rem;
  z-index: 30;
}

.dz-complete .progress {
  display: none;
}

.dz-thumbnail {
  position: relative;
  padding: 0.625rem;
  height: 7.5rem;
  text-align: center;
  box-sizing: content-box;
}
.dz-thumbnail > img,
.dz-thumbnail .dz-nopreview {
  top: 50%;
  position: relative;
  transform: translateY(-50%) scale(1);
  margin: 0 auto;
  display: block;
}
.dz-thumbnail > img {
  max-height: 100%;
  max-width: 100%;
}

.dz-nopreview {
  font-weight: 600;
  text-transform: uppercase;
  font-size: 0.6875rem;
}

.dz-thumbnail img[src] ~ .dz-nopreview {
  display: none;
}

.dz-remove {
  display: block;
  text-align: center;
  padding: 0.375rem 0;
  font-size: 0.75rem;
}
.dz-remove:hover, .dz-remove:focus {
  text-decoration: none;
  border-top-color: transparent;
}

.dz-error-mark,
.dz-success-mark {
  position: absolute;
  left: 50%;
  top: 50%;
  display: none;
  margin-left: -1.875rem;
  margin-top: -1.875rem;
  height: 3.75rem;
  width: 3.75rem;
  border-radius: 50%;
  background-position: center center;
  background-size: 1.875rem 1.875rem;
  background-repeat: no-repeat;
  box-shadow: 0 0 1.25rem rgba(0, 0, 0, 0.06);
}

.dz-success-mark {
  background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%235cb85c' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3E%3C/svg%3E");
}

.dz-error-mark {
  background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23d9534f' viewBox='-2 -2 7 7'%3E%3Cpath stroke='%23d9534f' d='M0 0l3 3m0-3L0 3'/%3E%3Ccircle r='.5'/%3E%3Ccircle cx='3' r='.5'/%3E%3Ccircle cy='3' r='.5'/%3E%3Ccircle cx='3' cy='3' r='.5'/%3E%3C/svg%3E");
}

.dz-error-message {
  position: absolute;
  top: -1px;
  left: -1px;
  bottom: -1px;
  right: -1px;
  display: none;
  color: #fff;
  z-index: 40;
  padding: 0.75rem;
  text-align: left;
  overflow: auto;
  font-weight: 600;
}
[dir=rtl] .dz-error-message {
  text-align: right;
}

.dz-error .dz-error-message {
  display: none;
}
.dz-error .dz-error-mark {
  display: block;
}
.dz-error:hover .dz-error-message {
  display: block;
}
.dz-error:hover .dz-error-mark {
  display: none;
}

.dz-success .dz-success-mark {
  display: block;
}

[dir=rtl] .dz-hidden-input {
  left: auto !important;
  right: 0 !important;
}

.light-style .dropzone {
  border: 2px dashed #d4d8dd;
}
.light-style .dz-preview {
  border: 0 solid #d4d8dd;
  border-radius: 0.25rem;
  box-shadow: 0 2px 14px rgba(38, 60, 85, 0.16);
}
.light-style .dz-message {
  color: #516377;
}
.light-style .dz-message .note {
  color: #677788;
}
.light-style .dz-thumbnail {
  border-bottom: 1px solid #d4d8dd;
  background: rgba(38, 60, 85, 0.025);
  border-top-left-radius: calc(0.25rem - 1px);
  border-top-right-radius: calc(0.25rem - 1px);
}
.light-style .dz-size {
  color: #a8b1bb;
}
.light-style .dz-remove {
  color: #677788;
  border-top: 1px solid #d4d8dd;
  border-bottom-right-radius: calc(0.25rem - 1px);
  border-bottom-left-radius: calc(0.25rem - 1px);
}
.light-style .dz-remove:hover, .light-style .dz-remove:focus {
  color: #677788;
  background: rgba(38, 60, 85, 0.1);
}
.light-style .dz-nopreview {
  color: #a8b1bb;
}
.light-style .dz-error-mark,
.light-style .dz-success-mark {
  background-color: rgba(73, 85, 99, 0.5);
}
.light-style .dz-error-message {
  background: rgba(255, 91, 92, 0.8);
  border-top-left-radius: 0.25rem;
  border-top-right-radius: 0.25rem;
}
@media (min-width: 576px) {
  .light-style .dz-preview {
    display: inline-block;
    width: 11.25rem;
  }
  .light-style .dz-thumbnail {
    width: 10rem;
  }
}

.dark-style .dropzone {
  border: 2px dashed #36445d;
}
.dark-style .dz-preview {
  background: #283144;
  border: 0 solid #36445d;
  border-radius: 0.25rem;
  box-shadow: 0 0.125rem 0.875rem 0 rgba(0, 0, 0, 0.16);
}
.dark-style .dz-message {
  color: #516377;
}
.dark-style .dz-message .note {
  color: #a1b0cb;
}
.dark-style .dz-filename {
  background: #283144;
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
  border-bottom: 0 solid #36445d;
}
.dark-style .dz-size {
  color: #8295ba;
}
.dark-style .dz-thumbnail {
  border-bottom: 1px solid #36445d;
  background: rgba(255, 255, 255, 0.015);
  border-top-left-radius: calc(0.25rem - 1px);
  border-top-right-radius: calc(0.25rem - 1px);
}
.dark-style .dz-nopreview {
  color: #8295ba;
}
.dark-style .dz-remove {
  color: #a1b0cb;
  border-top: 1px solid #36445d;
  border-bottom-right-radius: calc(0.25rem - 1px);
  border-bottom-left-radius: calc(0.25rem - 1px);
}
.dark-style .dz-remove:hover, .dark-style .dz-remove:focus {
  color: #a1b0cb;
  background: rgba(255, 255, 255, 0.75);
}
.dark-style .dz-error-mark,
.dark-style .dz-success-mark {
  background-color: rgba(113, 119, 132, 0.5);
}
.dark-style .dz-error-message {
  background: rgba(255, 91, 92, 0.8);
  border-top-left-radius: 0.25rem;
  border-top-right-radius: 0.25rem;
}
@media (min-width: 576px) {
  .dark-style .dz-preview {
    display: inline-block;
    width: 11.25rem;
  }
  .dark-style .dz-thumbnail {
    width: 10rem;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlbmRvci9saWJzL2Ryb3B6b25lL2Ryb3B6b25lLmNzcyIsInZlbmRvci9saWJzL2Ryb3B6b25lL2Ryb3B6b25lLnNjc3MiLCIuLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL3Njc3MvbWl4aW5zL19icmVha3BvaW50cy5zY3NzIiwiLi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9zY3NzL21peGlucy9fYm9yZGVyLXJhZGl1cy5zY3NzIiwidmVuZG9yL3Njc3MvX2N1c3RvbS12YXJpYWJsZXMvX3N1cHBvcnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFlQTtFQUNFLFdBQUE7RUFDQSxrQkFBQTtFQ3FCRixlRGhDaUI7RUNpQ2YsZUFBQTtFRG5CQSx3QkNvTkU7QURsT0o7QUFpQkU7RUFDRSxZQUFBO0VDd0JGLG1CQUFBO0FEdENGO0FDMENJO0VBQ0EsbUJBQUE7QUR4Q0o7QUMwQ0k7RUR0QkUsWUFBQTtBQWpCTjs7QUNpREE7RUFDRSxtQkNIRTtBRjNDSjtBQXFCRTtFQzRCRixvQkUxQkk7QUhwQko7O0FDb0RJO0VBQ0EsMkJBQUE7RUFDQSx1QkFBQTtFRDFCQSwyQkFBQTtFQUNBLHFCQUFBO0VDOEJKLHNCQUFBO0VBQ0UsMEJBQUE7RUFDQSxnQkFBQTtBRG5ERjtBQ3NERTtFQUNBLHdCQUFBO0FEcERGOztBQTZCQTtFQytCRSxhQUFBO0FEeERGOztBQTZCQTtFQytCRSxjQUFBO0VEN0JBLGdCQUFBO0VDK0JBLGtCQUFBO0FEeERGO0FDMERJO0VEN0JBLGdCQUFBO0VBQ0EsY0FBQTtFQ2dDSixvQkFBQTtBRHpEQTs7QUErQkE7RUNpQ0Esa0JBQUE7RUFBQSxtQkFBQTtFQUVFLHlCQUFBO0VEL0JBLGdCQUFBO0VBQ0Esb0JBQUE7RUNpQ0YsdUJBQUE7RUFDRSxlQUFBO0FENURGOztBQWdDQTtFQ2lDRSxrQkFBQTtFRC9CQSxXQUFBO0VBQ0EsZ0JBQUE7RUNpQ0YscUNBQUE7RUFDRSxnQkFBQTtFRC9CQSxtQkFBQTtFQUNBLHVCQUFBO0FBN0JG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eUZJO0VBQ0UsY0F6Uk87QUFrTWI7QUEwRkk7RUFDRSxjQS9TTztFQWdUUCw2QkFBQTtFQzdUTiwrQ0FBQTtFQUNFLDhDQUFBO0FEc09GO0FBMEZNO0VBRUUsY0F0VEs7RUF1VEwscUNDbldSO0FEMFFBO0FBNkZJOztFQUVFLDBDQUFBO0FBM0ZOO0FBOEZJO0VBQ0Usa0NBQUE7RUNoV0YsK0JBQUE7RUFDQSxnQ0FBQTtBRHFRSjtBQzVOQTtFRDRUTTtJQUNFLHFCQUFBO0lBQ0EsZUFBQTtFQTdGTjtFQWdHSTtJQUNFLFlDdllKO0VEeVNGO0FBQ0Y7QUFDQSxxNHBGQUFxNHBGIiwiZmlsZSI6InZlbmRvci9saWJzL2Ryb3B6b25lL2Ryb3B6b25lLmRpc3QuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gRHJvcHpvbmVcblxuQHVzZSAnLi4vLi4vc2Nzcy9fYm9vdHN0cmFwLWV4dGVuZGVkL2luY2x1ZGUnIGFzIGxpZ2h0O1xuQHVzZSAnLi4vLi4vc2Nzcy9fYm9vdHN0cmFwLWV4dGVuZGVkL2luY2x1ZGUtZGFyaycgYXMgZGFyaztcbkBpbXBvcnQgJy4uLy4uL3Njc3MvX2N1c3RvbS12YXJpYWJsZXMvbGlicyc7XG5cbiRkei1ib3gtcGFkZGluZzogMS41cmVtICFkZWZhdWx0O1xuJGR6LWljb24tc2l6ZTogMS44NzVyZW0gIWRlZmF1bHQ7XG4kZHotdGh1bWJuYWlsLXdpZHRoOiAxMHJlbSAhZGVmYXVsdDtcbiRkei10aHVtYm5haWwtaGVpZ2h0OiA3LjVyZW0gIWRlZmF1bHQ7XG4kZHotcHJldmlldy1wYWRkaW5nOiAwLjYyNXJlbSAhZGVmYXVsdDtcbiRkei1wcm9ncmVzcy1oZWlnaHQ6IDAuNXJlbSAhZGVmYXVsdDtcbiRkei1pY29uLWJsb2NrLXNpemU6IDMuNzVyZW0gIWRlZmF1bHQ7XG5cbi8vIGNvbW1vbiBzdHlsZXNcbi5kcm9wem9uZSB7XG4gIHdpZHRoOiAxMDAlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHBhZGRpbmc6ICRkei1ib3gtcGFkZGluZztcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBib3JkZXItcmFkaXVzOiBsaWdodC4kYm9yZGVyLXJhZGl1cy1sZztcblxuICAvLyBEaXNhYmxlZFxuICAmOm5vdCguZHotY2xpY2thYmxlKSB7XG4gICAgb3BhY2l0eTogMC41O1xuICAgIGN1cnNvcjogbm90LWFsbG93ZWQ7XG4gIH1cblxuICAvLyBIb3ZlclxuICAmLmR6LWRyYWctaG92ZXIge1xuICAgIGJvcmRlci1zdHlsZTogc29saWQ7XG5cbiAgICAuZHotbWVzc2FnZSB7XG4gICAgICBvcGFjaXR5OiAwLjU7XG4gICAgfVxuICB9XG59XG5cbi5kei1tZXNzYWdlIHtcbiAgZm9udC1zaXplOiBsaWdodC4kaDMtZm9udC1zaXplO1xuXG4gIC5ub3RlIHtcbiAgICBmb250LXNpemU6IGxpZ2h0LiRmb250LXNpemUtYmFzZTtcbiAgfVxufVxuXG4vLyBGYWxsYmFja1xuLmR6LWJyb3dzZXItbm90LXN1cHBvcnRlZCB7XG4gICYuZHJvcHpvbmUtYm94IHtcbiAgICBtaW4taGVpZ2h0OiBhdXRvICFpbXBvcnRhbnQ7XG4gICAgYm9yZGVyOiBub25lICFpbXBvcnRhbnQ7XG4gICAgYm9yZGVyLXJhZGl1czogMCAhaW1wb3J0YW50O1xuICAgIHBhZGRpbmc6IDAgIWltcG9ydGFudDtcbiAgICB3aWR0aDogYXV0byAhaW1wb3J0YW50O1xuICAgIGN1cnNvcjogZGVmYXVsdCAhaW1wb3J0YW50O1xuICAgIHRyYW5zaXRpb246IG5vbmU7XG4gIH1cblxuICAuZHotbWVzc2FnZSB7XG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xuICB9XG59XG5cbi8vIERlZmF1bHQgbWVzc2FnZVxuXG4uZHotc3RhcnRlZCAuZHotbWVzc2FnZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5kei1tZXNzYWdlIHtcbiAgbWFyZ2luOiA1cmVtIDA7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICAubm90ZSB7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW4tdG9wOiAwLjYyNXJlbTtcbiAgfVxufVxuXG4vLyBQcmV2aWV3XG4uZHotcHJldmlldyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgbWFyZ2luOiAkZHotYm94LXBhZGRpbmcgMCAwICRkei1ib3gtcGFkZGluZztcbiAgYmFja2dyb3VuZDogI2ZmZjtcbiAgZm9udC1zaXplOiAwLjgxMjVyZW07XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICBjdXJzb3I6IGRlZmF1bHQ7XG59XG5cbi8vIEZpbGUgaW5mb3JtYXRpb25cbi5kei1maWxlbmFtZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBhZGRpbmc6ICRkei1wcmV2aWV3LXBhZGRpbmcgJGR6LXByZXZpZXctcGFkZGluZyAwICRkei1wcmV2aWV3LXBhZGRpbmc7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuXG4gICY6aG92ZXIge1xuICAgIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gICAgdGV4dC1vdmVyZmxvdzogaW5oZXJpdDtcbiAgfVxufVxuXG4uZHotc2l6ZSB7XG4gIHBhZGRpbmc6IDEuODc1cmVtICRkei1wcmV2aWV3LXBhZGRpbmcgJGR6LXByZXZpZXctcGFkZGluZyAkZHotcHJldmlldy1wYWRkaW5nO1xuICBmb250LXNpemU6IDAuNjg3NXJlbTtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4vLyBQcm9ncmVzc2JhclxuLmR6LXByZXZpZXcgLnByb2dyZXNzLFxuLmR6LXByZXZpZXcgLnByb2dlc3MtYmFyIHtcbiAgaGVpZ2h0OiAkZHotcHJvZ3Jlc3MtaGVpZ2h0O1xufVxuXG4uZHotcHJldmlldyAucHJvZ3Jlc3Mge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDEuMjVyZW07XG4gIHJpZ2h0OiAxLjI1cmVtO1xuICB0b3A6IDUwJTtcbiAgbWFyZ2luLXRvcDogLSRkei1wcm9ncmVzcy1oZWlnaHQgKiAwLjU7XG4gIHotaW5kZXg6IDMwO1xufVxuXG4uZHotY29tcGxldGUgLnByb2dyZXNzIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLy8gVGh1bWJuYWlsXG4uZHotdGh1bWJuYWlsIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBwYWRkaW5nOiAkZHotcHJldmlldy1wYWRkaW5nO1xuICBoZWlnaHQ6ICRkei10aHVtYm5haWwtaGVpZ2h0O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuXG4gID4gaW1nLFxuICAuZHotbm9wcmV2aWV3IHtcbiAgICB0b3A6IDUwJTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpIHNjYWxlKDEpO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG5cbiAgPiBpbWcge1xuICAgIG1heC1oZWlnaHQ6IDEwMCU7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICB9XG59XG5cbi5kei1ub3ByZXZpZXcge1xuICBmb250LXdlaWdodDogNjAwO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LXNpemU6IDAuNjg3NXJlbTtcbn1cblxuLmR6LXRodW1ibmFpbCBpbWdbc3JjXSB+IC5kei1ub3ByZXZpZXcge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4vLyBSZW1vdmUgbGlua1xuLmR6LXJlbW92ZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDAuMzc1cmVtIDA7XG4gIGZvbnQtc2l6ZTogMC43NXJlbTtcblxuICAmOmhvdmVyLFxuICAmOmZvY3VzIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgYm9yZGVyLXRvcC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIH1cbn1cblxuLy8gZXJyb3Ivc3VjY2VzcyBzdGF0ZXNcbi5kei1lcnJvci1tYXJrLFxuLmR6LXN1Y2Nlc3MtbWFyayB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogNTAlO1xuICB0b3A6IDUwJTtcbiAgZGlzcGxheTogbm9uZTtcbiAgbWFyZ2luLWxlZnQ6IC0kZHotaWNvbi1ibG9jay1zaXplICogMC41O1xuICBtYXJnaW4tdG9wOiAtJGR6LWljb24tYmxvY2stc2l6ZSAqIDAuNTtcbiAgaGVpZ2h0OiAkZHotaWNvbi1ibG9jay1zaXplO1xuICB3aWR0aDogJGR6LWljb24tYmxvY2stc2l6ZTtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuICBiYWNrZ3JvdW5kLXNpemU6ICRkei1pY29uLXNpemUgJGR6LWljb24tc2l6ZTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYm94LXNoYWRvdzogMCAwIDEuMjVyZW0gcmdiYSgwLCAwLCAwLCAwLjA2KTtcbn1cblxuLmR6LXN1Y2Nlc3MtbWFyayB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbDtjaGFyc2V0PXV0ZjgsJTNDc3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgdmlld0JveD0nMCAwIDggOCclM0UlM0NwYXRoIGZpbGw9JyUyMzVjYjg1YycgZD0nTTIuMyA2LjczTC42IDQuNTNjLS40LTEuMDQuNDYtMS40IDEuMS0uOGwxLjEgMS40IDMuNC0zLjhjLjYtLjYzIDEuNi0uMjcgMS4yLjdsLTQgNC42Yy0uNDMuNS0uOC40LTEuMS4xeicvJTNFJTNDL3N2ZyUzRVwiKTtcbn1cblxuLmR6LWVycm9yLW1hcmsge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWw7Y2hhcnNldD11dGY4LCUzQ3N2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIGZpbGw9JyUyM2Q5NTM0Zicgdmlld0JveD0nLTIgLTIgNyA3JyUzRSUzQ3BhdGggc3Ryb2tlPSclMjNkOTUzNGYnIGQ9J00wIDBsMyAzbTAtM0wwIDMnLyUzRSUzQ2NpcmNsZSByPScuNScvJTNFJTNDY2lyY2xlIGN4PSczJyByPScuNScvJTNFJTNDY2lyY2xlIGN5PSczJyByPScuNScvJTNFJTNDY2lyY2xlIGN4PSczJyBjeT0nMycgcj0nLjUnLyUzRSUzQy9zdmclM0VcIik7XG59XG5cbi5kei1lcnJvci1tZXNzYWdlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IC0xcHg7XG4gIGxlZnQ6IC0xcHg7XG4gIGJvdHRvbTogLTFweDtcbiAgcmlnaHQ6IC0xcHg7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGNvbG9yOiAjZmZmO1xuICB6LWluZGV4OiA0MDtcbiAgcGFkZGluZzogMC43NXJlbTtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgb3ZlcmZsb3c6IGF1dG87XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG5cbiAgQGluY2x1ZGUgYXBwLXJ0bCB7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gIH1cbn1cblxuLy8gRXJyb3Igc3RhdGVcbi5kei1lcnJvciB7XG4gIC5kei1lcnJvci1tZXNzYWdlIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG5cbiAgLmR6LWVycm9yLW1hcmsge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG5cbiAgJjpob3ZlciB7XG4gICAgLmR6LWVycm9yLW1lc3NhZ2Uge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxuXG4gICAgLmR6LWVycm9yLW1hcmsge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gIH1cbn1cblxuLy8gU3VjY2VzcyBzdGF0ZVxuLmR6LXN1Y2Nlc3MgLmR6LXN1Y2Nlc3MtbWFyayB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vLyBSVExcbkBpbmNsdWRlIGFwcC1ydGwoZmFsc2UpIHtcbiAgLmR6LWhpZGRlbi1pbnB1dCB7XG4gICAgbGVmdDogYXV0byAhaW1wb3J0YW50O1xuICAgIHJpZ2h0OiAwICFpbXBvcnRhbnQ7XG4gIH1cbn1cblxuLy8gTGlnaHQgc3R5bGVcbkBpZiAkZW5hYmxlLWxpZ2h0LXN0eWxlIHtcbiAgLmxpZ2h0LXN0eWxlIHtcbiAgICAkZHotb3ZlcmxheS1iZzogbGlnaHQuJGRhcms7XG4gICAgJGR6LXRodW1ibmFpbC1iZzogbGlnaHQuJGdyYXktMjU7XG4gICAgJGR6LWJvcmRlci1jb2xvcjogbGlnaHQuJGNhcmQtYm9yZGVyLWNvbG9yO1xuXG4gICAgLmRyb3B6b25lIHtcbiAgICAgIGJvcmRlcjogMnB4IGRhc2hlZCAkZHotYm9yZGVyLWNvbG9yO1xuICAgIH1cblxuICAgIC5kei1wcmV2aWV3IHtcbiAgICAgIGJvcmRlcjogbGlnaHQuJGNhcmQtYm9yZGVyLXdpZHRoIHNvbGlkICRkei1ib3JkZXItY29sb3I7XG4gICAgICBib3JkZXItcmFkaXVzOiBsaWdodC4kYm9yZGVyLXJhZGl1cztcbiAgICAgIGJveC1zaGFkb3c6IGxpZ2h0LiRjYXJkLWJveC1zaGFkb3c7XG4gICAgfVxuXG4gICAgLmR6LW1lc3NhZ2Uge1xuICAgICAgY29sb3I6IGxpZ2h0LiRoZWFkaW5ncy1jb2xvcjtcblxuICAgICAgLm5vdGUge1xuICAgICAgICBjb2xvcjogbGlnaHQuJGJvZHktY29sb3I7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLmR6LXRodW1ibmFpbCB7XG4gICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgbGlnaHQucmdiYS10by1oZXgoJGR6LWJvcmRlci1jb2xvcik7XG4gICAgICBiYWNrZ3JvdW5kOiAkZHotdGh1bWJuYWlsLWJnO1xuXG4gICAgICBAaW5jbHVkZSBsaWdodC5ib3JkZXItdG9wLXJhZGl1cyhpZihsaWdodC4kYm9yZGVyLXJhZGl1cywgY2FsYygje2xpZ2h0LiRib3JkZXItcmFkaXVzfSAtIDFweCksIDApKTtcbiAgICB9XG5cbiAgICAuZHotc2l6ZSB7XG4gICAgICBjb2xvcjogbGlnaHQuJHRleHQtbXV0ZWQ7XG4gICAgfVxuXG4gICAgLmR6LXJlbW92ZSB7XG4gICAgICBjb2xvcjogbGlnaHQuJGJvZHktY29sb3I7XG4gICAgICBib3JkZXItdG9wOiAxcHggc29saWQgbGlnaHQucmdiYS10by1oZXgoJGR6LWJvcmRlci1jb2xvcik7XG5cbiAgICAgIEBpbmNsdWRlIGxpZ2h0LmJvcmRlci1ib3R0b20tcmFkaXVzKGlmKGxpZ2h0LiRib3JkZXItcmFkaXVzLCBjYWxjKCN7bGlnaHQuJGJvcmRlci1yYWRpdXN9IC0gMXB4KSwgMCkpO1xuXG4gICAgICAmOmhvdmVyLFxuICAgICAgJjpmb2N1cyB7XG4gICAgICAgIGNvbG9yOiBsaWdodC4kYm9keS1jb2xvcjtcbiAgICAgICAgYmFja2dyb3VuZDogbGlnaHQuJGdyYXktMTAwO1xuICAgICAgfVxuICAgIH1cblxuICAgIC5kei1ub3ByZXZpZXcge1xuICAgICAgY29sb3I6IGxpZ2h0LiR0ZXh0LW11dGVkO1xuICAgIH1cblxuICAgIC5kei1lcnJvci1tYXJrLFxuICAgIC5kei1zdWNjZXNzLW1hcmsge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgkZHotb3ZlcmxheS1iZywgMC41KTtcbiAgICB9XG5cbiAgICAuZHotZXJyb3ItbWVzc2FnZSB7XG4gICAgICBiYWNrZ3JvdW5kOiByZ2JhKG1hcC1nZXQobGlnaHQuJHRoZW1lLWNvbG9ycywgZGFuZ2VyKSwgMC44KTtcblxuICAgICAgQGluY2x1ZGUgbGlnaHQuYm9yZGVyLXRvcC1yYWRpdXMobGlnaHQuJGJvcmRlci1yYWRpdXMpO1xuICAgIH1cblxuICAgIEBpbmNsdWRlIGxpZ2h0Lm1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHtcbiAgICAgIC5kei1wcmV2aWV3IHtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICB3aWR0aDogJGR6LXRodW1ibmFpbC13aWR0aCArICgkZHotcHJldmlldy1wYWRkaW5nICogMik7XG4gICAgICB9XG5cbiAgICAgIC5kei10aHVtYm5haWwge1xuICAgICAgICB3aWR0aDogJGR6LXRodW1ibmFpbC13aWR0aDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLy8gZGFyayBzdHlsZVxuQGlmICRlbmFibGUtZGFyay1zdHlsZSB7XG4gIC5kYXJrLXN0eWxlIHtcbiAgICAkZHotb3ZlcmxheS1iZzogZGFyay4kZGFyaztcbiAgICAkZHotdGh1bWJuYWlsLWJnOiBkYXJrLiRncmF5LTI1O1xuICAgICRkei1ib3JkZXItY29sb3I6IGRhcmsuJGNhcmQtYm9yZGVyLWNvbG9yO1xuXG4gICAgLmRyb3B6b25lIHtcbiAgICAgIGJvcmRlcjogMnB4IGRhc2hlZCAkZHotYm9yZGVyLWNvbG9yO1xuICAgIH1cblxuICAgIC5kei1wcmV2aWV3IHtcbiAgICAgIGJhY2tncm91bmQ6IGRhcmsuJGNhcmQtYmc7XG4gICAgICBib3JkZXI6IGRhcmsuJGNhcmQtYm9yZGVyLXdpZHRoIHNvbGlkICRkei1ib3JkZXItY29sb3I7XG4gICAgICBib3JkZXItcmFkaXVzOiBkYXJrLiRib3JkZXItcmFkaXVzO1xuICAgICAgYm94LXNoYWRvdzogZGFyay4kY2FyZC1ib3gtc2hhZG93O1xuICAgIH1cblxuICAgIC5kei1tZXNzYWdlIHtcbiAgICAgIGNvbG9yOiBsaWdodC4kaGVhZGluZ3MtY29sb3I7XG5cbiAgICAgIC5ub3RlIHtcbiAgICAgICAgY29sb3I6IGRhcmsuJGJvZHktY29sb3I7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLmR6LWZpbGVuYW1lIHtcbiAgICAgIGJhY2tncm91bmQ6IGRhcmsuJGNhcmQtYmc7XG4gICAgICBwYWRkaW5nLXRvcDogMC4yNXJlbTtcbiAgICAgIHBhZGRpbmctYm90dG9tOiAwLjI1cmVtO1xuICAgICAgYm9yZGVyLWJvdHRvbTogZGFyay4kY2FyZC1ib3JkZXItd2lkdGggc29saWQgJGR6LWJvcmRlci1jb2xvcjtcbiAgICB9XG5cbiAgICAuZHotc2l6ZSB7XG4gICAgICBjb2xvcjogZGFyay4kdGV4dC1tdXRlZDtcbiAgICB9XG5cbiAgICAuZHotdGh1bWJuYWlsIHtcbiAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkZHotYm9yZGVyLWNvbG9yO1xuICAgICAgYmFja2dyb3VuZDogJGR6LXRodW1ibmFpbC1iZztcblxuICAgICAgQGluY2x1ZGUgZGFyay5ib3JkZXItdG9wLXJhZGl1cyhpZihkYXJrLiRib3JkZXItcmFkaXVzLCBjYWxjKCN7ZGFyay4kYm9yZGVyLXJhZGl1c30gLSAxcHgpLCAwKSk7XG4gICAgfVxuXG4gICAgLmR6LW5vcHJldmlldyB7XG4gICAgICBjb2xvcjogZGFyay4kdGV4dC1tdXRlZDtcbiAgICB9XG5cbiAgICAuZHotcmVtb3ZlIHtcbiAgICAgIGNvbG9yOiBkYXJrLiRib2R5LWNvbG9yO1xuICAgICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICRkei1ib3JkZXItY29sb3I7XG5cbiAgICAgIEBpbmNsdWRlIGRhcmsuYm9yZGVyLWJvdHRvbS1yYWRpdXMoaWYoZGFyay4kYm9yZGVyLXJhZGl1cywgY2FsYygje2RhcmsuJGJvcmRlci1yYWRpdXN9IC0gMXB4KSwgMCkpO1xuXG4gICAgICAmOmhvdmVyLFxuICAgICAgJjpmb2N1cyB7XG4gICAgICAgIGNvbG9yOiBkYXJrLiRib2R5LWNvbG9yO1xuICAgICAgICBiYWNrZ3JvdW5kOiBkYXJrLiRncmF5LTEwMDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAuZHotZXJyb3ItbWFyayxcbiAgICAuZHotc3VjY2Vzcy1tYXJrIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoJGR6LW92ZXJsYXktYmcsIDAuNSk7XG4gICAgfVxuXG4gICAgLmR6LWVycm9yLW1lc3NhZ2Uge1xuICAgICAgYmFja2dyb3VuZDogcmdiYShtYXAtZ2V0KGRhcmsuJHRoZW1lLWNvbG9ycywgZGFuZ2VyKSwgMC44KTtcblxuICAgICAgQGluY2x1ZGUgZGFyay5ib3JkZXItdG9wLXJhZGl1cyhkYXJrLiRib3JkZXItcmFkaXVzKTtcbiAgICB9XG5cbiAgICBAaW5jbHVkZSBkYXJrLm1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHtcbiAgICAgIC5kei1wcmV2aWV3IHtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICB3aWR0aDogJGR6LXRodW1ibmFpbC13aWR0aCArICgkZHotcHJldmlldy1wYWRkaW5nICogMik7XG4gICAgICB9XG5cbiAgICAgIC5kei10aHVtYm5haWwge1xuICAgICAgICB3aWR0aDogJGR6LXRodW1ibmFpbC13aWR0aDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiIsIi8vIERyb3B6b25lXG5cbkB1c2UgJy4uLy4uL3Njc3MvX2Jvb3RzdHJhcC1leHRlbmRlZC9pbmNsdWRlJyBhcyBsaWdodDtcbkB1c2UgJy4uLy4uL3Njc3MvX2Jvb3RzdHJhcC1leHRlbmRlZC9pbmNsdWRlLWRhcmsnIGFzIGRhcms7XG5AaW1wb3J0ICcuLi8uLi9zY3NzL19jdXN0b20tdmFyaWFibGVzL2xpYnMnO1xuXG4kZHotYm94LXBhZGRpbmc6IDEuNXJlbSAhZGVmYXVsdDtcbiRkei1pY29uLXNpemU6IDEuODc1cmVtICFkZWZhdWx0O1xuJGR6LXRodW1ibmFpbC13aWR0aDogMTByZW0gIWRlZmF1bHQ7XG4kZHotdGh1bWJuYWlsLWhlaWdodDogNy41cmVtICFkZWZhdWx0O1xuJGR6LXByZXZpZXctcGFkZGluZzogMC42MjVyZW0gIWRlZmF1bHQ7XG4kZHotcHJvZ3Jlc3MtaGVpZ2h0OiAwLjVyZW0gIWRlZmF1bHQ7XG4kZHotaWNvbi1ibG9jay1zaXplOiAzLjc1cmVtICFkZWZhdWx0O1xuXG4vLyBjb21tb24gc3R5bGVzXG4uZHJvcHpvbmUge1xuICB3aWR0aDogMTAwJTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBwYWRkaW5nOiAkZHotYm94LXBhZGRpbmc7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYm9yZGVyLXJhZGl1czogbGlnaHQuJGJvcmRlci1yYWRpdXMtbGc7XG5cbiAgLy8gRGlzYWJsZWRcbiAgJjpub3QoLmR6LWNsaWNrYWJsZSkge1xuICAgIG9wYWNpdHk6IDAuNTtcbiAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xuICB9XG5cbiAgLy8gSG92ZXJcbiAgJi5kei1kcmFnLWhvdmVyIHtcbiAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xuXG4gICAgLmR6LW1lc3NhZ2Uge1xuICAgICAgb3BhY2l0eTogMC41O1xuICAgIH1cbiAgfVxufVxuXG4uZHotbWVzc2FnZSB7XG4gIGZvbnQtc2l6ZTogbGlnaHQuJGgzLWZvbnQtc2l6ZTtcblxuICAubm90ZSB7XG4gICAgZm9udC1zaXplOiBsaWdodC4kZm9udC1zaXplLWJhc2U7XG4gIH1cbn1cblxuLy8gRmFsbGJhY2tcbi5kei1icm93c2VyLW5vdC1zdXBwb3J0ZWQge1xuICAmLmRyb3B6b25lLWJveCB7XG4gICAgbWluLWhlaWdodDogYXV0byAhaW1wb3J0YW50O1xuICAgIGJvcmRlcjogbm9uZSAhaW1wb3J0YW50O1xuICAgIGJvcmRlci1yYWRpdXM6IDAgIWltcG9ydGFudDtcbiAgICBwYWRkaW5nOiAwICFpbXBvcnRhbnQ7XG4gICAgd2lkdGg6IGF1dG8gIWltcG9ydGFudDtcbiAgICBjdXJzb3I6IGRlZmF1bHQgIWltcG9ydGFudDtcbiAgICB0cmFuc2l0aW9uOiBub25lO1xuICB9XG5cbiAgLmR6LW1lc3NhZ2Uge1xuICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbiAgfVxufVxuXG4vLyBEZWZhdWx0IG1lc3NhZ2VcblxuLmR6LXN0YXJ0ZWQgLmR6LW1lc3NhZ2Uge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4uZHotbWVzc2FnZSB7XG4gIG1hcmdpbjogNXJlbSAwO1xuICBmb250LXdlaWdodDogNTAwO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgLm5vdGUge1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luLXRvcDogMC42MjVyZW07XG4gIH1cbn1cblxuLy8gUHJldmlld1xuLmR6LXByZXZpZXcge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gIG1hcmdpbjogJGR6LWJveC1wYWRkaW5nIDAgMCAkZHotYm94LXBhZGRpbmc7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIGZvbnQtc2l6ZTogMC44MTI1cmVtO1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgY3Vyc29yOiBkZWZhdWx0O1xufVxuXG4vLyBGaWxlIGluZm9ybWF0aW9uXG4uZHotZmlsZW5hbWUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxMDAlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwYWRkaW5nOiAkZHotcHJldmlldy1wYWRkaW5nICRkei1wcmV2aWV3LXBhZGRpbmcgMCAkZHotcHJldmlldy1wYWRkaW5nO1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcblxuICAmOmhvdmVyIHtcbiAgICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICAgIHRleHQtb3ZlcmZsb3c6IGluaGVyaXQ7XG4gIH1cbn1cblxuLmR6LXNpemUge1xuICBwYWRkaW5nOiAxLjg3NXJlbSAkZHotcHJldmlldy1wYWRkaW5nICRkei1wcmV2aWV3LXBhZGRpbmcgJGR6LXByZXZpZXctcGFkZGluZztcbiAgZm9udC1zaXplOiAwLjY4NzVyZW07XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLy8gUHJvZ3Jlc3NiYXJcbi5kei1wcmV2aWV3IC5wcm9ncmVzcyxcbi5kei1wcmV2aWV3IC5wcm9nZXNzLWJhciB7XG4gIGhlaWdodDogJGR6LXByb2dyZXNzLWhlaWdodDtcbn1cblxuLmR6LXByZXZpZXcgLnByb2dyZXNzIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAxLjI1cmVtO1xuICByaWdodDogMS4yNXJlbTtcbiAgdG9wOiA1MCU7XG4gIG1hcmdpbi10b3A6IC0kZHotcHJvZ3Jlc3MtaGVpZ2h0ICogMC41O1xuICB6LWluZGV4OiAzMDtcbn1cblxuLmR6LWNvbXBsZXRlIC5wcm9ncmVzcyB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8vIFRodW1ibmFpbFxuLmR6LXRodW1ibmFpbCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZzogJGR6LXByZXZpZXctcGFkZGluZztcbiAgaGVpZ2h0OiAkZHotdGh1bWJuYWlsLWhlaWdodDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcblxuICA+IGltZyxcbiAgLmR6LW5vcHJldmlldyB7XG4gICAgdG9wOiA1MCU7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKSBzY2FsZSgxKTtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuXG4gID4gaW1nIHtcbiAgICBtYXgtaGVpZ2h0OiAxMDAlO1xuICAgIG1heC13aWR0aDogMTAwJTtcbiAgfVxufVxuXG4uZHotbm9wcmV2aWV3IHtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC1zaXplOiAwLjY4NzVyZW07XG59XG5cbi5kei10aHVtYm5haWwgaW1nW3NyY10gfiAuZHotbm9wcmV2aWV3IHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLy8gUmVtb3ZlIGxpbmtcbi5kei1yZW1vdmUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBwYWRkaW5nOiAwLjM3NXJlbSAwO1xuICBmb250LXNpemU6IDAuNzVyZW07XG5cbiAgJjpob3ZlcixcbiAgJjpmb2N1cyB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIGJvcmRlci10b3AtY29sb3I6IHRyYW5zcGFyZW50O1xuICB9XG59XG5cbi8vIGVycm9yL3N1Y2Nlc3Mgc3RhdGVzXG4uZHotZXJyb3ItbWFyayxcbi5kei1zdWNjZXNzLW1hcmsge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDUwJTtcbiAgdG9wOiA1MCU7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIG1hcmdpbi1sZWZ0OiAtJGR6LWljb24tYmxvY2stc2l6ZSAqIDAuNTtcbiAgbWFyZ2luLXRvcDogLSRkei1pY29uLWJsb2NrLXNpemUgKiAwLjU7XG4gIGhlaWdodDogJGR6LWljb24tYmxvY2stc2l6ZTtcbiAgd2lkdGg6ICRkei1pY29uLWJsb2NrLXNpemU7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcbiAgYmFja2dyb3VuZC1zaXplOiAkZHotaWNvbi1zaXplICRkei1pY29uLXNpemU7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJveC1zaGFkb3c6IDAgMCAxLjI1cmVtIHJnYmEoMCwgMCwgMCwgMC4wNik7XG59XG5cbi5kei1zdWNjZXNzLW1hcmsge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWw7Y2hhcnNldD11dGY4LCUzQ3N2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCA4IDgnJTNFJTNDcGF0aCBmaWxsPSclMjM1Y2I4NWMnIGQ9J00yLjMgNi43M0wuNiA0LjUzYy0uNC0xLjA0LjQ2LTEuNCAxLjEtLjhsMS4xIDEuNCAzLjQtMy44Yy42LS42MyAxLjYtLjI3IDEuMi43bC00IDQuNmMtLjQzLjUtLjguNC0xLjEuMXonLyUzRSUzQy9zdmclM0VcIik7XG59XG5cbi5kei1lcnJvci1tYXJrIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sO2NoYXJzZXQ9dXRmOCwlM0NzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyBmaWxsPSclMjNkOTUzNGYnIHZpZXdCb3g9Jy0yIC0yIDcgNyclM0UlM0NwYXRoIHN0cm9rZT0nJTIzZDk1MzRmJyBkPSdNMCAwbDMgM20wLTNMMCAzJy8lM0UlM0NjaXJjbGUgcj0nLjUnLyUzRSUzQ2NpcmNsZSBjeD0nMycgcj0nLjUnLyUzRSUzQ2NpcmNsZSBjeT0nMycgcj0nLjUnLyUzRSUzQ2NpcmNsZSBjeD0nMycgY3k9JzMnIHI9Jy41Jy8lM0UlM0Mvc3ZnJTNFXCIpO1xufVxuXG4uZHotZXJyb3ItbWVzc2FnZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAtMXB4O1xuICBsZWZ0OiAtMXB4O1xuICBib3R0b206IC0xcHg7XG4gIHJpZ2h0OiAtMXB4O1xuICBkaXNwbGF5OiBub25lO1xuICBjb2xvcjogI2ZmZjtcbiAgei1pbmRleDogNDA7XG4gIHBhZGRpbmc6IDAuNzVyZW07XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIG92ZXJmbG93OiBhdXRvO1xuICBmb250LXdlaWdodDogNjAwO1xuXG4gIEBpbmNsdWRlIGFwcC1ydGwge1xuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICB9XG59XG5cbi8vIEVycm9yIHN0YXRlXG4uZHotZXJyb3Ige1xuICAuZHotZXJyb3ItbWVzc2FnZSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuXG4gIC5kei1lcnJvci1tYXJrIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuXG4gICY6aG92ZXIge1xuICAgIC5kei1lcnJvci1tZXNzYWdlIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIH1cblxuICAgIC5kei1lcnJvci1tYXJrIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuICB9XG59XG5cbi8vIFN1Y2Nlc3Mgc3RhdGVcbi5kei1zdWNjZXNzIC5kei1zdWNjZXNzLW1hcmsge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLy8gUlRMXG5AaW5jbHVkZSBhcHAtcnRsKGZhbHNlKSB7XG4gIC5kei1oaWRkZW4taW5wdXQge1xuICAgIGxlZnQ6IGF1dG8gIWltcG9ydGFudDtcbiAgICByaWdodDogMCAhaW1wb3J0YW50O1xuICB9XG59XG5cbi8vIExpZ2h0IHN0eWxlXG5AaWYgJGVuYWJsZS1saWdodC1zdHlsZSB7XG4gIC5saWdodC1zdHlsZSB7XG4gICAgJGR6LW92ZXJsYXktYmc6IGxpZ2h0LiRkYXJrO1xuICAgICRkei10aHVtYm5haWwtYmc6IGxpZ2h0LiRncmF5LTI1O1xuICAgICRkei1ib3JkZXItY29sb3I6IGxpZ2h0LiRjYXJkLWJvcmRlci1jb2xvcjtcblxuICAgIC5kcm9wem9uZSB7XG4gICAgICBib3JkZXI6IDJweCBkYXNoZWQgJGR6LWJvcmRlci1jb2xvcjtcbiAgICB9XG5cbiAgICAuZHotcHJldmlldyB7XG4gICAgICBib3JkZXI6IGxpZ2h0LiRjYXJkLWJvcmRlci13aWR0aCBzb2xpZCAkZHotYm9yZGVyLWNvbG9yO1xuICAgICAgYm9yZGVyLXJhZGl1czogbGlnaHQuJGJvcmRlci1yYWRpdXM7XG4gICAgICBib3gtc2hhZG93OiBsaWdodC4kY2FyZC1ib3gtc2hhZG93O1xuICAgIH1cblxuICAgIC5kei1tZXNzYWdlIHtcbiAgICAgIGNvbG9yOiBsaWdodC4kaGVhZGluZ3MtY29sb3I7XG5cbiAgICAgIC5ub3RlIHtcbiAgICAgICAgY29sb3I6IGxpZ2h0LiRib2R5LWNvbG9yO1xuICAgICAgfVxuICAgIH1cblxuICAgIC5kei10aHVtYm5haWwge1xuICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIGxpZ2h0LnJnYmEtdG8taGV4KCRkei1ib3JkZXItY29sb3IpO1xuICAgICAgYmFja2dyb3VuZDogJGR6LXRodW1ibmFpbC1iZztcblxuICAgICAgQGluY2x1ZGUgbGlnaHQuYm9yZGVyLXRvcC1yYWRpdXMoaWYobGlnaHQuJGJvcmRlci1yYWRpdXMsIGNhbGMoI3tsaWdodC4kYm9yZGVyLXJhZGl1c30gLSAxcHgpLCAwKSk7XG4gICAgfVxuXG4gICAgLmR6LXNpemUge1xuICAgICAgY29sb3I6IGxpZ2h0LiR0ZXh0LW11dGVkO1xuICAgIH1cblxuICAgIC5kei1yZW1vdmUge1xuICAgICAgY29sb3I6IGxpZ2h0LiRib2R5LWNvbG9yO1xuICAgICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIGxpZ2h0LnJnYmEtdG8taGV4KCRkei1ib3JkZXItY29sb3IpO1xuXG4gICAgICBAaW5jbHVkZSBsaWdodC5ib3JkZXItYm90dG9tLXJhZGl1cyhpZihsaWdodC4kYm9yZGVyLXJhZGl1cywgY2FsYygje2xpZ2h0LiRib3JkZXItcmFkaXVzfSAtIDFweCksIDApKTtcblxuICAgICAgJjpob3ZlcixcbiAgICAgICY6Zm9jdXMge1xuICAgICAgICBjb2xvcjogbGlnaHQuJGJvZHktY29sb3I7XG4gICAgICAgIGJhY2tncm91bmQ6IGxpZ2h0LiRncmF5LTEwMDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAuZHotbm9wcmV2aWV3IHtcbiAgICAgIGNvbG9yOiBsaWdodC4kdGV4dC1tdXRlZDtcbiAgICB9XG5cbiAgICAuZHotZXJyb3ItbWFyayxcbiAgICAuZHotc3VjY2Vzcy1tYXJrIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoJGR6LW92ZXJsYXktYmcsIDAuNSk7XG4gICAgfVxuXG4gICAgLmR6LWVycm9yLW1lc3NhZ2Uge1xuICAgICAgYmFja2dyb3VuZDogcmdiYShtYXAtZ2V0KGxpZ2h0LiR0aGVtZS1jb2xvcnMsIGRhbmdlciksIDAuOCk7XG5cbiAgICAgIEBpbmNsdWRlIGxpZ2h0LmJvcmRlci10b3AtcmFkaXVzKGxpZ2h0LiRib3JkZXItcmFkaXVzKTtcbiAgICB9XG5cbiAgICBAaW5jbHVkZSBsaWdodC5tZWRpYS1icmVha3BvaW50LXVwKHNtKSB7XG4gICAgICAuZHotcHJldmlldyB7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgd2lkdGg6ICRkei10aHVtYm5haWwtd2lkdGggKyAoJGR6LXByZXZpZXctcGFkZGluZyAqIDIpO1xuICAgICAgfVxuXG4gICAgICAuZHotdGh1bWJuYWlsIHtcbiAgICAgICAgd2lkdGg6ICRkei10aHVtYm5haWwtd2lkdGg7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi8vIGRhcmsgc3R5bGVcbkBpZiAkZW5hYmxlLWRhcmstc3R5bGUge1xuICAuZGFyay1zdHlsZSB7XG4gICAgJGR6LW92ZXJsYXktYmc6IGRhcmsuJGRhcms7XG4gICAgJGR6LXRodW1ibmFpbC1iZzogZGFyay4kZ3JheS0yNTtcbiAgICAkZHotYm9yZGVyLWNvbG9yOiBkYXJrLiRjYXJkLWJvcmRlci1jb2xvcjtcblxuICAgIC5kcm9wem9uZSB7XG4gICAgICBib3JkZXI6IDJweCBkYXNoZWQgJGR6LWJvcmRlci1jb2xvcjtcbiAgICB9XG5cbiAgICAuZHotcHJldmlldyB7XG4gICAgICBiYWNrZ3JvdW5kOiBkYXJrLiRjYXJkLWJnO1xuICAgICAgYm9yZGVyOiBkYXJrLiRjYXJkLWJvcmRlci13aWR0aCBzb2xpZCAkZHotYm9yZGVyLWNvbG9yO1xuICAgICAgYm9yZGVyLXJhZGl1czogZGFyay4kYm9yZGVyLXJhZGl1cztcbiAgICAgIGJveC1zaGFkb3c6IGRhcmsuJGNhcmQtYm94LXNoYWRvdztcbiAgICB9XG5cbiAgICAuZHotbWVzc2FnZSB7XG4gICAgICBjb2xvcjogbGlnaHQuJGhlYWRpbmdzLWNvbG9yO1xuXG4gICAgICAubm90ZSB7XG4gICAgICAgIGNvbG9yOiBkYXJrLiRib2R5LWNvbG9yO1xuICAgICAgfVxuICAgIH1cblxuICAgIC5kei1maWxlbmFtZSB7XG4gICAgICBiYWNrZ3JvdW5kOiBkYXJrLiRjYXJkLWJnO1xuICAgICAgcGFkZGluZy10b3A6IDAuMjVyZW07XG4gICAgICBwYWRkaW5nLWJvdHRvbTogMC4yNXJlbTtcbiAgICAgIGJvcmRlci1ib3R0b206IGRhcmsuJGNhcmQtYm9yZGVyLXdpZHRoIHNvbGlkICRkei1ib3JkZXItY29sb3I7XG4gICAgfVxuXG4gICAgLmR6LXNpemUge1xuICAgICAgY29sb3I6IGRhcmsuJHRleHQtbXV0ZWQ7XG4gICAgfVxuXG4gICAgLmR6LXRodW1ibmFpbCB7XG4gICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJGR6LWJvcmRlci1jb2xvcjtcbiAgICAgIGJhY2tncm91bmQ6ICRkei10aHVtYm5haWwtYmc7XG5cbiAgICAgIEBpbmNsdWRlIGRhcmsuYm9yZGVyLXRvcC1yYWRpdXMoaWYoZGFyay4kYm9yZGVyLXJhZGl1cywgY2FsYygje2RhcmsuJGJvcmRlci1yYWRpdXN9IC0gMXB4KSwgMCkpO1xuICAgIH1cblxuICAgIC5kei1ub3ByZXZpZXcge1xuICAgICAgY29sb3I6IGRhcmsuJHRleHQtbXV0ZWQ7XG4gICAgfVxuXG4gICAgLmR6LXJlbW92ZSB7XG4gICAgICBjb2xvcjogZGFyay4kYm9keS1jb2xvcjtcbiAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAkZHotYm9yZGVyLWNvbG9yO1xuXG4gICAgICBAaW5jbHVkZSBkYXJrLmJvcmRlci1ib3R0b20tcmFkaXVzKGlmKGRhcmsuJGJvcmRlci1yYWRpdXMsIGNhbGMoI3tkYXJrLiRib3JkZXItcmFkaXVzfSAtIDFweCksIDApKTtcblxuICAgICAgJjpob3ZlcixcbiAgICAgICY6Zm9jdXMge1xuICAgICAgICBjb2xvcjogZGFyay4kYm9keS1jb2xvcjtcbiAgICAgICAgYmFja2dyb3VuZDogZGFyay4kZ3JheS0xMDA7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLmR6LWVycm9yLW1hcmssXG4gICAgLmR6LXN1Y2Nlc3MtbWFyayB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKCRkei1vdmVybGF5LWJnLCAwLjUpO1xuICAgIH1cblxuICAgIC5kei1lcnJvci1tZXNzYWdlIHtcbiAgICAgIGJhY2tncm91bmQ6IHJnYmEobWFwLWdldChkYXJrLiR0aGVtZS1jb2xvcnMsIGRhbmdlciksIDAuOCk7XG5cbiAgICAgIEBpbmNsdWRlIGRhcmsuYm9yZGVyLXRvcC1yYWRpdXMoZGFyay4kYm9yZGVyLXJhZGl1cyk7XG4gICAgfVxuXG4gICAgQGluY2x1ZGUgZGFyay5tZWRpYS1icmVha3BvaW50LXVwKHNtKSB7XG4gICAgICAuZHotcHJldmlldyB7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgd2lkdGg6ICRkei10aHVtYm5haWwtd2lkdGggKyAoJGR6LXByZXZpZXctcGFkZGluZyAqIDIpO1xuICAgICAgfVxuXG4gICAgICAuZHotdGh1bWJuYWlsIHtcbiAgICAgICAgd2lkdGg6ICRkei10aHVtYm5haWwtd2lkdGg7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCIvLyBCcmVha3BvaW50IHZpZXdwb3J0IHNpemVzIGFuZCBtZWRpYSBxdWVyaWVzLlxuLy9cbi8vIEJyZWFrcG9pbnRzIGFyZSBkZWZpbmVkIGFzIGEgbWFwIG9mIChuYW1lOiBtaW5pbXVtIHdpZHRoKSwgb3JkZXIgZnJvbSBzbWFsbCB0byBsYXJnZTpcbi8vXG4vLyAgICAoeHM6IDAsIHNtOiA1NzZweCwgbWQ6IDc2OHB4LCBsZzogOTkycHgsIHhsOiAxMjAwcHgsIHh4bDogMTQwMHB4KVxuLy9cbi8vIFRoZSBtYXAgZGVmaW5lZCBpbiB0aGUgYCRncmlkLWJyZWFrcG9pbnRzYCBnbG9iYWwgdmFyaWFibGUgaXMgdXNlZCBhcyB0aGUgYCRicmVha3BvaW50c2AgYXJndW1lbnQgYnkgZGVmYXVsdC5cblxuLy8gTmFtZSBvZiB0aGUgbmV4dCBicmVha3BvaW50LCBvciBudWxsIGZvciB0aGUgbGFzdCBicmVha3BvaW50LlxuLy9cbi8vICAgID4+IGJyZWFrcG9pbnQtbmV4dChzbSlcbi8vICAgIG1kXG4vLyAgICA+PiBicmVha3BvaW50LW5leHQoc20sICh4czogMCwgc206IDU3NnB4LCBtZDogNzY4cHgsIGxnOiA5OTJweCwgeGw6IDEyMDBweCwgeHhsOiAxNDAwcHgpKVxuLy8gICAgbWRcbi8vICAgID4+IGJyZWFrcG9pbnQtbmV4dChzbSwgJGJyZWFrcG9pbnQtbmFtZXM6ICh4cyBzbSBtZCBsZyB4bCB4eGwpKVxuLy8gICAgbWRcbkBmdW5jdGlvbiBicmVha3BvaW50LW5leHQoJG5hbWUsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMsICRicmVha3BvaW50LW5hbWVzOiBtYXAta2V5cygkYnJlYWtwb2ludHMpKSB7XG4gICRuOiBpbmRleCgkYnJlYWtwb2ludC1uYW1lcywgJG5hbWUpO1xuICBAaWYgbm90ICRuIHtcbiAgICBAZXJyb3IgXCJicmVha3BvaW50IGAjeyRuYW1lfWAgbm90IGZvdW5kIGluIGAjeyRicmVha3BvaW50c31gXCI7XG4gIH1cbiAgQHJldHVybiBpZigkbiA8IGxlbmd0aCgkYnJlYWtwb2ludC1uYW1lcyksIG50aCgkYnJlYWtwb2ludC1uYW1lcywgJG4gKyAxKSwgbnVsbCk7XG59XG5cbi8vIE1pbmltdW0gYnJlYWtwb2ludCB3aWR0aC4gTnVsbCBmb3IgdGhlIHNtYWxsZXN0IChmaXJzdCkgYnJlYWtwb2ludC5cbi8vXG4vLyAgICA+PiBicmVha3BvaW50LW1pbihzbSwgKHhzOiAwLCBzbTogNTc2cHgsIG1kOiA3NjhweCwgbGc6IDk5MnB4LCB4bDogMTIwMHB4LCB4eGw6IDE0MDBweCkpXG4vLyAgICA1NzZweFxuQGZ1bmN0aW9uIGJyZWFrcG9pbnQtbWluKCRuYW1lLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzKSB7XG4gICRtaW46IG1hcC1nZXQoJGJyZWFrcG9pbnRzLCAkbmFtZSk7XG4gIEByZXR1cm4gaWYoJG1pbiAhPSAwLCAkbWluLCBudWxsKTtcbn1cblxuLy8gTWF4aW11bSBicmVha3BvaW50IHdpZHRoLlxuLy8gVGhlIG1heGltdW0gdmFsdWUgaXMgcmVkdWNlZCBieSAwLjAycHggdG8gd29yayBhcm91bmQgdGhlIGxpbWl0YXRpb25zIG9mXG4vLyBgbWluLWAgYW5kIGBtYXgtYCBwcmVmaXhlcyBhbmQgdmlld3BvcnRzIHdpdGggZnJhY3Rpb25hbCB3aWR0aHMuXG4vLyBTZWUgaHR0cHM6Ly93d3cudzMub3JnL1RSL21lZGlhcXVlcmllcy00LyNtcS1taW4tbWF4XG4vLyBVc2VzIDAuMDJweCByYXRoZXIgdGhhbiAwLjAxcHggdG8gd29yayBhcm91bmQgYSBjdXJyZW50IHJvdW5kaW5nIGJ1ZyBpbiBTYWZhcmkuXG4vLyBTZWUgaHR0cHM6Ly9idWdzLndlYmtpdC5vcmcvc2hvd19idWcuY2dpP2lkPTE3ODI2MVxuLy9cbi8vICAgID4+IGJyZWFrcG9pbnQtbWF4KG1kLCAoeHM6IDAsIHNtOiA1NzZweCwgbWQ6IDc2OHB4LCBsZzogOTkycHgsIHhsOiAxMjAwcHgsIHh4bDogMTQwMHB4KSlcbi8vICAgIDc2Ny45OHB4XG5AZnVuY3Rpb24gYnJlYWtwb2ludC1tYXgoJG5hbWUsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMpIHtcbiAgJG1heDogbWFwLWdldCgkYnJlYWtwb2ludHMsICRuYW1lKTtcbiAgQHJldHVybiBpZigkbWF4IGFuZCAkbWF4ID4gMCwgJG1heCAtIC4wMiwgbnVsbCk7XG59XG5cbi8vIFJldHVybnMgYSBibGFuayBzdHJpbmcgaWYgc21hbGxlc3QgYnJlYWtwb2ludCwgb3RoZXJ3aXNlIHJldHVybnMgdGhlIG5hbWUgd2l0aCBhIGRhc2ggaW4gZnJvbnQuXG4vLyBVc2VmdWwgZm9yIG1ha2luZyByZXNwb25zaXZlIHV0aWxpdGllcy5cbi8vXG4vLyAgICA+PiBicmVha3BvaW50LWluZml4KHhzLCAoeHM6IDAsIHNtOiA1NzZweCwgbWQ6IDc2OHB4LCBsZzogOTkycHgsIHhsOiAxMjAwcHgsIHh4bDogMTQwMHB4KSlcbi8vICAgIFwiXCIgIChSZXR1cm5zIGEgYmxhbmsgc3RyaW5nKVxuLy8gICAgPj4gYnJlYWtwb2ludC1pbmZpeChzbSwgKHhzOiAwLCBzbTogNTc2cHgsIG1kOiA3NjhweCwgbGc6IDk5MnB4LCB4bDogMTIwMHB4LCB4eGw6IDE0MDBweCkpXG4vLyAgICBcIi1zbVwiXG5AZnVuY3Rpb24gYnJlYWtwb2ludC1pbmZpeCgkbmFtZSwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cykge1xuICBAcmV0dXJuIGlmKGJyZWFrcG9pbnQtbWluKCRuYW1lLCAkYnJlYWtwb2ludHMpID09IG51bGwsIFwiXCIsIFwiLSN7JG5hbWV9XCIpO1xufVxuXG4vLyBNZWRpYSBvZiBhdCBsZWFzdCB0aGUgbWluaW11bSBicmVha3BvaW50IHdpZHRoLiBObyBxdWVyeSBmb3IgdGhlIHNtYWxsZXN0IGJyZWFrcG9pbnQuXG4vLyBNYWtlcyB0aGUgQGNvbnRlbnQgYXBwbHkgdG8gdGhlIGdpdmVuIGJyZWFrcG9pbnQgYW5kIHdpZGVyLlxuQG1peGluIG1lZGlhLWJyZWFrcG9pbnQtdXAoJG5hbWUsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMpIHtcbiAgJG1pbjogYnJlYWtwb2ludC1taW4oJG5hbWUsICRicmVha3BvaW50cyk7XG4gIEBpZiAkbWluIHtcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogJG1pbikge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9IEBlbHNlIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG4vLyBNZWRpYSBvZiBhdCBtb3N0IHRoZSBtYXhpbXVtIGJyZWFrcG9pbnQgd2lkdGguIE5vIHF1ZXJ5IGZvciB0aGUgbGFyZ2VzdCBicmVha3BvaW50LlxuLy8gTWFrZXMgdGhlIEBjb250ZW50IGFwcGx5IHRvIHRoZSBnaXZlbiBicmVha3BvaW50IGFuZCBuYXJyb3dlci5cbkBtaXhpbiBtZWRpYS1icmVha3BvaW50LWRvd24oJG5hbWUsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMpIHtcbiAgJG1heDogYnJlYWtwb2ludC1tYXgoJG5hbWUsICRicmVha3BvaW50cyk7XG4gIEBpZiAkbWF4IHtcbiAgICBAbWVkaWEgKG1heC13aWR0aDogJG1heCkge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9IEBlbHNlIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG4vLyBNZWRpYSB0aGF0IHNwYW5zIG11bHRpcGxlIGJyZWFrcG9pbnQgd2lkdGhzLlxuLy8gTWFrZXMgdGhlIEBjb250ZW50IGFwcGx5IGJldHdlZW4gdGhlIG1pbiBhbmQgbWF4IGJyZWFrcG9pbnRzXG5AbWl4aW4gbWVkaWEtYnJlYWtwb2ludC1iZXR3ZWVuKCRsb3dlciwgJHVwcGVyLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzKSB7XG4gICRtaW46IGJyZWFrcG9pbnQtbWluKCRsb3dlciwgJGJyZWFrcG9pbnRzKTtcbiAgJG1heDogYnJlYWtwb2ludC1tYXgoJHVwcGVyLCAkYnJlYWtwb2ludHMpO1xuXG4gIEBpZiAkbWluICE9IG51bGwgYW5kICRtYXggIT0gbnVsbCB7XG4gICAgQG1lZGlhIChtaW4td2lkdGg6ICRtaW4pIGFuZCAobWF4LXdpZHRoOiAkbWF4KSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH0gQGVsc2UgaWYgJG1heCA9PSBudWxsIHtcbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKCRsb3dlciwgJGJyZWFrcG9pbnRzKSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH0gQGVsc2UgaWYgJG1pbiA9PSBudWxsIHtcbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LWRvd24oJHVwcGVyLCAkYnJlYWtwb2ludHMpIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfVxufVxuXG4vLyBNZWRpYSBiZXR3ZWVuIHRoZSBicmVha3BvaW50J3MgbWluaW11bSBhbmQgbWF4aW11bSB3aWR0aHMuXG4vLyBObyBtaW5pbXVtIGZvciB0aGUgc21hbGxlc3QgYnJlYWtwb2ludCwgYW5kIG5vIG1heGltdW0gZm9yIHRoZSBsYXJnZXN0IG9uZS5cbi8vIE1ha2VzIHRoZSBAY29udGVudCBhcHBseSBvbmx5IHRvIHRoZSBnaXZlbiBicmVha3BvaW50LCBub3Qgdmlld3BvcnRzIGFueSB3aWRlciBvciBuYXJyb3dlci5cbkBtaXhpbiBtZWRpYS1icmVha3BvaW50LW9ubHkoJG5hbWUsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMpIHtcbiAgJG1pbjogIGJyZWFrcG9pbnQtbWluKCRuYW1lLCAkYnJlYWtwb2ludHMpO1xuICAkbmV4dDogYnJlYWtwb2ludC1uZXh0KCRuYW1lLCAkYnJlYWtwb2ludHMpO1xuICAkbWF4OiAgYnJlYWtwb2ludC1tYXgoJG5leHQsICRicmVha3BvaW50cyk7XG5cbiAgQGlmICRtaW4gIT0gbnVsbCBhbmQgJG1heCAhPSBudWxsIHtcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogJG1pbikgYW5kIChtYXgtd2lkdGg6ICRtYXgpIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfSBAZWxzZSBpZiAkbWF4ID09IG51bGwge1xuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoJG5hbWUsICRicmVha3BvaW50cykge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9IEBlbHNlIGlmICRtaW4gPT0gbnVsbCB7XG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC1kb3duKCRuZXh0LCAkYnJlYWtwb2ludHMpIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfVxufVxuIiwiLy8gc3R5bGVsaW50LWRpc2FibGUgcHJvcGVydHktZGlzYWxsb3dlZC1saXN0XG4vLyBTaW5nbGUgc2lkZSBib3JkZXItcmFkaXVzXG5cbi8vIEhlbHBlciBmdW5jdGlvbiB0byByZXBsYWNlIG5lZ2F0aXZlIHZhbHVlcyB3aXRoIDBcbkBmdW5jdGlvbiB2YWxpZC1yYWRpdXMoJHJhZGl1cykge1xuICAkcmV0dXJuOiAoKTtcbiAgQGVhY2ggJHZhbHVlIGluICRyYWRpdXMge1xuICAgIEBpZiB0eXBlLW9mKCR2YWx1ZSkgPT0gbnVtYmVyIHtcbiAgICAgICRyZXR1cm46IGFwcGVuZCgkcmV0dXJuLCBtYXgoJHZhbHVlLCAwKSk7XG4gICAgfSBAZWxzZSB7XG4gICAgICAkcmV0dXJuOiBhcHBlbmQoJHJldHVybiwgJHZhbHVlKTtcbiAgICB9XG4gIH1cbiAgQHJldHVybiAkcmV0dXJuO1xufVxuXG4vLyBzY3NzLWRvY3Mtc3RhcnQgYm9yZGVyLXJhZGl1cy1taXhpbnNcbkBtaXhpbiBib3JkZXItcmFkaXVzKCRyYWRpdXM6ICRib3JkZXItcmFkaXVzLCAkZmFsbGJhY2stYm9yZGVyLXJhZGl1czogZmFsc2UpIHtcbiAgQGlmICRlbmFibGUtcm91bmRlZCB7XG4gICAgYm9yZGVyLXJhZGl1czogdmFsaWQtcmFkaXVzKCRyYWRpdXMpO1xuICB9XG4gIEBlbHNlIGlmICRmYWxsYmFjay1ib3JkZXItcmFkaXVzICE9IGZhbHNlIHtcbiAgICBib3JkZXItcmFkaXVzOiAkZmFsbGJhY2stYm9yZGVyLXJhZGl1cztcbiAgfVxufVxuXG5AbWl4aW4gYm9yZGVyLXRvcC1yYWRpdXMoJHJhZGl1czogJGJvcmRlci1yYWRpdXMpIHtcbiAgQGlmICRlbmFibGUtcm91bmRlZCB7XG4gICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogdmFsaWQtcmFkaXVzKCRyYWRpdXMpO1xuICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiB2YWxpZC1yYWRpdXMoJHJhZGl1cyk7XG4gIH1cbn1cblxuQG1peGluIGJvcmRlci1lbmQtcmFkaXVzKCRyYWRpdXM6ICRib3JkZXItcmFkaXVzKSB7XG4gIEBpZiAkZW5hYmxlLXJvdW5kZWQge1xuICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiB2YWxpZC1yYWRpdXMoJHJhZGl1cyk7XG4gICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IHZhbGlkLXJhZGl1cygkcmFkaXVzKTtcbiAgfVxufVxuXG5AbWl4aW4gYm9yZGVyLWJvdHRvbS1yYWRpdXMoJHJhZGl1czogJGJvcmRlci1yYWRpdXMpIHtcbiAgQGlmICRlbmFibGUtcm91bmRlZCB7XG4gICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IHZhbGlkLXJhZGl1cygkcmFkaXVzKTtcbiAgICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiB2YWxpZC1yYWRpdXMoJHJhZGl1cyk7XG4gIH1cbn1cblxuQG1peGluIGJvcmRlci1zdGFydC1yYWRpdXMoJHJhZGl1czogJGJvcmRlci1yYWRpdXMpIHtcbiAgQGlmICRlbmFibGUtcm91bmRlZCB7XG4gICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogdmFsaWQtcmFkaXVzKCRyYWRpdXMpO1xuICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IHZhbGlkLXJhZGl1cygkcmFkaXVzKTtcbiAgfVxufVxuXG5AbWl4aW4gYm9yZGVyLXRvcC1zdGFydC1yYWRpdXMoJHJhZGl1czogJGJvcmRlci1yYWRpdXMpIHtcbiAgQGlmICRlbmFibGUtcm91bmRlZCB7XG4gICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogdmFsaWQtcmFkaXVzKCRyYWRpdXMpO1xuICB9XG59XG5cbkBtaXhpbiBib3JkZXItdG9wLWVuZC1yYWRpdXMoJHJhZGl1czogJGJvcmRlci1yYWRpdXMpIHtcbiAgQGlmICRlbmFibGUtcm91bmRlZCB7XG4gICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IHZhbGlkLXJhZGl1cygkcmFkaXVzKTtcbiAgfVxufVxuXG5AbWl4aW4gYm9yZGVyLWJvdHRvbS1lbmQtcmFkaXVzKCRyYWRpdXM6ICRib3JkZXItcmFkaXVzKSB7XG4gIEBpZiAkZW5hYmxlLXJvdW5kZWQge1xuICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiB2YWxpZC1yYWRpdXMoJHJhZGl1cyk7XG4gIH1cbn1cblxuQG1peGluIGJvcmRlci1ib3R0b20tc3RhcnQtcmFkaXVzKCRyYWRpdXM6ICRib3JkZXItcmFkaXVzKSB7XG4gIEBpZiAkZW5hYmxlLXJvdW5kZWQge1xuICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IHZhbGlkLXJhZGl1cygkcmFkaXVzKTtcbiAgfVxufVxuLy8gc2Nzcy1kb2NzLWVuZCBib3JkZXItcmFkaXVzLW1peGluc1xuIiwiJGVuYWJsZS1saWdodC1zdHlsZTogdHJ1ZTtcbiRlbmFibGUtZGFyay1zdHlsZTogdHJ1ZTtcbiRlbmFibGUtcnRsLXN1cHBvcnQ6IHRydWU7XG5cbkBtaXhpbiBhcHAtbHRyKCRoYXMtY2hpbGQ6IHRydWUpIHtcbiAgQGlmICRlbmFibGUtcnRsLXN1cHBvcnQge1xuICAgIEBpZiAkaGFzLWNoaWxkIHtcbiAgICAgIGh0bWw6bm90KFtkaXI9J3J0bCddKSAmIHtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgICB9XG4gICAgfSBAZWxzZSB7XG4gICAgICBodG1sOm5vdChbZGlyPSdydGwnXSkge1xuICAgICAgICBAY29udGVudDtcbiAgICAgIH1cbiAgICB9XG4gIH0gQGVsc2Uge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbkBtaXhpbiBhcHAtbHRyLXN0eWxlKCkge1xuICBAaWYgJGVuYWJsZS1ydGwtc3VwcG9ydCB7XG4gICAgJjpub3QoW2Rpcj0ncnRsJ10pIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfSBAZWxzZSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuQG1peGluIGFwcC1ydGwoJGhhcy1jaGlsZDogdHJ1ZSkge1xuICBAaWYgJGVuYWJsZS1ydGwtc3VwcG9ydCB7XG4gICAgQGlmICRoYXMtY2hpbGQge1xuICAgICAgW2Rpcj0ncnRsJ10gJiB7XG4gICAgICAgIEBjb250ZW50O1xuICAgICAgfVxuICAgIH0gQGVsc2Uge1xuICAgICAgW2Rpcj0ncnRsJ10ge1xuICAgICAgICBAY29udGVudDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuQG1peGluIGFwcC1ydGwtc3R5bGUoKSB7XG4gIEBpZiAkZW5hYmxlLXJ0bC1zdXBwb3J0IHtcbiAgICAmW2Rpcj0ncnRsJ10ge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9XG59XG4iXX0= */
