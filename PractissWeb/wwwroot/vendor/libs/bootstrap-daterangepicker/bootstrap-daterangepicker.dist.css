.daterangepicker {
  position: absolute;
  max-width: none;
  padding: 0;
  display: none;
  border-radius: 0.3125rem;
}
.daterangepicker tbody:before {
  content: "@";
  display: block;
  line-height: 6px;
  text-indent: -99999px;
}
.daterangepicker .month {
  font-family: "Rubik", "Times New Roman", serif;
  font-weight: 500;
  font-size: 0.9375rem;
}
[dir=rtl] .daterangepicker {
  direction: rtl !important;
}

.daterangepicker:not(.single) .drp-calendar .calendar-table {
  padding: 0 0.3rem 0.3rem;
}

.daterangepicker.auto-apply .drp-buttons {
  display: none;
}

.daterangepicker.show-calendar .drp-calendar,
.daterangepicker.show-calendar .drp-buttons {
  display: block;
}

.daterangepicker .drp-calendar {
  display: none;
}
.daterangepicker .drp-calendar.single .calendar-table {
  border: 0;
}

.daterangepicker.single .drp-selected {
  display: none;
}
.daterangepicker.single .daterangepicker .ranges,
.daterangepicker.single .drp-calendar {
  float: none;
}

.daterangepicker .calendar-table {
  border: 0;
}
.daterangepicker .calendar-table .next,
.daterangepicker .calendar-table .prev {
  position: relative;
  min-width: 1.5rem;
  width: 1.5rem;
  height: 1.5rem;
  display: table-caption;
  border-radius: 50%;
  top: 0.75rem;
}
html:not([dir=rtl]) .daterangepicker .calendar-table .prev {
  left: 0.5rem;
}
[dir=rtl] .daterangepicker .calendar-table .prev {
  right: 0.5rem;
}
html:not([dir=rtl]) .daterangepicker .calendar-table .next {
  right: -0.25rem;
}
[dir=rtl] .daterangepicker .calendar-table .next {
  left: -0.25rem;
}
.daterangepicker .calendar-table .month {
  padding: 0.5rem;
  font-weight: 500;
}
.daterangepicker .calendar-table .next span,
.daterangepicker .calendar-table .prev span {
  position: relative;
  display: inline-block;
  border-width: 0 1px 1px 0;
  border-style: solid;
  border-radius: 0;
  height: 0.45rem;
  width: 0.45rem;
  bottom: 0.45rem;
}
.daterangepicker .calendar-table .prev span {
  margin-right: -0.225rem;
  transform: rotate(135deg);
}
[dir=rtl] .daterangepicker .calendar-table .prev span {
  margin-left: -0.225rem;
  margin-right: 0;
  transform: rotate(-45deg);
}
.daterangepicker .calendar-table .next span {
  margin-left: -0.18rem;
  transform: rotate(-45deg);
}
[dir=rtl] .daterangepicker .calendar-table .next span {
  margin-left: 0;
  margin-right: -0.18rem;
  transform: rotate(135deg);
}
.daterangepicker .calendar-table table {
  border: 0;
  border-spacing: 0;
  border-collapse: collapse;
  margin: 0;
  width: 100%;
}
.daterangepicker .calendar-table th,
.daterangepicker .calendar-table td {
  vertical-align: middle;
  min-width: 2.125rem;
  height: 2.125rem;
  width: 2.125rem;
  line-height: calc(2.125rem - 2px);
  white-space: nowrap;
  text-align: center;
  cursor: pointer;
}

html:not([dir=rtl]) .daterangepicker td.start-date:not(.end-date) {
  border-bottom-right-radius: 0 !important;
  border-top-right-radius: 0 !important;
}
html:not([dir=rtl]) .daterangepicker td.end-date:not(.start-date) {
  border-bottom-left-radius: 0 !important;
  border-top-left-radius: 0 !important;
}
.daterangepicker td.in-range:not(.start-date):not(.end-date) {
  border-radius: 0 !important;
}
[dir=rtl] .daterangepicker td.start-date:not(.end-date) {
  border-bottom-left-radius: 0 !important;
  border-top-left-radius: 0 !important;
}
[dir=rtl] .daterangepicker td.end-date:not(.start-date) {
  border-bottom-right-radius: 0 !important;
  border-top-right-radius: 0 !important;
}

.daterangepicker td.disabled,
.daterangepicker option.disabled {
  cursor: not-allowed;
  text-decoration: line-through;
}

.daterangepicker th.month {
  width: auto;
}

.daterangepicker select.monthselect, .daterangepicker select.yearselect {
  height: auto;
  padding: 1px;
  margin: 0;
  border: 0;
  cursor: default;
}
.daterangepicker select:focus-visible {
  outline: 0;
}
.daterangepicker select.monthselect {
  width: 40%;
  margin-right: 2%;
}
[dir=rtl] .daterangepicker select.monthselect {
  margin-left: 2%;
  margin-right: 0;
}
.daterangepicker select.yearselect {
  width: 40%;
}
.daterangepicker select.hourselect, .daterangepicker select.minuteselect, .daterangepicker select.secondselect, .daterangepicker select.ampmselect {
  outline: 0;
  width: 3.125rem;
  padding: 2px;
  margin: 0 auto;
}

.daterangepicker .calendar-time {
  position: relative;
  line-height: 30px;
  text-align: center;
  margin: 0 auto;
}
.daterangepicker .calendar-time select.disabled {
  cursor: not-allowed;
}

.daterangepicker .drp-buttons {
  padding: 0.5rem 0.8125rem;
  clear: both;
  display: none;
  text-align: right;
  vertical-align: middle;
  border-top: 1px solid;
}
.daterangepicker .drp-buttons .btn {
  margin-left: 0.2rem;
}
[dir=rtl] .daterangepicker .drp-buttons {
  text-align: left;
}
[dir=rtl] .daterangepicker .drp-buttons .btn {
  margin-left: 0;
  margin-right: 0.2rem;
}

.daterangepicker .calendar-table td {
  border-radius: 50%;
}

.daterangepicker .drp-selected {
  width: 100%;
  padding-bottom: 0.2rem;
  display: block;
  font-size: 0.813rem;
}
html:not([dir=rtl]) .daterangepicker .drp-selected {
  margin-right: 0.4rem;
}
[dir=rtl] .daterangepicker .drp-selected {
  margin-left: 0.4rem;
}

.daterangepicker .ranges {
  text-align: left;
  float: none;
  margin: 0;
}
.daterangepicker .ranges ul {
  padding: 0;
  margin: 0 auto;
  list-style: none;
  width: 100%;
}
[dir=rtl] .daterangepicker .ranges {
  text-align: right;
}

.daterangepicker.show-calendar .ranges {
  border-bottom: 1px solid;
}
.daterangepicker.show-calendar .ranges:empty {
  display: none;
}

html:not([dir=rtl]) .daterangepicker .drp-calendar.right {
  padding-left: 1px;
}
[dir=rtl] .daterangepicker .drp-calendar.right {
  padding-right: 1px;
}

.daterangepicker .calendar-table thead tr:last-child th {
  border-radius: 0 !important;
  font-size: 0.813rem;
  font-weight: normal;
}

.daterangepicker.with-week-numbers .drp-calendar.left thead tr:first-child th:first-child {
  display: none;
}

@media (min-width: 768px) {
  .daterangepicker .drp-calendar {
    padding: 0.2rem;
  }
}
.light-style .daterangepicker {
  margin-top: 0.125rem;
  z-index: 1091 !important;
  border: 0 solid transparent;
  width: 15.275rem;
  box-shadow: 0 0.25rem 1rem rgba(147, 158, 170, 0.45);
  background-color: #fff;
}
.light-style .daterangepicker.drop-up {
  margin-top: -0.125rem;
}
.light-style .daterangepicker.with-week-numbers {
  width: 17.4rem;
}
.light-style .daterangepicker .month {
  color: #516377;
}
.light-style .daterangepicker td.active:not(.off) {
  box-shadow: 0 0.125rem 0.25rem rgba(147, 158, 170, 0.4);
}
.light-style .daterangepicker .drp-buttons,
.light-style .daterangepicker .ranges {
  border-color: #d4d8dd;
}
.light-style .daterangepicker td.week,
.light-style .daterangepicker th.week {
  color: #677788;
  background: #f2f3f5;
  border-radius: 0;
}
.light-style .daterangepicker td.disabled,
.light-style .daterangepicker option.disabled {
  color: #a8b1bb;
}
.light-style .daterangepicker td.available:not(.active):hover,
.light-style .daterangepicker th.available:hover:not(.prev, .next) {
  background: #f2f3f5;
}
.light-style .daterangepicker td.off {
  color: #a8b1bb;
}
.light-style .daterangepicker .ranges li {
  cursor: pointer;
  padding: 0.5rem 1rem;
}
.light-style .daterangepicker .ranges li:hover {
  background-color: rgba(38, 60, 85, 0.06);
}
.light-style .daterangepicker select {
  color: #677788;
}
.light-style .daterangepicker select.hourselect, .light-style .daterangepicker select.minuteselect, .light-style .daterangepicker select.secondselect, .light-style .daterangepicker select.ampmselect {
  background: rgba(38, 60, 85, 0.1);
  font-size: 0.813rem;
  color: #677788;
  border: 1px solid transparent;
  border-radius: 0.1875rem;
}
.light-style .daterangepicker select.monthselect option, .light-style .daterangepicker select.yearselect option {
  color: #677788;
  background: #fff;
}
.light-style .daterangepicker select.monthselect option:disabled, .light-style .daterangepicker select.yearselect option:disabled {
  color: #a8b1bb;
}
.light-style .daterangepicker .calendar-time select.disabled {
  color: #a8b1bb;
}
@media (min-width: 768px) {
  .light-style .daterangepicker:not(.single) {
    width: auto !important;
  }
  .light-style .daterangepicker:not(.single):not(.single) .drp-selected {
    width: auto;
    padding: 0;
    display: inline-block;
  }
  .light-style:not([dir=rtl]) .daterangepicker:not(.single) .drp-calendar {
    float: left;
  }
  .light-style:not([dir=rtl]) .daterangepicker:not(.single) .drp-calendar.left {
    padding-right: 0;
  }
  .light-style:not([dir=rtl]) .daterangepicker:not(.single) .ranges {
    float: left;
  }
  .light-style:not([dir=rtl]) .daterangepicker:not(.single) .drp-calendar.left {
    border-right: 1px solid #d4d8dd;
  }
  .light-style[dir=rtl] .daterangepicker:not(.single) .drp-calendar {
    float: right;
  }
  .light-style[dir=rtl] .daterangepicker:not(.single) .drp-calendar.left {
    padding-left: 0;
  }
  .light-style[dir=rtl] .daterangepicker:not(.single) .ranges {
    float: right;
  }
  .light-style[dir=rtl] .daterangepicker:not(.single) .drp-calendar.left {
    border-left: 1px solid #d4d8dd;
  }
}
@media (max-width: 767.98px) {
  .light-style .daterangepicker:not(.single) .drp-calendar.left {
    border-bottom: 1px solid #d4d8dd;
  }
}

.dark-style .daterangepicker {
  box-shadow: 0 0.25rem 1rem rgba(0, 0, 0, 0.25);
  width: 15.275rem;
  margin-top: 0.125rem;
  background-color: #283144;
  border: 0 solid transparent;
  z-index: 1091 !important;
}
.dark-style .daterangepicker.with-week-numbers {
  width: 17.4rem;
}
.dark-style .daterangepicker.drop-up {
  margin-top: -0.125rem;
}
.dark-style .daterangepicker .month {
  color: #d8deea;
}
.dark-style .daterangepicker td.active:not(.off) {
  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.2);
}
.dark-style .daterangepicker .drp-buttons,
.dark-style .daterangepicker .ranges {
  border-color: #36445d;
}
.dark-style .daterangepicker td.week,
.dark-style .daterangepicker th.week {
  color: #a1b0cb;
  background: #2e374a;
  border-radius: 0;
}
.dark-style .daterangepicker td.available:not(.active):hover,
.dark-style .daterangepicker th.available:hover:not(.prev, .next) {
  background: rgba(99, 123, 169, 0.06);
}
.dark-style .daterangepicker td.disabled,
.dark-style .daterangepicker option.disabled {
  color: #8295ba;
}
.dark-style .daterangepicker td.off {
  color: #8295ba;
}
.dark-style .daterangepicker .ranges li {
  cursor: pointer;
  padding: 0.5rem 1rem;
}
.dark-style .daterangepicker .ranges li:hover {
  background-color: rgba(99, 123, 169, 0.08);
}
.dark-style .daterangepicker select {
  color: #a1b0cb;
}
.dark-style .daterangepicker select.hourselect, .dark-style .daterangepicker select.minuteselect, .dark-style .daterangepicker select.secondselect, .dark-style .daterangepicker select.ampmselect {
  background: #36445d;
  border: 1px solid transparent;
  border-radius: 0.1875rem;
  font-size: 0.813rem;
  color: #a1b0cb;
}
.dark-style .daterangepicker select.monthselect option, .dark-style .daterangepicker select.yearselect option {
  color: #a1b0cb;
  background: #283144;
}
.dark-style .daterangepicker select.monthselect option:disabled, .dark-style .daterangepicker select.yearselect option:disabled {
  color: #8295ba;
}
.dark-style .daterangepicker .calendar-time select.disabled {
  color: #8295ba;
}
@media (min-width: 768px) {
  .dark-style .daterangepicker:not(.single) {
    width: auto !important;
  }
  .dark-style .daterangepicker:not(.single):not(.single) .drp-selected {
    display: inline-block;
    width: auto;
    padding: 0;
  }
  .dark-style:not([dir=rtl]) .daterangepicker:not(.single) .drp-calendar {
    float: left;
  }
  .dark-style:not([dir=rtl]) .daterangepicker:not(.single) .drp-calendar.left {
    padding-right: 0;
  }
  .dark-style:not([dir=rtl]) .daterangepicker:not(.single) .drp-calendar.left {
    border-right: 1px solid #36445d;
  }
  .dark-style:not([dir=rtl]) .daterangepicker:not(.single) .ranges {
    float: left;
  }
  .dark-style[dir=rtl] .daterangepicker:not(.single) .drp-calendar {
    float: right;
  }
  .dark-style[dir=rtl] .daterangepicker:not(.single) .drp-calendar.left {
    padding-left: 0;
  }
  .dark-style[dir=rtl] .daterangepicker:not(.single) .drp-calendar.left {
    border-left: 1px solid #36445d;
  }
  .dark-style[dir=rtl] .daterangepicker:not(.single) .ranges {
    float: right;
  }
}
@media (max-width: 767.98px) {
  .dark-style .daterangepicker:not(.single) .drp-calendar.left {
    border-bottom: 1px solid #36445d;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlbmRvci9saWJzL2Jvb3RzdHJhcC1kYXRlcmFuZ2VwaWNrZXIvYm9vdHN0cmFwLWRhdGVyYW5nZXBpY2tlci5jc3MiLCJ2ZW5kb3IvbGlicy9ib290c3RyYXAtZGF0ZXJhbmdlcGlja2VyL2Jvb3RzdHJhcC1kYXRlcmFuZ2VwaWNrZXIuc2NzcyIsInZlbmRvci9zY3NzL19jdXN0b20tdmFyaWFibGVzL19zdXBwb3J0LnNjc3MiLCJ2ZW5kb3Ivc2Nzcy9fYm9vdHN0cmFwLWV4dGVuZGVkL192YXJpYWJsZXMuc2NzcyIsInZlbmRvci9zY3NzL19ib290c3RyYXAtZXh0ZW5kZWQvX3ZhcmlhYmxlcy1kYXJrLnNjc3MiLCIuLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL3Njc3MvbWl4aW5zL19icmVha3BvaW50cy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWNBO0VDa0JJLGtCQUFBO0VBQ0EsZUFBQTtFRGhCRixVQUFBO0VFZ0JJLGFBQUE7RURJRix3QkFnTkY7QUQvT0Y7QUNvQ0U7RURsQkksWUFBQTtFQUNBLGNBQUE7RUNvQk4sZ0JBQUE7RUFDRSxxQkFBQTtBRGxDRjtBQ3FDQTtFQUFBLDhDQTRPSTtFQTFPRixnQkFBQTtFRGxCRSxvQkN1UUY7QUR2UkY7QUFnQk07RUFJRix5QkFBQTtBQWpCSjs7QUFxQkE7RUNxQkUsd0JBdENJO0FEQU47O0FDeUNFO0VBQUEsYUFBQTtBRHJDRjs7QUFxQkE7O0VDdUJFLGNBQUE7QUR2Q0Y7O0FDeUNFO0VBRUUsYUFBQTtBRHZDSjtBQ3dDSTtFQUNBLFNBQUE7QUR0Q0o7O0FBc0JFO0VFdkRJLGFBQUE7QUZxQ047QUFxQkU7O0VDeUJJLFdBQUE7QUQxQ047O0FBdUJBO0VFdENNLFNBQUE7QUZtQk47QUFzQkU7O0VDK0JFLGtCQUFBO0VBQ0EsaUJBQUE7RUQ1QkEsYUFBQTtFQytCRixjQUFBO0VBQUEsc0JBQUE7RUFFRSxrQkFBQTtFQUNBLFlBQUE7QURsREo7QUN2Q0k7RUE4RkEsWUFBQTtBRHBESjtBQWhDTTtFQ3dGSixhQUFBO0FEckRGO0FDN0NJO0VBd0dFLGVBQUE7QUR4RE47QUF0Q007RUNvR0YsY0FBQTtBRDNESjtBQytETTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtBRDdETjtBQ2tFSTs7RUFFQSxrQkFBQTtFQUNBLHFCQUFBO0VBQ0EseUJBQUE7RURsQ0EsbUJBQUE7RUNxQ0YsZ0JBQUE7RUFBQSxlQXJJQTtFQXVJRSxjQXZJRjtFQXdJRSxlQUFBO0FEakVKO0FDb0VJO0VBQ0EsdUJBQUE7RUFDQSx5QkFBQTtBRGxFSjtBQTVETTtFQTZGQSxzQkFBQTtFQ3dDRixlQUFBO0VBQ0UseUJBQUE7QURyRU47QUMwRU07RUFDQSxxQkFBQTtFRHZDRix5QkFBQTtBQWhDSjtBQXJFTTtFQXdHQSxjQUFBO0VDNkNGLHNCQUFBO0VBQ0UseUJBQUE7QUQ1RU47QUNpRk07RUFDQSxTQUFBO0VENUNGLGlCQUFBO0VBQ0EseUJBQUE7RUNnREosU0FBQTtFQUFBLFdBQUE7QURoRkE7QUFxQ0U7O0VDaURGLHNCQUFBO0VBQ0UsbUJEbk0wQjtFQXFKeEIsZ0JBckp3QjtFQXNKeEIsZUF0SndCO0VDc00xQixpQ0FBQTtFQUVFLG1CQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0FEbkZKOztBQXlDSTtFQ2tERix3Q0FBQTtFQUNFLHFDQUFBO0FEdkZKO0FFakdNO0VENExBLHVDQUFBO0VBQ0Esb0NBQUE7QUR4Rk47QUEyQ0U7RUNxREEsMkJBQUE7QUQ3RkY7QUNvR0k7RUR0REUsdUNBQUE7RUFDQSxvQ0FBQTtBQTNDTjtBQ3NHRTtFQUNBLHdDQUFBO0VBQ0EscUNBQUE7QURwR0Y7O0FBaURBOztFQzJERSxtQkFBQTtFQUNBLDZCQUFBO0FEdkdGOztBQWlEQTtFQzBERSxXQUFBO0FEdkdGOztBQzBHSTtFQ3BPRSxZQUFBO0VEd09GLFlBQUE7RUR6REEsU0FBQTtFQzJEQSxTQUFBO0VBQ0UsZUFBQTtBRHpHTjtBQWlERTtFQUNFLFVBQUE7QUEvQ0o7QUFrREU7RUFDRSxVQUFBO0VDNkRKLGdCQUFBO0FENUdBO0FBeklNO0VDd1BKLGVBQUE7RUFDQSxlQUFBO0FENUdGO0FBb0RFO0VFak1JLFVBQUE7QUZnSk47QUFxREU7RUNrRUEsVUFBQTtFRDdERSxlRzlDZTtFRjZHakIsWUFBQTtFQUNFLGNBQUE7QURwSEo7O0FBMERBO0VFaE5NLGtCQUFBO0VEaVJGLGlCQUFBO0VEOURGLGtCQUFBO0VBQ0EsY0FBQTtBQXZERjtBQ3lIRTtFRC9ERSxtQkFBQTtBQXZESjs7QUEyREE7RUVyUE0seUJBQUE7RUR5VEYsV0FBQTtFRGpFRixhQUFBO0VFOU5JLGlCQUFBO0VEa1NGLHNCQUFBO0VEakVGLHFCQUFBO0FBeERGO0FDNkhBO0VBQ0UsbUJBalRFO0FEc0xKO0FBNUtNO0VBd09GLGdCQUFBO0FBekRKO0FDa0lVO0VEdEVKLGNBQUE7RUFDQSxvQkN0UEY7QUQ2TEo7O0FBOERBO0VDK0VJLGtCQUFBO0FEeklKOztBQThEQTtFQytFTSxXQUFBO0VBQ0Esc0JBL1VGO0VBZ1ZFLGNBQUE7RUQ3RUosbUJDaUJFO0FENUVKO0FDeE1JO0VEc1FBLG9CQUFBO0FBM0RKO0FBak1NO0VDZ1ZBLG1CQUFBO0FENUlOOztBQWdFQTtFQUNFLGdCQUFBO0VDb0ZFLFdBQUE7RUFBQSxTQUFBO0FEL0lKO0FBK0RFO0VDcUZFLFVBQUE7RUFBQSxjQUFBO0VBRUUsZ0JBQUE7RUFDQSxXQUFBO0FEakpOO0FBaE5NO0VDcVdGLGlCQUFBO0FEbEpKOztBQ3VKSTtFQUVFLHdCQUFBO0FEckpOO0FDd0pJO0VBQ0UsYUFBQTtBRHRKTjs7QUNwT0k7RUFpWUUsaUJBQUE7QUR6Sk47QUE5Tk07RUM0WEYsa0JBQUE7QUQzSko7O0FBcUVBO0VDOEZRLDJCQUFBO0VBQ0EsbUJBM0hKO0VBNEhJLG1CQUFBO0FEL0pSOztBQ3lLVTtFRXpKRyxhQUFBO0FIWmI7O0FFclFNO0VGbVZKO0lDc0dNLGVBemFKO0VEMFBGO0FBQ0Y7QUN1TFU7RUR2R0osb0JBMndCOEI7RUNscUIxQix3QkFBQTtFQUNFLDJCQUFBO0VEdkdOLGdCQzFVQTtFQXNiSSxvREFyTlY7RUFzTlksc0JBdmJOO0FEK1BOO0FDMkxVO0VBQ0UscUJBQUE7QUR6TFo7QUNnTVU7RUQvR0YsY0FsVzJCO0FBb1JuQztBQWlGTTtFQ21ISSxjQTFKUjtBRHZDRjtBQ3FNVTtFQUNFLHVEQTVPVjtBRHlDRjtBQzJNUTs7RURySEYscUJDL0lGO0FENkRKO0FDa05JOztFQUVFLGNBalVBO0VBa1VBLG1CQUFBO0VBQ0EsZ0JBQUE7QURoTk47QUFzRkk7O0VDK0hJLGNBL0pGO0FEbEROO0FDcU5ROztFQUdGLG1CQUFBO0FEcE5OO0FDdU5NO0VBQ0UsY0ExS0Y7QUQzQ047QUN5Tkk7RUFFRSxlQUFBO0VEaElBLG9CQUFBO0FBdkZOO0FDME5JO0VBRUUsd0NBNWZGO0FEbVNKO0FDOE5JO0VBQUEsY0FuV0U7QUR3SU47QUEyRk07RUFJRSxpQ0NwWUo7RUEwZ0JBLG1CQS9QQTtFQWdRRSxjQTlXQTtFRDBPRSw2QkFBQTtFQ3VJSix3QkRoWGU7QUE4SW5CO0FBa0dRO0VDeUlKLGNBMVhFO0VHM0dPLGdCSHZEUDtBRHFUTjtBQWlHVTtFQ3lJSixjQXBOQTtBRG5CTjtBQXFHSTtFQ2dKSSxjQWxPRjtBRGhCTjtBRS9VTTtFRG9rQkk7SUFDRSxzQkFBQTtFRGxQVjtFQ3dQRTtJRzllUyxXQUFBO0lKOFZILFVBQUE7SUtuWU4scUJBQUE7RUxnU0Y7RUM0UFE7SUFDQSxXQUFBO0VEMVBSO0VBeUdRO0lDdUpGLGdCQUFBO0VEN1BOO0VBNEdRO0lDMEpBLFdBQUE7RURuUVI7RUNzUVE7SUFDRSwrQkFBQTtFRHBRVjtFQzhRVTtJRDVKRixZQUFBO0VBL0dSO0VDZ1JRO0lBQ0UsZUFBQTtFRDlRVjtFQW1IUTtJS3haTixZQUFBO0VMd1NGO0VBb0hRO0lBQ0UsOEJBQUE7RUFsSFY7QUFDRjtBQy9RSTtFRHdZSTtJQUNFLGdDQUFBO0VBdEhSO0FBQ0Y7O0FBK0hJO0VBQ0UsOENDdllGO0VEd1lFLGdCQ25lQTtFRG9lQSxvQkE4bUI4QjtFQTdtQjlCLHlCQ3BQQTtFRHFQQSwyQkFBQTtFQUNBLHdCQUFBO0FBNUhOO0FBOEhNO0VBQ0UsY0F6ZjJCO0FBNlhuQztBQStITTtFQUNFLHFCQUFBO0FBN0hSO0FBZ0lNO0VBQ0UsY0M5WE47QURnUUY7QUFnSU07RUFDRSxpREF2YlE7QUF5VGhCO0FBa0lJOztFQUVFLHFCRXJmQTtBRnFYTjtBQW1JSTs7RUFFRSxjQzNhRjtFRDRhRSxtQkFBQTtFQUNBLGdCQUFBO0FBaklOO0FBb0lJOztFQUVFLG9DQUFBO0FBbElOO0FBcUlJOztFQUVFLGNDbGFGO0FEK1JKO0FBc0lJO0VBQ0UsY0N0YUY7QURrU0o7QUF1SUk7RUFDRSxlQUFBO0VBQ0Esb0JBQUE7QUFySU47QUF1SU07RUFDRSwwQ0E5VmlCO0FBeU56QjtBQXlJSTtFQUNFLGNDeGNGO0FEaVVKO0FBeUlNO0VBSUUsbUJBQUE7RUFDQSw2QkFBQTtFQUNBLHdCQWxZVztFQW1ZWCxtQkN0Uko7RUR1UkksY0NsZEo7QUR3VUo7QUFnSlE7RUFDRSxjQ3pkTjtFRDBkTSxtQkN4WVY7QUQwUEE7QUErSVU7RUFDRSxjQ3ZjUjtBRDBUSjtBQW1KSTtFQUNFLGNDOWNGO0FENlRKO0FFM2JNO0VGZ2xCQTtJQUNFLHNCQUFBO0VBbEpOO0VBb0pNO0lBQ0UscUJBQUE7SUFDQSxXQUFBO0lBQ0EsVUFBQTtFQWxKUjtFQXVKTTtJQUNFLFdBQUE7RUFySlI7RUF1SlE7SUFDRSxnQkFBQTtFQXJKVjtFQTBKUTtJQUNFLCtCQUFBO0VBeEpWO0VBMEpRO0lBQ0UsV0FBQTtFQXhKVjtFQThKTTtJQUNFLFlBQUE7RUE1SlI7RUE4SlE7SUFDRSxlQUFBO0VBNUpWO0VBaUtRO0lBQ0UsOEJBQUE7RUEvSlY7RUFpS1E7SUFDRSxZQUFBO0VBL0pWO0FBQ0Y7QUMzWEk7RURpaUJJO0lBQ0UsZ0NBQUE7RUFuS1I7QUFDRjtBQUNBLHl1c0xBQXl1c0wiLCJmaWxlIjoidmVuZG9yL2xpYnMvYm9vdHN0cmFwLWRhdGVyYW5nZXBpY2tlci9ib290c3RyYXAtZGF0ZXJhbmdlcGlja2VyLmRpc3QuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQHVzZSAnLi4vLi4vc2Nzcy9fYm9vdHN0cmFwLWV4dGVuZGVkL2luY2x1ZGUnIGFzIGxpZ2h0O1xuQHVzZSAnLi4vLi4vc2Nzcy9fYm9vdHN0cmFwLWV4dGVuZGVkL2luY2x1ZGUtZGFyaycgYXMgZGFyaztcbkBpbXBvcnQgJy4uLy4uL3Njc3MvX2N1c3RvbS12YXJpYWJsZXMvbGlicyc7XG5cbiRkYXRlcmFuZ2VwaWNrZXItYXJyb3ctc2l6ZTogMC40NXJlbSAhZGVmYXVsdDtcbiRkYXRlcmFuZ2VwaWNrZXItc2VsZWN0LXdpZHRoOiAzLjEyNXJlbSAhZGVmYXVsdDtcbiRkYXRlcmFuZ2VwaWNrZXItY2VsbC1zaXplOiAyLjEyNXJlbSAhZGVmYXVsdDtcbiRkYXRlcmFuZ2VwaWNrZXItcGFkZGluZzogMC4ycmVtICFkZWZhdWx0O1xuJGRhdGVyYW5nZXBpY2tlci1jYWxlbmRhci10YWJsZS1wYWRkaW5nOiAwIDAuM3JlbSAwLjNyZW0gIWRlZmF1bHQ7XG5cbi8vIENhbGN1bGF0ZSB3aWR0aHNcbiRkYXRlcmFuZ2VwaWNrZXItd2lkdGg6ICgkZGF0ZXJhbmdlcGlja2VyLWNlbGwtc2l6ZSAqIDcpKyAoJGRhdGVyYW5nZXBpY2tlci1wYWRkaW5nICogMik7XG4kZGF0ZXJhbmdlcGlja2VyLXdpZHRoLXdpdGgtd2Vla3M6ICRkYXRlcmFuZ2VwaWNrZXItd2lkdGggKyAkZGF0ZXJhbmdlcGlja2VyLWNlbGwtc2l6ZTtcblxuLmRhdGVyYW5nZXBpY2tlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbWF4LXdpZHRoOiBub25lO1xuICBwYWRkaW5nOiAwO1xuICBkaXNwbGF5OiBub25lO1xuICBib3JkZXItcmFkaXVzOiBsaWdodC4kYm9yZGVyLXJhZGl1cy1sZztcblxuICB0Ym9keSB7XG4gICAgLy8hIEZJWDogcGFkZGluZyBvciBtYXJnaW4gdG9wIHdpbGwgbm90IHdvcmsgaW4gdGFibGVcbiAgICAmOmJlZm9yZSB7XG4gICAgICBjb250ZW50OiAnQCc7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIGxpbmUtaGVpZ2h0OiA2cHg7XG4gICAgICB0ZXh0LWluZGVudDogLTk5OTk5cHg7XG4gICAgfVxuICB9XG4gIC5tb250aCB7XG4gICAgZm9udC1mYW1pbHk6IGxpZ2h0LiRmb250LWZhbWlseS1zZXJpZjtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIGZvbnQtc2l6ZTogbGlnaHQuJGZvbnQtc2l6ZS1iYXNlO1xuICB9XG5cbiAgQGluY2x1ZGUgYXBwLXJ0bCB7XG4gICAgZGlyZWN0aW9uOiBydGwgIWltcG9ydGFudDtcbiAgfVxufVxuXG4uZGF0ZXJhbmdlcGlja2VyOm5vdCguc2luZ2xlKSAuZHJwLWNhbGVuZGFyIC5jYWxlbmRhci10YWJsZSB7XG4gIHBhZGRpbmc6ICRkYXRlcmFuZ2VwaWNrZXItY2FsZW5kYXItdGFibGUtcGFkZGluZztcbn1cblxuLmRhdGVyYW5nZXBpY2tlci5hdXRvLWFwcGx5IC5kcnAtYnV0dG9ucyB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5kYXRlcmFuZ2VwaWNrZXIuc2hvdy1jYWxlbmRhciAuZHJwLWNhbGVuZGFyLFxuLmRhdGVyYW5nZXBpY2tlci5zaG93LWNhbGVuZGFyIC5kcnAtYnV0dG9ucyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uZGF0ZXJhbmdlcGlja2VyIC5kcnAtY2FsZW5kYXIge1xuICBkaXNwbGF5OiBub25lO1xuICAmLnNpbmdsZSAuY2FsZW5kYXItdGFibGUge1xuICAgIGJvcmRlcjogMDtcbiAgfVxufVxuXG4uZGF0ZXJhbmdlcGlja2VyLnNpbmdsZSB7XG4gIC5kcnAtc2VsZWN0ZWQge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbiAgLmRhdGVyYW5nZXBpY2tlciAucmFuZ2VzLFxuICAuZHJwLWNhbGVuZGFyIHtcbiAgICBmbG9hdDogbm9uZTtcbiAgfVxufVxuXG4uZGF0ZXJhbmdlcGlja2VyIC5jYWxlbmRhci10YWJsZSB7XG4gIGJvcmRlcjogMDtcblxuICAubmV4dCxcbiAgLnByZXYge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBtaW4td2lkdGg6IDEuNXJlbTtcbiAgICB3aWR0aDogMS41cmVtO1xuICAgIGhlaWdodDogMS41cmVtO1xuICAgIGRpc3BsYXk6IHRhYmxlLWNhcHRpb247XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIHRvcDogMC43NXJlbTtcbiAgfVxuXG4gIC5wcmV2IHtcbiAgICBAaW5jbHVkZSBhcHAtbHRyIHtcbiAgICAgIGxlZnQ6IDAuNXJlbTtcbiAgICB9XG4gICAgQGluY2x1ZGUgYXBwLXJ0bCB7XG4gICAgICByaWdodDogMC41cmVtO1xuICAgIH1cbiAgfVxuXG4gIC5uZXh0IHtcbiAgICBAaW5jbHVkZSBhcHAtbHRyIHtcbiAgICAgIHJpZ2h0OiAtMC4yNXJlbTtcbiAgICB9XG5cbiAgICBAaW5jbHVkZSBhcHAtcnRsIHtcbiAgICAgIGxlZnQ6IC0wLjI1cmVtO1xuICAgIH1cbiAgfVxuXG4gIC5tb250aCB7XG4gICAgcGFkZGluZzogMC41cmVtO1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIH1cblxuICAubmV4dCBzcGFuLFxuICAucHJldiBzcGFuIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGJvcmRlci13aWR0aDogMCAxcHggMXB4IDA7XG4gICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgICBib3JkZXItcmFkaXVzOiAwO1xuICAgIGhlaWdodDogJGRhdGVyYW5nZXBpY2tlci1hcnJvdy1zaXplO1xuICAgIHdpZHRoOiAkZGF0ZXJhbmdlcGlja2VyLWFycm93LXNpemU7XG4gICAgYm90dG9tOiAwLjQ1cmVtO1xuICB9XG5cbiAgLnByZXYgc3BhbiB7XG4gICAgbWFyZ2luLXJpZ2h0OiAtJGRhdGVyYW5nZXBpY2tlci1hcnJvdy1zaXplICogMC41O1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDEzNWRlZyk7XG5cbiAgICBAaW5jbHVkZSBhcHAtcnRsIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAtJGRhdGVyYW5nZXBpY2tlci1hcnJvdy1zaXplICogMC41O1xuICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcbiAgICB9XG4gIH1cblxuICAubmV4dCBzcGFuIHtcbiAgICBtYXJnaW4tbGVmdDogLSRkYXRlcmFuZ2VwaWNrZXItYXJyb3ctc2l6ZSAqIDAuNDtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xuXG4gICAgQGluY2x1ZGUgYXBwLXJ0bCB7XG4gICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICAgIG1hcmdpbi1yaWdodDogLSRkYXRlcmFuZ2VwaWNrZXItYXJyb3ctc2l6ZSAqIDAuNDtcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKDEzNWRlZyk7XG4gICAgfVxuICB9XG5cbiAgdGFibGUge1xuICAgIGJvcmRlcjogMDtcbiAgICBib3JkZXItc3BhY2luZzogMDtcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICAgIG1hcmdpbjogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuXG4gIHRoLFxuICB0ZCB7XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICBtaW4td2lkdGg6ICRkYXRlcmFuZ2VwaWNrZXItY2VsbC1zaXplO1xuICAgIGhlaWdodDogJGRhdGVyYW5nZXBpY2tlci1jZWxsLXNpemU7XG4gICAgd2lkdGg6ICRkYXRlcmFuZ2VwaWNrZXItY2VsbC1zaXplO1xuICAgIGxpbmUtaGVpZ2h0OiBjYWxjKCN7JGRhdGVyYW5nZXBpY2tlci1jZWxsLXNpemV9IC0gMnB4KTtcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gIH1cbn1cblxuLmRhdGVyYW5nZXBpY2tlciB0ZCB7XG4gIEBpbmNsdWRlIGFwcC1sdHIge1xuICAgICYuc3RhcnQtZGF0ZTpub3QoLmVuZC1kYXRlKSB7XG4gICAgICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMCAhaW1wb3J0YW50O1xuICAgICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDAgIWltcG9ydGFudDtcbiAgICB9XG5cbiAgICAmLmVuZC1kYXRlOm5vdCguc3RhcnQtZGF0ZSkge1xuICAgICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMCAhaW1wb3J0YW50O1xuICAgICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMCAhaW1wb3J0YW50O1xuICAgIH1cbiAgfVxuXG4gICYuaW4tcmFuZ2U6bm90KC5zdGFydC1kYXRlKTpub3QoLmVuZC1kYXRlKSB7XG4gICAgYm9yZGVyLXJhZGl1czogMCAhaW1wb3J0YW50O1xuICB9XG5cbiAgQGluY2x1ZGUgYXBwLXJ0bCB7XG4gICAgJi5zdGFydC1kYXRlOm5vdCguZW5kLWRhdGUpIHtcbiAgICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDAgIWltcG9ydGFudDtcbiAgICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDAgIWltcG9ydGFudDtcbiAgICB9XG5cbiAgICAmLmVuZC1kYXRlOm5vdCguc3RhcnQtZGF0ZSkge1xuICAgICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDAgIWltcG9ydGFudDtcbiAgICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAwICFpbXBvcnRhbnQ7XG4gICAgfVxuICB9XG59XG5cbi5kYXRlcmFuZ2VwaWNrZXIgdGQuZGlzYWJsZWQsXG4uZGF0ZXJhbmdlcGlja2VyIG9wdGlvbi5kaXNhYmxlZCB7XG4gIGN1cnNvcjogbm90LWFsbG93ZWQ7XG4gIHRleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoO1xufVxuXG4uZGF0ZXJhbmdlcGlja2VyIHRoLm1vbnRoIHtcbiAgd2lkdGg6IGF1dG87XG59XG4uZGF0ZXJhbmdlcGlja2VyIHNlbGVjdCB7XG4gICYubW9udGhzZWxlY3QsXG4gICYueWVhcnNlbGVjdCB7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIHBhZGRpbmc6IDFweDtcbiAgICBtYXJnaW46IDA7XG4gICAgYm9yZGVyOiAwO1xuICAgIGN1cnNvcjogZGVmYXVsdDtcbiAgfVxuICAmOmZvY3VzLXZpc2libGUge1xuICAgIG91dGxpbmU6IDA7XG4gIH1cblxuICAmLm1vbnRoc2VsZWN0IHtcbiAgICB3aWR0aDogNDAlO1xuICAgIG1hcmdpbi1yaWdodDogMiU7XG5cbiAgICBAaW5jbHVkZSBhcHAtcnRsIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAyJTtcbiAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICB9XG4gIH1cblxuICAmLnllYXJzZWxlY3Qge1xuICAgIHdpZHRoOiA0MCU7XG4gIH1cblxuICAmLmhvdXJzZWxlY3QsXG4gICYubWludXRlc2VsZWN0LFxuICAmLnNlY29uZHNlbGVjdCxcbiAgJi5hbXBtc2VsZWN0IHtcbiAgICBvdXRsaW5lOiAwO1xuICAgIHdpZHRoOiAkZGF0ZXJhbmdlcGlja2VyLXNlbGVjdC13aWR0aDtcbiAgICBwYWRkaW5nOiAycHg7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gIH1cbn1cblxuLmRhdGVyYW5nZXBpY2tlciAuY2FsZW5kYXItdGltZSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbGluZS1oZWlnaHQ6IDMwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luOiAwIGF1dG87XG5cbiAgc2VsZWN0LmRpc2FibGVkIHtcbiAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xuICB9XG59XG5cbi5kYXRlcmFuZ2VwaWNrZXIgLmRycC1idXR0b25zIHtcbiAgcGFkZGluZzogMC41cmVtIDAuODEyNXJlbTtcbiAgY2xlYXI6IGJvdGg7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICBib3JkZXItdG9wOiAxcHggc29saWQ7XG5cbiAgLmJ0biB7XG4gICAgbWFyZ2luLWxlZnQ6ICRkYXRlcmFuZ2VwaWNrZXItcGFkZGluZztcbiAgfVxuXG4gIEBpbmNsdWRlIGFwcC1ydGwge1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG5cbiAgICAuYnRuIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgICAgbWFyZ2luLXJpZ2h0OiAkZGF0ZXJhbmdlcGlja2VyLXBhZGRpbmc7XG4gICAgfVxuICB9XG59XG5cbi5kYXRlcmFuZ2VwaWNrZXIgLmNhbGVuZGFyLXRhYmxlIHRkIHtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xufVxuXG4uZGF0ZXJhbmdlcGlja2VyIC5kcnAtc2VsZWN0ZWQge1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZy1ib3R0b206ICRkYXRlcmFuZ2VwaWNrZXItcGFkZGluZztcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtc2l6ZTogbGlnaHQuJGZvbnQtc2l6ZS1zbTtcblxuICBAaW5jbHVkZSBhcHAtbHRyIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDAuNHJlbTtcbiAgfVxuXG4gIEBpbmNsdWRlIGFwcC1ydGwge1xuICAgIG1hcmdpbi1sZWZ0OiAwLjRyZW07XG4gIH1cbn1cblxuLmRhdGVyYW5nZXBpY2tlciAucmFuZ2VzIHtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgZmxvYXQ6IG5vbmU7XG4gIG1hcmdpbjogMDtcblxuICB1bCB7XG4gICAgcGFkZGluZzogMDtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG5cbiAgQGluY2x1ZGUgYXBwLXJ0bCB7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gIH1cbn1cblxuLmRhdGVyYW5nZXBpY2tlci5zaG93LWNhbGVuZGFyIC5yYW5nZXMge1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQ7XG5cbiAgJjplbXB0eSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuXG4uZGF0ZXJhbmdlcGlja2VyIC5kcnAtY2FsZW5kYXIucmlnaHQge1xuICBAaW5jbHVkZSBhcHAtbHRyIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDFweDtcbiAgfVxuICBAaW5jbHVkZSBhcHAtcnRsIHtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxcHg7XG4gIH1cbn1cblxuLmRhdGVyYW5nZXBpY2tlciAuY2FsZW5kYXItdGFibGUgdGhlYWQgdHI6bGFzdC1jaGlsZCB0aCB7XG4gIGJvcmRlci1yYWRpdXM6IDAgIWltcG9ydGFudDtcbiAgZm9udC1zaXplOiBsaWdodC4kZm9udC1zaXplLXNtO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xufVxuXG4uZGF0ZXJhbmdlcGlja2VyIHtcbiAgJi53aXRoLXdlZWstbnVtYmVycyB7XG4gICAgLmRycC1jYWxlbmRhci5sZWZ0IHtcbiAgICAgIHRoZWFkIHRyOmZpcnN0LWNoaWxkIHtcbiAgICAgICAgdGg6Zmlyc3QtY2hpbGQge1xuICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuQGluY2x1ZGUgbGlnaHQubWVkaWEtYnJlYWtwb2ludC11cChtZCkge1xuICAuZGF0ZXJhbmdlcGlja2VyIC5kcnAtY2FsZW5kYXIge1xuICAgIHBhZGRpbmc6ICRkYXRlcmFuZ2VwaWNrZXItcGFkZGluZztcbiAgfVxufVxuLy8gTGlnaHQgc3R5bGVcbkBpZiAkZW5hYmxlLWxpZ2h0LXN0eWxlIHtcbiAgLmxpZ2h0LXN0eWxlIHtcbiAgICAuZGF0ZXJhbmdlcGlja2VyIHtcbiAgICAgIG1hcmdpbi10b3A6IGxpZ2h0LiRkcm9wZG93bi1zcGFjZXI7XG4gICAgICB6LWluZGV4OiBsaWdodC4kemluZGV4LXBvcG92ZXIgIWltcG9ydGFudDtcbiAgICAgIGJvcmRlcjogbGlnaHQuJGRyb3Bkb3duLWJvcmRlci13aWR0aCBzb2xpZCBsaWdodC4kZHJvcGRvd24tYm9yZGVyLWNvbG9yO1xuICAgICAgd2lkdGg6ICRkYXRlcmFuZ2VwaWNrZXItd2lkdGg7XG4gICAgICBib3gtc2hhZG93OiBsaWdodC4kZHJvcGRvd24tYm94LXNoYWRvdztcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0LiRkcm9wZG93bi1iZztcblxuICAgICAgJi5kcm9wLXVwIHtcbiAgICAgICAgbWFyZ2luLXRvcDogLShsaWdodC4kZHJvcGRvd24tc3BhY2VyKTtcbiAgICAgIH1cblxuICAgICAgJi53aXRoLXdlZWstbnVtYmVycyB7XG4gICAgICAgIHdpZHRoOiAkZGF0ZXJhbmdlcGlja2VyLXdpZHRoLXdpdGgtd2Vla3M7XG4gICAgICB9XG5cbiAgICAgIC5tb250aCB7XG4gICAgICAgIGNvbG9yOiBsaWdodC4kaGVhZGluZ3MtY29sb3I7XG4gICAgICB9XG5cbiAgICAgIHRkLmFjdGl2ZTpub3QoLm9mZikge1xuICAgICAgICBib3gtc2hhZG93OiBsaWdodC4kYm94LXNoYWRvdy1zbTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAuZGF0ZXJhbmdlcGlja2VyIC5kcnAtYnV0dG9ucyxcbiAgICAuZGF0ZXJhbmdlcGlja2VyIC5yYW5nZXMge1xuICAgICAgYm9yZGVyLWNvbG9yOiBsaWdodC4kYm9yZGVyLWNvbG9yO1xuICAgIH1cblxuICAgIC5kYXRlcmFuZ2VwaWNrZXIgdGQud2VlayxcbiAgICAuZGF0ZXJhbmdlcGlja2VyIHRoLndlZWsge1xuICAgICAgY29sb3I6IGxpZ2h0LiRib2R5LWNvbG9yO1xuICAgICAgYmFja2dyb3VuZDogbGlnaHQucmdiYS10by1oZXgobGlnaHQuJGdyYXktNTAsIGxpZ2h0LiRkcm9wZG93bi1iZyk7XG4gICAgICBib3JkZXItcmFkaXVzOiAwO1xuICAgIH1cblxuICAgIC5kYXRlcmFuZ2VwaWNrZXIgdGQuZGlzYWJsZWQsXG4gICAgLmRhdGVyYW5nZXBpY2tlciBvcHRpb24uZGlzYWJsZWQge1xuICAgICAgY29sb3I6IGxpZ2h0LiR0ZXh0LW11dGVkO1xuICAgIH1cblxuICAgIC5kYXRlcmFuZ2VwaWNrZXIgdGQuYXZhaWxhYmxlOm5vdCguYWN0aXZlKTpob3ZlcixcbiAgICAuZGF0ZXJhbmdlcGlja2VyIHRoLmF2YWlsYWJsZTpob3Zlcjpub3QoLnByZXYsIC5uZXh0KSB7XG4gICAgICBiYWNrZ3JvdW5kOiBsaWdodC5yZ2JhLXRvLWhleChyZ2JhKGxpZ2h0LiRibGFjaywgMC4wNiksIGxpZ2h0LiRyZ2JhLXRvLWhleC1iZyk7XG4gICAgfVxuXG4gICAgLmRhdGVyYW5nZXBpY2tlciB0ZC5vZmYge1xuICAgICAgY29sb3I6IGxpZ2h0LiR0ZXh0LW11dGVkO1xuICAgIH1cblxuICAgIC5kYXRlcmFuZ2VwaWNrZXIgLnJhbmdlcyBsaSB7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICBwYWRkaW5nOiBsaWdodC4kZHJvcGRvd24taXRlbS1wYWRkaW5nLXkgbGlnaHQuJGRyb3Bkb3duLWl0ZW0tcGFkZGluZy14O1xuXG4gICAgICAmOmhvdmVyIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHQuJGRyb3Bkb3duLWxpbmstaG92ZXItYmc7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLmRhdGVyYW5nZXBpY2tlciBzZWxlY3Qge1xuICAgICAgY29sb3I6IGxpZ2h0LiRib2R5LWNvbG9yO1xuXG4gICAgICAmLmhvdXJzZWxlY3QsXG4gICAgICAmLm1pbnV0ZXNlbGVjdCxcbiAgICAgICYuc2Vjb25kc2VsZWN0LFxuICAgICAgJi5hbXBtc2VsZWN0IHtcbiAgICAgICAgYmFja2dyb3VuZDogbGlnaHQuJGdyYXktMTAwO1xuICAgICAgICBmb250LXNpemU6IGxpZ2h0LiRmb250LXNpemUtc207XG4gICAgICAgIGNvbG9yOiBsaWdodC4kYm9keS1jb2xvcjtcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IGxpZ2h0LiRib3JkZXItcmFkaXVzLXNtO1xuICAgICAgfVxuXG4gICAgICAvLyAhIEZJWDogT1MgV2luZG93cyBhbmQgTGludXggQnJvd3NlcnMgREQgT3B0aW9uIGNvbG9yXG4gICAgICAmLm1vbnRoc2VsZWN0LFxuICAgICAgJi55ZWFyc2VsZWN0IHtcbiAgICAgICAgb3B0aW9uIHtcbiAgICAgICAgICBjb2xvcjogbGlnaHQuJGJvZHktY29sb3I7XG4gICAgICAgICAgYmFja2dyb3VuZDogbGlnaHQuJGlucHV0LWJnO1xuICAgICAgICAgICY6ZGlzYWJsZWQge1xuICAgICAgICAgICAgY29sb3I6IGxpZ2h0LiR0ZXh0LW11dGVkO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIC5kYXRlcmFuZ2VwaWNrZXIgLmNhbGVuZGFyLXRpbWUgc2VsZWN0LmRpc2FibGVkIHtcbiAgICAgIGNvbG9yOiBsaWdodC4kdGV4dC1tdXRlZDtcbiAgICB9XG5cbiAgICBAaW5jbHVkZSBsaWdodC5tZWRpYS1icmVha3BvaW50LXVwKG1kKSB7XG4gICAgICAuZGF0ZXJhbmdlcGlja2VyOm5vdCguc2luZ2xlKSB7XG4gICAgICAgIHdpZHRoOiBhdXRvICFpbXBvcnRhbnQ7XG5cbiAgICAgICAgJjpub3QoLnNpbmdsZSkgLmRycC1zZWxlY3RlZCB7XG4gICAgICAgICAgd2lkdGg6IGF1dG87XG4gICAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgQGluY2x1ZGUgYXBwLWx0ci1zdHlsZSB7XG4gICAgICAgIC5kYXRlcmFuZ2VwaWNrZXI6bm90KC5zaW5nbGUpIC5kcnAtY2FsZW5kYXIge1xuICAgICAgICAgIGZsb2F0OiBsZWZ0O1xuXG4gICAgICAgICAgJi5sZWZ0IHtcbiAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDA7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLmRhdGVyYW5nZXBpY2tlcjpub3QoLnNpbmdsZSkge1xuICAgICAgICAgIC5yYW5nZXMge1xuICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgLmRycC1jYWxlbmRhci5sZWZ0IHtcbiAgICAgICAgICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkIGxpZ2h0LiRib3JkZXItY29sb3I7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIEBpbmNsdWRlIGFwcC1ydGwtc3R5bGUge1xuICAgICAgICAuZGF0ZXJhbmdlcGlja2VyOm5vdCguc2luZ2xlKSAuZHJwLWNhbGVuZGFyIHtcbiAgICAgICAgICBmbG9hdDogcmlnaHQ7XG4gICAgICAgICAgJi5sZWZ0IHtcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAuZGF0ZXJhbmdlcGlja2VyOm5vdCguc2luZ2xlKSB7XG4gICAgICAgICAgLnJhbmdlcyB7XG4gICAgICAgICAgICBmbG9hdDogcmlnaHQ7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgLmRycC1jYWxlbmRhci5sZWZ0IHtcbiAgICAgICAgICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgbGlnaHQuJGJvcmRlci1jb2xvcjtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBAaW5jbHVkZSBsaWdodC5tZWRpYS1icmVha3BvaW50LWRvd24obWQpIHtcbiAgICAgIC5kYXRlcmFuZ2VwaWNrZXI6bm90KC5zaW5nbGUpIHtcbiAgICAgICAgLmRycC1jYWxlbmRhci5sZWZ0IHtcbiAgICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgbGlnaHQuJGJvcmRlci1jb2xvcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG4vLyBEYXJrIHN0eWxlXG5AaWYgJGVuYWJsZS1kYXJrLXN0eWxlIHtcbiAgLmRhcmstc3R5bGUge1xuICAgIC5kYXRlcmFuZ2VwaWNrZXIge1xuICAgICAgYm94LXNoYWRvdzogZGFyay4kZHJvcGRvd24tYm94LXNoYWRvdztcbiAgICAgIHdpZHRoOiAkZGF0ZXJhbmdlcGlja2VyLXdpZHRoO1xuICAgICAgbWFyZ2luLXRvcDogZGFyay4kZHJvcGRvd24tc3BhY2VyO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogZGFyay4kZHJvcGRvd24tYmc7XG4gICAgICBib3JkZXI6IGRhcmsuJGRyb3Bkb3duLWJvcmRlci13aWR0aCBzb2xpZCBkYXJrLiRkcm9wZG93bi1ib3JkZXItY29sb3I7XG4gICAgICB6LWluZGV4OiBkYXJrLiR6aW5kZXgtcG9wb3ZlciAhaW1wb3J0YW50O1xuXG4gICAgICAmLndpdGgtd2Vlay1udW1iZXJzIHtcbiAgICAgICAgd2lkdGg6ICRkYXRlcmFuZ2VwaWNrZXItd2lkdGgtd2l0aC13ZWVrcztcbiAgICAgIH1cblxuICAgICAgJi5kcm9wLXVwIHtcbiAgICAgICAgbWFyZ2luLXRvcDogLShkYXJrLiRkcm9wZG93bi1zcGFjZXIpO1xuICAgICAgfVxuXG4gICAgICAubW9udGgge1xuICAgICAgICBjb2xvcjogZGFyay4kaGVhZGluZ3MtY29sb3I7XG4gICAgICB9XG4gICAgICB0ZC5hY3RpdmU6bm90KC5vZmYpIHtcbiAgICAgICAgYm94LXNoYWRvdzogZGFyay4kYm94LXNoYWRvdy1zbTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAuZGF0ZXJhbmdlcGlja2VyIC5kcnAtYnV0dG9ucyxcbiAgICAuZGF0ZXJhbmdlcGlja2VyIC5yYW5nZXMge1xuICAgICAgYm9yZGVyLWNvbG9yOiBkYXJrLiRib3JkZXItY29sb3I7XG4gICAgfVxuXG4gICAgLmRhdGVyYW5nZXBpY2tlciB0ZC53ZWVrLFxuICAgIC5kYXRlcmFuZ2VwaWNrZXIgdGgud2VlayB7XG4gICAgICBjb2xvcjogZGFyay4kYm9keS1jb2xvcjtcbiAgICAgIGJhY2tncm91bmQ6IGRhcmsucmdiYS10by1oZXgoZGFyay4kZ3JheS01MCwgZGFyay4kZHJvcGRvd24tYmcpO1xuICAgICAgYm9yZGVyLXJhZGl1czogMDtcbiAgICB9XG5cbiAgICAuZGF0ZXJhbmdlcGlja2VyIHRkLmF2YWlsYWJsZTpub3QoLmFjdGl2ZSk6aG92ZXIsXG4gICAgLmRhdGVyYW5nZXBpY2tlciB0aC5hdmFpbGFibGU6aG92ZXI6bm90KC5wcmV2LCAubmV4dCkge1xuICAgICAgYmFja2dyb3VuZDogcmdiYShkYXJrLiRiYXNlLCAwLjA2KTtcbiAgICB9XG5cbiAgICAuZGF0ZXJhbmdlcGlja2VyIHRkLmRpc2FibGVkLFxuICAgIC5kYXRlcmFuZ2VwaWNrZXIgb3B0aW9uLmRpc2FibGVkIHtcbiAgICAgIGNvbG9yOiBkYXJrLiR0ZXh0LW11dGVkO1xuICAgIH1cblxuICAgIC5kYXRlcmFuZ2VwaWNrZXIgdGQub2ZmIHtcbiAgICAgIGNvbG9yOiBkYXJrLiR0ZXh0LW11dGVkO1xuICAgIH1cblxuICAgIC5kYXRlcmFuZ2VwaWNrZXIgLnJhbmdlcyBsaSB7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICBwYWRkaW5nOiBkYXJrLiRkcm9wZG93bi1pdGVtLXBhZGRpbmcteSBkYXJrLiRkcm9wZG93bi1pdGVtLXBhZGRpbmcteDtcblxuICAgICAgJjpob3ZlciB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IGRhcmsuJGRyb3Bkb3duLWxpbmstaG92ZXItYmc7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLmRhdGVyYW5nZXBpY2tlciBzZWxlY3Qge1xuICAgICAgY29sb3I6IGRhcmsuJGJvZHktY29sb3I7XG5cbiAgICAgICYuaG91cnNlbGVjdCxcbiAgICAgICYubWludXRlc2VsZWN0LFxuICAgICAgJi5zZWNvbmRzZWxlY3QsXG4gICAgICAmLmFtcG1zZWxlY3Qge1xuICAgICAgICBiYWNrZ3JvdW5kOiBkYXJrLnJnYmEtdG8taGV4KGRhcmsuJGdyYXktODAwLCBkYXJrLiRyZ2JhLXRvLWhleC1iZyk7XG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgICBib3JkZXItcmFkaXVzOiBkYXJrLiRib3JkZXItcmFkaXVzLXNtO1xuICAgICAgICBmb250LXNpemU6IGRhcmsuJGZvbnQtc2l6ZS1zbTtcbiAgICAgICAgY29sb3I6IGRhcmsuJGJvZHktY29sb3I7XG4gICAgICB9XG5cbiAgICAgIC8vICEgRklYOiBPUyBXaW5kb3dzIGFuZCBMaW51eCBCcm93c2VycyBERCBPcHRpb24gY29sb3JcbiAgICAgICYubW9udGhzZWxlY3QsXG4gICAgICAmLnllYXJzZWxlY3Qge1xuICAgICAgICBvcHRpb24ge1xuICAgICAgICAgIGNvbG9yOiBkYXJrLiRib2R5LWNvbG9yO1xuICAgICAgICAgIGJhY2tncm91bmQ6IGRhcmsuJGlucHV0LWJnO1xuICAgICAgICAgICY6ZGlzYWJsZWQge1xuICAgICAgICAgICAgY29sb3I6IGRhcmsuJHRleHQtbXV0ZWQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgLmRhdGVyYW5nZXBpY2tlciAuY2FsZW5kYXItdGltZSBzZWxlY3QuZGlzYWJsZWQge1xuICAgICAgY29sb3I6IGRhcmsuJHRleHQtbXV0ZWQ7XG4gICAgfVxuXG4gICAgQGluY2x1ZGUgZGFyay5tZWRpYS1icmVha3BvaW50LXVwKG1kKSB7XG4gICAgICAuZGF0ZXJhbmdlcGlja2VyOm5vdCguc2luZ2xlKSB7XG4gICAgICAgIHdpZHRoOiBhdXRvICFpbXBvcnRhbnQ7XG5cbiAgICAgICAgJjpub3QoLnNpbmdsZSkgLmRycC1zZWxlY3RlZCB7XG4gICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgIHdpZHRoOiBhdXRvO1xuICAgICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgQGluY2x1ZGUgYXBwLWx0ci1zdHlsZSB7XG4gICAgICAgIC5kYXRlcmFuZ2VwaWNrZXI6bm90KC5zaW5nbGUpIC5kcnAtY2FsZW5kYXIge1xuICAgICAgICAgIGZsb2F0OiBsZWZ0O1xuXG4gICAgICAgICAgJi5sZWZ0IHtcbiAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDA7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLmRhdGVyYW5nZXBpY2tlcjpub3QoLnNpbmdsZSkge1xuICAgICAgICAgIC5kcnAtY2FsZW5kYXIubGVmdCB7XG4gICAgICAgICAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCBkYXJrLiRib3JkZXItY29sb3I7XG4gICAgICAgICAgfVxuICAgICAgICAgIC5yYW5nZXMge1xuICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIEBpbmNsdWRlIGFwcC1ydGwtc3R5bGUge1xuICAgICAgICAuZGF0ZXJhbmdlcGlja2VyOm5vdCguc2luZ2xlKSAuZHJwLWNhbGVuZGFyIHtcbiAgICAgICAgICBmbG9hdDogcmlnaHQ7XG5cbiAgICAgICAgICAmLmxlZnQge1xuICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAwO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC5kYXRlcmFuZ2VwaWNrZXI6bm90KC5zaW5nbGUpIHtcbiAgICAgICAgICAuZHJwLWNhbGVuZGFyLmxlZnQge1xuICAgICAgICAgICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCBkYXJrLiRib3JkZXItY29sb3I7XG4gICAgICAgICAgfVxuICAgICAgICAgIC5yYW5nZXMge1xuICAgICAgICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIEBpbmNsdWRlIGRhcmsubWVkaWEtYnJlYWtwb2ludC1kb3duKG1kKSB7XG4gICAgICAuZGF0ZXJhbmdlcGlja2VyOm5vdCguc2luZ2xlKSB7XG4gICAgICAgIC5kcnAtY2FsZW5kYXIubGVmdCB7XG4gICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIGRhcmsuJGJvcmRlci1jb2xvcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiQHVzZSAnLi4vLi4vc2Nzcy9fYm9vdHN0cmFwLWV4dGVuZGVkL2luY2x1ZGUnIGFzIGxpZ2h0O1xuQHVzZSAnLi4vLi4vc2Nzcy9fYm9vdHN0cmFwLWV4dGVuZGVkL2luY2x1ZGUtZGFyaycgYXMgZGFyaztcbkBpbXBvcnQgJy4uLy4uL3Njc3MvX2N1c3RvbS12YXJpYWJsZXMvbGlicyc7XG5cbiRkYXRlcmFuZ2VwaWNrZXItYXJyb3ctc2l6ZTogMC40NXJlbSAhZGVmYXVsdDtcbiRkYXRlcmFuZ2VwaWNrZXItc2VsZWN0LXdpZHRoOiAzLjEyNXJlbSAhZGVmYXVsdDtcbiRkYXRlcmFuZ2VwaWNrZXItY2VsbC1zaXplOiAyLjEyNXJlbSAhZGVmYXVsdDtcbiRkYXRlcmFuZ2VwaWNrZXItcGFkZGluZzogMC4ycmVtICFkZWZhdWx0O1xuJGRhdGVyYW5nZXBpY2tlci1jYWxlbmRhci10YWJsZS1wYWRkaW5nOiAwIDAuM3JlbSAwLjNyZW0gIWRlZmF1bHQ7XG5cbi8vIENhbGN1bGF0ZSB3aWR0aHNcbiRkYXRlcmFuZ2VwaWNrZXItd2lkdGg6ICgkZGF0ZXJhbmdlcGlja2VyLWNlbGwtc2l6ZSAqIDcpKyAoJGRhdGVyYW5nZXBpY2tlci1wYWRkaW5nICogMik7XG4kZGF0ZXJhbmdlcGlja2VyLXdpZHRoLXdpdGgtd2Vla3M6ICRkYXRlcmFuZ2VwaWNrZXItd2lkdGggKyAkZGF0ZXJhbmdlcGlja2VyLWNlbGwtc2l6ZTtcblxuLmRhdGVyYW5nZXBpY2tlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbWF4LXdpZHRoOiBub25lO1xuICBwYWRkaW5nOiAwO1xuICBkaXNwbGF5OiBub25lO1xuICBib3JkZXItcmFkaXVzOiBsaWdodC4kYm9yZGVyLXJhZGl1cy1sZztcblxuICB0Ym9keSB7XG4gICAgLy8hIEZJWDogcGFkZGluZyBvciBtYXJnaW4gdG9wIHdpbGwgbm90IHdvcmsgaW4gdGFibGVcbiAgICAmOmJlZm9yZSB7XG4gICAgICBjb250ZW50OiAnQCc7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIGxpbmUtaGVpZ2h0OiA2cHg7XG4gICAgICB0ZXh0LWluZGVudDogLTk5OTk5cHg7XG4gICAgfVxuICB9XG4gIC5tb250aCB7XG4gICAgZm9udC1mYW1pbHk6IGxpZ2h0LiRmb250LWZhbWlseS1zZXJpZjtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIGZvbnQtc2l6ZTogbGlnaHQuJGZvbnQtc2l6ZS1iYXNlO1xuICB9XG5cbiAgQGluY2x1ZGUgYXBwLXJ0bCB7XG4gICAgZGlyZWN0aW9uOiBydGwgIWltcG9ydGFudDtcbiAgfVxufVxuXG4uZGF0ZXJhbmdlcGlja2VyOm5vdCguc2luZ2xlKSAuZHJwLWNhbGVuZGFyIC5jYWxlbmRhci10YWJsZSB7XG4gIHBhZGRpbmc6ICRkYXRlcmFuZ2VwaWNrZXItY2FsZW5kYXItdGFibGUtcGFkZGluZztcbn1cblxuLmRhdGVyYW5nZXBpY2tlci5hdXRvLWFwcGx5IC5kcnAtYnV0dG9ucyB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5kYXRlcmFuZ2VwaWNrZXIuc2hvdy1jYWxlbmRhciAuZHJwLWNhbGVuZGFyLFxuLmRhdGVyYW5nZXBpY2tlci5zaG93LWNhbGVuZGFyIC5kcnAtYnV0dG9ucyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uZGF0ZXJhbmdlcGlja2VyIC5kcnAtY2FsZW5kYXIge1xuICBkaXNwbGF5OiBub25lO1xuICAmLnNpbmdsZSAuY2FsZW5kYXItdGFibGUge1xuICAgIGJvcmRlcjogMDtcbiAgfVxufVxuXG4uZGF0ZXJhbmdlcGlja2VyLnNpbmdsZSB7XG4gIC5kcnAtc2VsZWN0ZWQge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbiAgLmRhdGVyYW5nZXBpY2tlciAucmFuZ2VzLFxuICAuZHJwLWNhbGVuZGFyIHtcbiAgICBmbG9hdDogbm9uZTtcbiAgfVxufVxuXG4uZGF0ZXJhbmdlcGlja2VyIC5jYWxlbmRhci10YWJsZSB7XG4gIGJvcmRlcjogMDtcblxuICAubmV4dCxcbiAgLnByZXYge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBtaW4td2lkdGg6IDEuNXJlbTtcbiAgICB3aWR0aDogMS41cmVtO1xuICAgIGhlaWdodDogMS41cmVtO1xuICAgIGRpc3BsYXk6IHRhYmxlLWNhcHRpb247XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIHRvcDogMC43NXJlbTtcbiAgfVxuXG4gIC5wcmV2IHtcbiAgICBAaW5jbHVkZSBhcHAtbHRyIHtcbiAgICAgIGxlZnQ6IDAuNXJlbTtcbiAgICB9XG4gICAgQGluY2x1ZGUgYXBwLXJ0bCB7XG4gICAgICByaWdodDogMC41cmVtO1xuICAgIH1cbiAgfVxuXG4gIC5uZXh0IHtcbiAgICBAaW5jbHVkZSBhcHAtbHRyIHtcbiAgICAgIHJpZ2h0OiAtMC4yNXJlbTtcbiAgICB9XG5cbiAgICBAaW5jbHVkZSBhcHAtcnRsIHtcbiAgICAgIGxlZnQ6IC0wLjI1cmVtO1xuICAgIH1cbiAgfVxuXG4gIC5tb250aCB7XG4gICAgcGFkZGluZzogMC41cmVtO1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIH1cblxuICAubmV4dCBzcGFuLFxuICAucHJldiBzcGFuIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGJvcmRlci13aWR0aDogMCAxcHggMXB4IDA7XG4gICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgICBib3JkZXItcmFkaXVzOiAwO1xuICAgIGhlaWdodDogJGRhdGVyYW5nZXBpY2tlci1hcnJvdy1zaXplO1xuICAgIHdpZHRoOiAkZGF0ZXJhbmdlcGlja2VyLWFycm93LXNpemU7XG4gICAgYm90dG9tOiAwLjQ1cmVtO1xuICB9XG5cbiAgLnByZXYgc3BhbiB7XG4gICAgbWFyZ2luLXJpZ2h0OiAtJGRhdGVyYW5nZXBpY2tlci1hcnJvdy1zaXplICogMC41O1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDEzNWRlZyk7XG5cbiAgICBAaW5jbHVkZSBhcHAtcnRsIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAtJGRhdGVyYW5nZXBpY2tlci1hcnJvdy1zaXplICogMC41O1xuICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcbiAgICB9XG4gIH1cblxuICAubmV4dCBzcGFuIHtcbiAgICBtYXJnaW4tbGVmdDogLSRkYXRlcmFuZ2VwaWNrZXItYXJyb3ctc2l6ZSAqIDAuNDtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xuXG4gICAgQGluY2x1ZGUgYXBwLXJ0bCB7XG4gICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICAgIG1hcmdpbi1yaWdodDogLSRkYXRlcmFuZ2VwaWNrZXItYXJyb3ctc2l6ZSAqIDAuNDtcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKDEzNWRlZyk7XG4gICAgfVxuICB9XG5cbiAgdGFibGUge1xuICAgIGJvcmRlcjogMDtcbiAgICBib3JkZXItc3BhY2luZzogMDtcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICAgIG1hcmdpbjogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuXG4gIHRoLFxuICB0ZCB7XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICBtaW4td2lkdGg6ICRkYXRlcmFuZ2VwaWNrZXItY2VsbC1zaXplO1xuICAgIGhlaWdodDogJGRhdGVyYW5nZXBpY2tlci1jZWxsLXNpemU7XG4gICAgd2lkdGg6ICRkYXRlcmFuZ2VwaWNrZXItY2VsbC1zaXplO1xuICAgIGxpbmUtaGVpZ2h0OiBjYWxjKCN7JGRhdGVyYW5nZXBpY2tlci1jZWxsLXNpemV9IC0gMnB4KTtcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gIH1cbn1cblxuLmRhdGVyYW5nZXBpY2tlciB0ZCB7XG4gIEBpbmNsdWRlIGFwcC1sdHIge1xuICAgICYuc3RhcnQtZGF0ZTpub3QoLmVuZC1kYXRlKSB7XG4gICAgICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMCAhaW1wb3J0YW50O1xuICAgICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDAgIWltcG9ydGFudDtcbiAgICB9XG5cbiAgICAmLmVuZC1kYXRlOm5vdCguc3RhcnQtZGF0ZSkge1xuICAgICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMCAhaW1wb3J0YW50O1xuICAgICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMCAhaW1wb3J0YW50O1xuICAgIH1cbiAgfVxuXG4gICYuaW4tcmFuZ2U6bm90KC5zdGFydC1kYXRlKTpub3QoLmVuZC1kYXRlKSB7XG4gICAgYm9yZGVyLXJhZGl1czogMCAhaW1wb3J0YW50O1xuICB9XG5cbiAgQGluY2x1ZGUgYXBwLXJ0bCB7XG4gICAgJi5zdGFydC1kYXRlOm5vdCguZW5kLWRhdGUpIHtcbiAgICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDAgIWltcG9ydGFudDtcbiAgICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDAgIWltcG9ydGFudDtcbiAgICB9XG5cbiAgICAmLmVuZC1kYXRlOm5vdCguc3RhcnQtZGF0ZSkge1xuICAgICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDAgIWltcG9ydGFudDtcbiAgICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAwICFpbXBvcnRhbnQ7XG4gICAgfVxuICB9XG59XG5cbi5kYXRlcmFuZ2VwaWNrZXIgdGQuZGlzYWJsZWQsXG4uZGF0ZXJhbmdlcGlja2VyIG9wdGlvbi5kaXNhYmxlZCB7XG4gIGN1cnNvcjogbm90LWFsbG93ZWQ7XG4gIHRleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoO1xufVxuXG4uZGF0ZXJhbmdlcGlja2VyIHRoLm1vbnRoIHtcbiAgd2lkdGg6IGF1dG87XG59XG4uZGF0ZXJhbmdlcGlja2VyIHNlbGVjdCB7XG4gICYubW9udGhzZWxlY3QsXG4gICYueWVhcnNlbGVjdCB7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIHBhZGRpbmc6IDFweDtcbiAgICBtYXJnaW46IDA7XG4gICAgYm9yZGVyOiAwO1xuICAgIGN1cnNvcjogZGVmYXVsdDtcbiAgfVxuICAmOmZvY3VzLXZpc2libGUge1xuICAgIG91dGxpbmU6IDA7XG4gIH1cblxuICAmLm1vbnRoc2VsZWN0IHtcbiAgICB3aWR0aDogNDAlO1xuICAgIG1hcmdpbi1yaWdodDogMiU7XG5cbiAgICBAaW5jbHVkZSBhcHAtcnRsIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAyJTtcbiAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICB9XG4gIH1cblxuICAmLnllYXJzZWxlY3Qge1xuICAgIHdpZHRoOiA0MCU7XG4gIH1cblxuICAmLmhvdXJzZWxlY3QsXG4gICYubWludXRlc2VsZWN0LFxuICAmLnNlY29uZHNlbGVjdCxcbiAgJi5hbXBtc2VsZWN0IHtcbiAgICBvdXRsaW5lOiAwO1xuICAgIHdpZHRoOiAkZGF0ZXJhbmdlcGlja2VyLXNlbGVjdC13aWR0aDtcbiAgICBwYWRkaW5nOiAycHg7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gIH1cbn1cblxuLmRhdGVyYW5nZXBpY2tlciAuY2FsZW5kYXItdGltZSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbGluZS1oZWlnaHQ6IDMwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luOiAwIGF1dG87XG5cbiAgc2VsZWN0LmRpc2FibGVkIHtcbiAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xuICB9XG59XG5cbi5kYXRlcmFuZ2VwaWNrZXIgLmRycC1idXR0b25zIHtcbiAgcGFkZGluZzogMC41cmVtIDAuODEyNXJlbTtcbiAgY2xlYXI6IGJvdGg7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICBib3JkZXItdG9wOiAxcHggc29saWQ7XG5cbiAgLmJ0biB7XG4gICAgbWFyZ2luLWxlZnQ6ICRkYXRlcmFuZ2VwaWNrZXItcGFkZGluZztcbiAgfVxuXG4gIEBpbmNsdWRlIGFwcC1ydGwge1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG5cbiAgICAuYnRuIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgICAgbWFyZ2luLXJpZ2h0OiAkZGF0ZXJhbmdlcGlja2VyLXBhZGRpbmc7XG4gICAgfVxuICB9XG59XG5cbi5kYXRlcmFuZ2VwaWNrZXIgLmNhbGVuZGFyLXRhYmxlIHRkIHtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xufVxuXG4uZGF0ZXJhbmdlcGlja2VyIC5kcnAtc2VsZWN0ZWQge1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZy1ib3R0b206ICRkYXRlcmFuZ2VwaWNrZXItcGFkZGluZztcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtc2l6ZTogbGlnaHQuJGZvbnQtc2l6ZS1zbTtcblxuICBAaW5jbHVkZSBhcHAtbHRyIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDAuNHJlbTtcbiAgfVxuXG4gIEBpbmNsdWRlIGFwcC1ydGwge1xuICAgIG1hcmdpbi1sZWZ0OiAwLjRyZW07XG4gIH1cbn1cblxuLmRhdGVyYW5nZXBpY2tlciAucmFuZ2VzIHtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgZmxvYXQ6IG5vbmU7XG4gIG1hcmdpbjogMDtcblxuICB1bCB7XG4gICAgcGFkZGluZzogMDtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG5cbiAgQGluY2x1ZGUgYXBwLXJ0bCB7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gIH1cbn1cblxuLmRhdGVyYW5nZXBpY2tlci5zaG93LWNhbGVuZGFyIC5yYW5nZXMge1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQ7XG5cbiAgJjplbXB0eSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuXG4uZGF0ZXJhbmdlcGlja2VyIC5kcnAtY2FsZW5kYXIucmlnaHQge1xuICBAaW5jbHVkZSBhcHAtbHRyIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDFweDtcbiAgfVxuICBAaW5jbHVkZSBhcHAtcnRsIHtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxcHg7XG4gIH1cbn1cblxuLmRhdGVyYW5nZXBpY2tlciAuY2FsZW5kYXItdGFibGUgdGhlYWQgdHI6bGFzdC1jaGlsZCB0aCB7XG4gIGJvcmRlci1yYWRpdXM6IDAgIWltcG9ydGFudDtcbiAgZm9udC1zaXplOiBsaWdodC4kZm9udC1zaXplLXNtO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xufVxuXG4uZGF0ZXJhbmdlcGlja2VyIHtcbiAgJi53aXRoLXdlZWstbnVtYmVycyB7XG4gICAgLmRycC1jYWxlbmRhci5sZWZ0IHtcbiAgICAgIHRoZWFkIHRyOmZpcnN0LWNoaWxkIHtcbiAgICAgICAgdGg6Zmlyc3QtY2hpbGQge1xuICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuQGluY2x1ZGUgbGlnaHQubWVkaWEtYnJlYWtwb2ludC11cChtZCkge1xuICAuZGF0ZXJhbmdlcGlja2VyIC5kcnAtY2FsZW5kYXIge1xuICAgIHBhZGRpbmc6ICRkYXRlcmFuZ2VwaWNrZXItcGFkZGluZztcbiAgfVxufVxuLy8gTGlnaHQgc3R5bGVcbkBpZiAkZW5hYmxlLWxpZ2h0LXN0eWxlIHtcbiAgLmxpZ2h0LXN0eWxlIHtcbiAgICAuZGF0ZXJhbmdlcGlja2VyIHtcbiAgICAgIG1hcmdpbi10b3A6IGxpZ2h0LiRkcm9wZG93bi1zcGFjZXI7XG4gICAgICB6LWluZGV4OiBsaWdodC4kemluZGV4LXBvcG92ZXIgIWltcG9ydGFudDtcbiAgICAgIGJvcmRlcjogbGlnaHQuJGRyb3Bkb3duLWJvcmRlci13aWR0aCBzb2xpZCBsaWdodC4kZHJvcGRvd24tYm9yZGVyLWNvbG9yO1xuICAgICAgd2lkdGg6ICRkYXRlcmFuZ2VwaWNrZXItd2lkdGg7XG4gICAgICBib3gtc2hhZG93OiBsaWdodC4kZHJvcGRvd24tYm94LXNoYWRvdztcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0LiRkcm9wZG93bi1iZztcblxuICAgICAgJi5kcm9wLXVwIHtcbiAgICAgICAgbWFyZ2luLXRvcDogLShsaWdodC4kZHJvcGRvd24tc3BhY2VyKTtcbiAgICAgIH1cblxuICAgICAgJi53aXRoLXdlZWstbnVtYmVycyB7XG4gICAgICAgIHdpZHRoOiAkZGF0ZXJhbmdlcGlja2VyLXdpZHRoLXdpdGgtd2Vla3M7XG4gICAgICB9XG5cbiAgICAgIC5tb250aCB7XG4gICAgICAgIGNvbG9yOiBsaWdodC4kaGVhZGluZ3MtY29sb3I7XG4gICAgICB9XG5cbiAgICAgIHRkLmFjdGl2ZTpub3QoLm9mZikge1xuICAgICAgICBib3gtc2hhZG93OiBsaWdodC4kYm94LXNoYWRvdy1zbTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAuZGF0ZXJhbmdlcGlja2VyIC5kcnAtYnV0dG9ucyxcbiAgICAuZGF0ZXJhbmdlcGlja2VyIC5yYW5nZXMge1xuICAgICAgYm9yZGVyLWNvbG9yOiBsaWdodC4kYm9yZGVyLWNvbG9yO1xuICAgIH1cblxuICAgIC5kYXRlcmFuZ2VwaWNrZXIgdGQud2VlayxcbiAgICAuZGF0ZXJhbmdlcGlja2VyIHRoLndlZWsge1xuICAgICAgY29sb3I6IGxpZ2h0LiRib2R5LWNvbG9yO1xuICAgICAgYmFja2dyb3VuZDogbGlnaHQucmdiYS10by1oZXgobGlnaHQuJGdyYXktNTAsIGxpZ2h0LiRkcm9wZG93bi1iZyk7XG4gICAgICBib3JkZXItcmFkaXVzOiAwO1xuICAgIH1cblxuICAgIC5kYXRlcmFuZ2VwaWNrZXIgdGQuZGlzYWJsZWQsXG4gICAgLmRhdGVyYW5nZXBpY2tlciBvcHRpb24uZGlzYWJsZWQge1xuICAgICAgY29sb3I6IGxpZ2h0LiR0ZXh0LW11dGVkO1xuICAgIH1cblxuICAgIC5kYXRlcmFuZ2VwaWNrZXIgdGQuYXZhaWxhYmxlOm5vdCguYWN0aXZlKTpob3ZlcixcbiAgICAuZGF0ZXJhbmdlcGlja2VyIHRoLmF2YWlsYWJsZTpob3Zlcjpub3QoLnByZXYsIC5uZXh0KSB7XG4gICAgICBiYWNrZ3JvdW5kOiBsaWdodC5yZ2JhLXRvLWhleChyZ2JhKGxpZ2h0LiRibGFjaywgMC4wNiksIGxpZ2h0LiRyZ2JhLXRvLWhleC1iZyk7XG4gICAgfVxuXG4gICAgLmRhdGVyYW5nZXBpY2tlciB0ZC5vZmYge1xuICAgICAgY29sb3I6IGxpZ2h0LiR0ZXh0LW11dGVkO1xuICAgIH1cblxuICAgIC5kYXRlcmFuZ2VwaWNrZXIgLnJhbmdlcyBsaSB7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICBwYWRkaW5nOiBsaWdodC4kZHJvcGRvd24taXRlbS1wYWRkaW5nLXkgbGlnaHQuJGRyb3Bkb3duLWl0ZW0tcGFkZGluZy14O1xuXG4gICAgICAmOmhvdmVyIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHQuJGRyb3Bkb3duLWxpbmstaG92ZXItYmc7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLmRhdGVyYW5nZXBpY2tlciBzZWxlY3Qge1xuICAgICAgY29sb3I6IGxpZ2h0LiRib2R5LWNvbG9yO1xuXG4gICAgICAmLmhvdXJzZWxlY3QsXG4gICAgICAmLm1pbnV0ZXNlbGVjdCxcbiAgICAgICYuc2Vjb25kc2VsZWN0LFxuICAgICAgJi5hbXBtc2VsZWN0IHtcbiAgICAgICAgYmFja2dyb3VuZDogbGlnaHQuJGdyYXktMTAwO1xuICAgICAgICBmb250LXNpemU6IGxpZ2h0LiRmb250LXNpemUtc207XG4gICAgICAgIGNvbG9yOiBsaWdodC4kYm9keS1jb2xvcjtcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IGxpZ2h0LiRib3JkZXItcmFkaXVzLXNtO1xuICAgICAgfVxuXG4gICAgICAvLyAhIEZJWDogT1MgV2luZG93cyBhbmQgTGludXggQnJvd3NlcnMgREQgT3B0aW9uIGNvbG9yXG4gICAgICAmLm1vbnRoc2VsZWN0LFxuICAgICAgJi55ZWFyc2VsZWN0IHtcbiAgICAgICAgb3B0aW9uIHtcbiAgICAgICAgICBjb2xvcjogbGlnaHQuJGJvZHktY29sb3I7XG4gICAgICAgICAgYmFja2dyb3VuZDogbGlnaHQuJGlucHV0LWJnO1xuICAgICAgICAgICY6ZGlzYWJsZWQge1xuICAgICAgICAgICAgY29sb3I6IGxpZ2h0LiR0ZXh0LW11dGVkO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIC5kYXRlcmFuZ2VwaWNrZXIgLmNhbGVuZGFyLXRpbWUgc2VsZWN0LmRpc2FibGVkIHtcbiAgICAgIGNvbG9yOiBsaWdodC4kdGV4dC1tdXRlZDtcbiAgICB9XG5cbiAgICBAaW5jbHVkZSBsaWdodC5tZWRpYS1icmVha3BvaW50LXVwKG1kKSB7XG4gICAgICAuZGF0ZXJhbmdlcGlja2VyOm5vdCguc2luZ2xlKSB7XG4gICAgICAgIHdpZHRoOiBhdXRvICFpbXBvcnRhbnQ7XG5cbiAgICAgICAgJjpub3QoLnNpbmdsZSkgLmRycC1zZWxlY3RlZCB7XG4gICAgICAgICAgd2lkdGg6IGF1dG87XG4gICAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgQGluY2x1ZGUgYXBwLWx0ci1zdHlsZSB7XG4gICAgICAgIC5kYXRlcmFuZ2VwaWNrZXI6bm90KC5zaW5nbGUpIC5kcnAtY2FsZW5kYXIge1xuICAgICAgICAgIGZsb2F0OiBsZWZ0O1xuXG4gICAgICAgICAgJi5sZWZ0IHtcbiAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDA7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLmRhdGVyYW5nZXBpY2tlcjpub3QoLnNpbmdsZSkge1xuICAgICAgICAgIC5yYW5nZXMge1xuICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgLmRycC1jYWxlbmRhci5sZWZ0IHtcbiAgICAgICAgICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkIGxpZ2h0LiRib3JkZXItY29sb3I7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIEBpbmNsdWRlIGFwcC1ydGwtc3R5bGUge1xuICAgICAgICAuZGF0ZXJhbmdlcGlja2VyOm5vdCguc2luZ2xlKSAuZHJwLWNhbGVuZGFyIHtcbiAgICAgICAgICBmbG9hdDogcmlnaHQ7XG4gICAgICAgICAgJi5sZWZ0IHtcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAuZGF0ZXJhbmdlcGlja2VyOm5vdCguc2luZ2xlKSB7XG4gICAgICAgICAgLnJhbmdlcyB7XG4gICAgICAgICAgICBmbG9hdDogcmlnaHQ7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgLmRycC1jYWxlbmRhci5sZWZ0IHtcbiAgICAgICAgICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgbGlnaHQuJGJvcmRlci1jb2xvcjtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBAaW5jbHVkZSBsaWdodC5tZWRpYS1icmVha3BvaW50LWRvd24obWQpIHtcbiAgICAgIC5kYXRlcmFuZ2VwaWNrZXI6bm90KC5zaW5nbGUpIHtcbiAgICAgICAgLmRycC1jYWxlbmRhci5sZWZ0IHtcbiAgICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgbGlnaHQuJGJvcmRlci1jb2xvcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG4vLyBEYXJrIHN0eWxlXG5AaWYgJGVuYWJsZS1kYXJrLXN0eWxlIHtcbiAgLmRhcmstc3R5bGUge1xuICAgIC5kYXRlcmFuZ2VwaWNrZXIge1xuICAgICAgYm94LXNoYWRvdzogZGFyay4kZHJvcGRvd24tYm94LXNoYWRvdztcbiAgICAgIHdpZHRoOiAkZGF0ZXJhbmdlcGlja2VyLXdpZHRoO1xuICAgICAgbWFyZ2luLXRvcDogZGFyay4kZHJvcGRvd24tc3BhY2VyO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogZGFyay4kZHJvcGRvd24tYmc7XG4gICAgICBib3JkZXI6IGRhcmsuJGRyb3Bkb3duLWJvcmRlci13aWR0aCBzb2xpZCBkYXJrLiRkcm9wZG93bi1ib3JkZXItY29sb3I7XG4gICAgICB6LWluZGV4OiBkYXJrLiR6aW5kZXgtcG9wb3ZlciAhaW1wb3J0YW50O1xuXG4gICAgICAmLndpdGgtd2Vlay1udW1iZXJzIHtcbiAgICAgICAgd2lkdGg6ICRkYXRlcmFuZ2VwaWNrZXItd2lkdGgtd2l0aC13ZWVrcztcbiAgICAgIH1cblxuICAgICAgJi5kcm9wLXVwIHtcbiAgICAgICAgbWFyZ2luLXRvcDogLShkYXJrLiRkcm9wZG93bi1zcGFjZXIpO1xuICAgICAgfVxuXG4gICAgICAubW9udGgge1xuICAgICAgICBjb2xvcjogZGFyay4kaGVhZGluZ3MtY29sb3I7XG4gICAgICB9XG4gICAgICB0ZC5hY3RpdmU6bm90KC5vZmYpIHtcbiAgICAgICAgYm94LXNoYWRvdzogZGFyay4kYm94LXNoYWRvdy1zbTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAuZGF0ZXJhbmdlcGlja2VyIC5kcnAtYnV0dG9ucyxcbiAgICAuZGF0ZXJhbmdlcGlja2VyIC5yYW5nZXMge1xuICAgICAgYm9yZGVyLWNvbG9yOiBkYXJrLiRib3JkZXItY29sb3I7XG4gICAgfVxuXG4gICAgLmRhdGVyYW5nZXBpY2tlciB0ZC53ZWVrLFxuICAgIC5kYXRlcmFuZ2VwaWNrZXIgdGgud2VlayB7XG4gICAgICBjb2xvcjogZGFyay4kYm9keS1jb2xvcjtcbiAgICAgIGJhY2tncm91bmQ6IGRhcmsucmdiYS10by1oZXgoZGFyay4kZ3JheS01MCwgZGFyay4kZHJvcGRvd24tYmcpO1xuICAgICAgYm9yZGVyLXJhZGl1czogMDtcbiAgICB9XG5cbiAgICAuZGF0ZXJhbmdlcGlja2VyIHRkLmF2YWlsYWJsZTpub3QoLmFjdGl2ZSk6aG92ZXIsXG4gICAgLmRhdGVyYW5nZXBpY2tlciB0aC5hdmFpbGFibGU6aG92ZXI6bm90KC5wcmV2LCAubmV4dCkge1xuICAgICAgYmFja2dyb3VuZDogcmdiYShkYXJrLiRiYXNlLCAwLjA2KTtcbiAgICB9XG5cbiAgICAuZGF0ZXJhbmdlcGlja2VyIHRkLmRpc2FibGVkLFxuICAgIC5kYXRlcmFuZ2VwaWNrZXIgb3B0aW9uLmRpc2FibGVkIHtcbiAgICAgIGNvbG9yOiBkYXJrLiR0ZXh0LW11dGVkO1xuICAgIH1cblxuICAgIC5kYXRlcmFuZ2VwaWNrZXIgdGQub2ZmIHtcbiAgICAgIGNvbG9yOiBkYXJrLiR0ZXh0LW11dGVkO1xuICAgIH1cblxuICAgIC5kYXRlcmFuZ2VwaWNrZXIgLnJhbmdlcyBsaSB7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICBwYWRkaW5nOiBkYXJrLiRkcm9wZG93bi1pdGVtLXBhZGRpbmcteSBkYXJrLiRkcm9wZG93bi1pdGVtLXBhZGRpbmcteDtcblxuICAgICAgJjpob3ZlciB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IGRhcmsuJGRyb3Bkb3duLWxpbmstaG92ZXItYmc7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLmRhdGVyYW5nZXBpY2tlciBzZWxlY3Qge1xuICAgICAgY29sb3I6IGRhcmsuJGJvZHktY29sb3I7XG5cbiAgICAgICYuaG91cnNlbGVjdCxcbiAgICAgICYubWludXRlc2VsZWN0LFxuICAgICAgJi5zZWNvbmRzZWxlY3QsXG4gICAgICAmLmFtcG1zZWxlY3Qge1xuICAgICAgICBiYWNrZ3JvdW5kOiBkYXJrLnJnYmEtdG8taGV4KGRhcmsuJGdyYXktODAwLCBkYXJrLiRyZ2JhLXRvLWhleC1iZyk7XG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgICBib3JkZXItcmFkaXVzOiBkYXJrLiRib3JkZXItcmFkaXVzLXNtO1xuICAgICAgICBmb250LXNpemU6IGRhcmsuJGZvbnQtc2l6ZS1zbTtcbiAgICAgICAgY29sb3I6IGRhcmsuJGJvZHktY29sb3I7XG4gICAgICB9XG5cbiAgICAgIC8vICEgRklYOiBPUyBXaW5kb3dzIGFuZCBMaW51eCBCcm93c2VycyBERCBPcHRpb24gY29sb3JcbiAgICAgICYubW9udGhzZWxlY3QsXG4gICAgICAmLnllYXJzZWxlY3Qge1xuICAgICAgICBvcHRpb24ge1xuICAgICAgICAgIGNvbG9yOiBkYXJrLiRib2R5LWNvbG9yO1xuICAgICAgICAgIGJhY2tncm91bmQ6IGRhcmsuJGlucHV0LWJnO1xuICAgICAgICAgICY6ZGlzYWJsZWQge1xuICAgICAgICAgICAgY29sb3I6IGRhcmsuJHRleHQtbXV0ZWQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgLmRhdGVyYW5nZXBpY2tlciAuY2FsZW5kYXItdGltZSBzZWxlY3QuZGlzYWJsZWQge1xuICAgICAgY29sb3I6IGRhcmsuJHRleHQtbXV0ZWQ7XG4gICAgfVxuXG4gICAgQGluY2x1ZGUgZGFyay5tZWRpYS1icmVha3BvaW50LXVwKG1kKSB7XG4gICAgICAuZGF0ZXJhbmdlcGlja2VyOm5vdCguc2luZ2xlKSB7XG4gICAgICAgIHdpZHRoOiBhdXRvICFpbXBvcnRhbnQ7XG5cbiAgICAgICAgJjpub3QoLnNpbmdsZSkgLmRycC1zZWxlY3RlZCB7XG4gICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgIHdpZHRoOiBhdXRvO1xuICAgICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgQGluY2x1ZGUgYXBwLWx0ci1zdHlsZSB7XG4gICAgICAgIC5kYXRlcmFuZ2VwaWNrZXI6bm90KC5zaW5nbGUpIC5kcnAtY2FsZW5kYXIge1xuICAgICAgICAgIGZsb2F0OiBsZWZ0O1xuXG4gICAgICAgICAgJi5sZWZ0IHtcbiAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDA7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLmRhdGVyYW5nZXBpY2tlcjpub3QoLnNpbmdsZSkge1xuICAgICAgICAgIC5kcnAtY2FsZW5kYXIubGVmdCB7XG4gICAgICAgICAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCBkYXJrLiRib3JkZXItY29sb3I7XG4gICAgICAgICAgfVxuICAgICAgICAgIC5yYW5nZXMge1xuICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIEBpbmNsdWRlIGFwcC1ydGwtc3R5bGUge1xuICAgICAgICAuZGF0ZXJhbmdlcGlja2VyOm5vdCguc2luZ2xlKSAuZHJwLWNhbGVuZGFyIHtcbiAgICAgICAgICBmbG9hdDogcmlnaHQ7XG5cbiAgICAgICAgICAmLmxlZnQge1xuICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAwO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC5kYXRlcmFuZ2VwaWNrZXI6bm90KC5zaW5nbGUpIHtcbiAgICAgICAgICAuZHJwLWNhbGVuZGFyLmxlZnQge1xuICAgICAgICAgICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCBkYXJrLiRib3JkZXItY29sb3I7XG4gICAgICAgICAgfVxuICAgICAgICAgIC5yYW5nZXMge1xuICAgICAgICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIEBpbmNsdWRlIGRhcmsubWVkaWEtYnJlYWtwb2ludC1kb3duKG1kKSB7XG4gICAgICAuZGF0ZXJhbmdlcGlja2VyOm5vdCguc2luZ2xlKSB7XG4gICAgICAgIC5kcnAtY2FsZW5kYXIubGVmdCB7XG4gICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIGRhcmsuJGJvcmRlci1jb2xvcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiJGVuYWJsZS1saWdodC1zdHlsZTogdHJ1ZTtcbiRlbmFibGUtZGFyay1zdHlsZTogdHJ1ZTtcbiRlbmFibGUtcnRsLXN1cHBvcnQ6IHRydWU7XG5cbkBtaXhpbiBhcHAtbHRyKCRoYXMtY2hpbGQ6IHRydWUpIHtcbiAgQGlmICRlbmFibGUtcnRsLXN1cHBvcnQge1xuICAgIEBpZiAkaGFzLWNoaWxkIHtcbiAgICAgIGh0bWw6bm90KFtkaXI9J3J0bCddKSAmIHtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgICB9XG4gICAgfSBAZWxzZSB7XG4gICAgICBodG1sOm5vdChbZGlyPSdydGwnXSkge1xuICAgICAgICBAY29udGVudDtcbiAgICAgIH1cbiAgICB9XG4gIH0gQGVsc2Uge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbkBtaXhpbiBhcHAtbHRyLXN0eWxlKCkge1xuICBAaWYgJGVuYWJsZS1ydGwtc3VwcG9ydCB7XG4gICAgJjpub3QoW2Rpcj0ncnRsJ10pIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfSBAZWxzZSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuQG1peGluIGFwcC1ydGwoJGhhcy1jaGlsZDogdHJ1ZSkge1xuICBAaWYgJGVuYWJsZS1ydGwtc3VwcG9ydCB7XG4gICAgQGlmICRoYXMtY2hpbGQge1xuICAgICAgW2Rpcj0ncnRsJ10gJiB7XG4gICAgICAgIEBjb250ZW50O1xuICAgICAgfVxuICAgIH0gQGVsc2Uge1xuICAgICAgW2Rpcj0ncnRsJ10ge1xuICAgICAgICBAY29udGVudDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuQG1peGluIGFwcC1ydGwtc3R5bGUoKSB7XG4gIEBpZiAkZW5hYmxlLXJ0bC1zdXBwb3J0IHtcbiAgICAmW2Rpcj0ncnRsJ10ge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9XG59XG4iLCIvLyBWYXJpYWJsZXNcbi8vXG4vLyBWYXJpYWJsZXMgc2hvdWxkIGZvbGxvdyB0aGUgYCRjb21wb25lbnQtc3RhdGUtcHJvcGVydHktc2l6ZWAgZm9ybXVsYSBmb3Jcbi8vIGNvbnNpc3RlbnQgbmFtaW5nLiBFeDogJG5hdi1saW5rLWRpc2FibGVkLWNvbG9yIGFuZCAkbW9kYWwtY29udGVudC1ib3gtc2hhZG93LXhzLlxuLy9cbi8vIChDKSBDdXN0b20gdmFyaWFibGVzIGZvciBleHRlbmRlZCBjb21wb25lbnRzIG9mIGJvb3RzdHJhcCBvbmx5XG5cbi8vICogQ29sb3Igc3lzdGVtXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cbi8vIHNjc3MtZG9jcy1zdGFydCBncmF5LWNvbG9yLXZhcmlhYmxlc1xuJHdoaXRlOiAjZmZmICFkZWZhdWx0O1xuJGJsYWNrOiAjMjYzYzU1ICFkZWZhdWx0O1xuJGdyYXktMjU6IHJnYmEoJGJsYWNrLCAwLjAyNSkgIWRlZmF1bHQ7IC8vIChDKVxuJGdyYXktNTA6IHJnYmEoJGJsYWNrLCAwLjA2KSAhZGVmYXVsdDsgLy8gKEMpXG4kZ3JheS0xMDA6IHJnYmEoJGJsYWNrLCAwLjEpICFkZWZhdWx0O1xuJGdyYXktMjAwOiByZ2JhKCRibGFjaywgMC4yKSAhZGVmYXVsdDtcbiRncmF5LTMwMDogcmdiYSgkYmxhY2ssIDAuMykgIWRlZmF1bHQ7XG4kZ3JheS00MDA6IHJnYmEoJGJsYWNrLCAwLjQpICFkZWZhdWx0O1xuJGdyYXktNTAwOiByZ2JhKCRibGFjaywgMC41KSAhZGVmYXVsdDtcbiRncmF5LTYwMDogcmdiYSgkYmxhY2ssIDAuNikgIWRlZmF1bHQ7XG4kZ3JheS03MDA6IHJnYmEoJGJsYWNrLCAwLjcpICFkZWZhdWx0O1xuJGdyYXktODAwOiByZ2JhKCRibGFjaywgMC44KSAhZGVmYXVsdDtcbiRncmF5LTkwMDogcmdiYSgkYmxhY2ssIDAuOSkgIWRlZmF1bHQ7XG4vLyBzY3NzLWRvY3MtZW5kIGdyYXktY29sb3ItdmFyaWFibGVzXG5cbi8vIHNjc3MtZG9jcy1zdGFydCBncmF5LWNvbG9ycy1tYXBcbiRncmF5czogKFxuICAnMjUnOiAkZ3JheS0yNSxcbiAgJzUwJzogJGdyYXktNTBcbikgIWRlZmF1bHQ7XG4vLyBzY3NzLWRvY3MtZW5kIGdyYXktY29sb3JzLW1hcFxuXG4vLyBzY3NzLWRvY3Mtc3RhcnQgY29sb3ItdmFyaWFibGVzXG4kYmx1ZTogIzVhOGRlZSAhZGVmYXVsdDtcbiRpbmRpZ286ICM2NjEwZjIgIWRlZmF1bHQ7XG4kcHVycGxlOiAjNmY0MmMxICFkZWZhdWx0O1xuJHBpbms6ICNlODNlOGMgIWRlZmF1bHQ7XG4kcmVkOiAjZmY1YjVjICFkZWZhdWx0O1xuJG9yYW5nZTogI2ZkN2UxNCAhZGVmYXVsdDtcbiR5ZWxsb3c6ICNmZGFjNDEgIWRlZmF1bHQ7XG4kZ3JlZW46ICMzOWRhOGEgIWRlZmF1bHQ7XG4kdGVhbDogIzIwYzk5NyAhZGVmYXVsdDtcbiRjeWFuOiAjMDBjZmRkICFkZWZhdWx0O1xuLy8gc2Nzcy1kb2NzLWVuZCBjb2xvci12YXJpYWJsZXNcblxuLy8gc2Nzcy1kb2NzLXN0YXJ0IHRoZW1lLWNvbG9yLXZhcmlhYmxlc1xuJHByaW1hcnk6ICRibHVlICFkZWZhdWx0O1xuJHNlY29uZGFyeTogIzY5ODA5YSAhZGVmYXVsdDtcbiRzdWNjZXNzOiAkZ3JlZW4gIWRlZmF1bHQ7XG4kaW5mbzogJGN5YW4gIWRlZmF1bHQ7XG4kd2FybmluZzogJHllbGxvdyAhZGVmYXVsdDtcbiRkYW5nZXI6ICRyZWQgIWRlZmF1bHQ7XG4kbGlnaHQ6ICNlNWU5ZWQgIWRlZmF1bHQ7XG4kZGFyazogIzQ5NTU2MyAhZGVmYXVsdDtcbiRncmF5OiAkZ3JheS01MDAgIWRlZmF1bHQ7IC8vIChDKVxuLy8gc2Nzcy1kb2NzLWVuZCB0aGVtZS1jb2xvci12YXJpYWJsZXNcblxuLy8gc2Nzcy1kb2NzLXN0YXJ0IHRoZW1lLWNvbG9ycy1tYXBcbiR0aGVtZS1jb2xvcnM6IChcbiAgJ3ByaW1hcnknOiAkcHJpbWFyeSxcbiAgJ3NlY29uZGFyeSc6ICRzZWNvbmRhcnksXG4gICdzdWNjZXNzJzogJHN1Y2Nlc3MsXG4gICdpbmZvJzogJGluZm8sXG4gICd3YXJuaW5nJzogJHdhcm5pbmcsXG4gICdkYW5nZXInOiAkZGFuZ2VyLFxuICAnbGlnaHQnOiAkbGlnaHQsXG4gICdkYXJrJzogJGRhcmssXG4gICdncmF5JzogJGdyYXlcbikgIWRlZmF1bHQ7XG4vLyBzY3NzLWRvY3MtZW5kIHRoZW1lLWNvbG9ycy1tYXBcblxuJGNvbG9yLXNjaGVtZTogJ2xpZ2h0JyAhZGVmYXVsdDsgLy8gKEMpXG4vLyBUaGUgY29udHJhc3QgcmF0aW8gdG8gcmVhY2ggYWdhaW5zdCB3aGl0ZSwgdG8gZGV0ZXJtaW5lIGlmIGNvbG9yIGNoYW5nZXMgZnJvbSBcImxpZ2h0XCIgdG8gXCJkYXJrXCIuIEFjY2VwdGFibGUgdmFsdWVzIGZvciBXQ0FHIDIuMCBhcmUgMywgNC41IGFuZCA3LlxuLy8gU2VlIGh0dHBzOi8vd3d3LnczLm9yZy9UUi9XQ0FHMjAvI3Zpc3VhbC1hdWRpby1jb250cmFzdC1jb250cmFzdFxuJG1pbi1jb250cmFzdC1yYXRpbzogMS42ICFkZWZhdWx0O1xuXG4vLyBmdXN2LWRpc2FibGVcbiRibHVlLTYwMDogc2hhZGUtY29sb3IoJGJsdWUsIDEwJSkgIWRlZmF1bHQ7XG4kYmx1ZS03MDA6IHNoYWRlLWNvbG9yKCRibHVlLCAxNSUpICFkZWZhdWx0O1xuJGJsdWUtODAwOiBzaGFkZS1jb2xvcigkYmx1ZSwgMjAlKSAhZGVmYXVsdDtcbiRibHVlLTkwMDogc2hhZGUtY29sb3IoJGJsdWUsIDI1JSkgIWRlZmF1bHQ7XG5cbiRncmVlbi02MDA6IHNoYWRlLWNvbG9yKCRncmVlbiwgMTAlKSAhZGVmYXVsdDtcbiRncmVlbi03MDA6IHNoYWRlLWNvbG9yKCRncmVlbiwgMTUlKSAhZGVmYXVsdDtcbiRncmVlbi04MDA6IHNoYWRlLWNvbG9yKCRncmVlbiwgMjAlKSAhZGVmYXVsdDtcbiRncmVlbi05MDA6IHNoYWRlLWNvbG9yKCRncmVlbiwgMjUlKSAhZGVmYXVsdDtcblxuJGN5YW4tNjAwOiBzaGFkZS1jb2xvcigkY3lhbiwgMTAlKSAhZGVmYXVsdDtcbiRjeWFuLTcwMDogc2hhZGUtY29sb3IoJGN5YW4sIDE1JSkgIWRlZmF1bHQ7XG4kY3lhbi04MDA6IHNoYWRlLWNvbG9yKCRjeWFuLCAyMCUpICFkZWZhdWx0O1xuJGN5YW4tOTAwOiBzaGFkZS1jb2xvcigkY3lhbiwgMjUlKSAhZGVmYXVsdDtcblxuJHllbGxvdy02MDA6IHNoYWRlLWNvbG9yKCR5ZWxsb3csIDEwJSkgIWRlZmF1bHQ7XG4keWVsbG93LTcwMDogc2hhZGUtY29sb3IoJHllbGxvdywgMTUlKSAhZGVmYXVsdDtcbiR5ZWxsb3ctODAwOiBzaGFkZS1jb2xvcigkeWVsbG93LCAyMCUpICFkZWZhdWx0O1xuJHllbGxvdy05MDA6IHNoYWRlLWNvbG9yKCR5ZWxsb3csIDI1JSkgIWRlZmF1bHQ7XG5cbiRyZWQtNjAwOiBzaGFkZS1jb2xvcigkcmVkLCAxMCUpICFkZWZhdWx0O1xuJHJlZC03MDA6IHNoYWRlLWNvbG9yKCRyZWQsIDE1JSkgIWRlZmF1bHQ7XG4kcmVkLTgwMDogc2hhZGUtY29sb3IoJHJlZCwgMjAlKSAhZGVmYXVsdDtcbiRyZWQtOTAwOiBzaGFkZS1jb2xvcigkcmVkLCAyNSUpICFkZWZhdWx0O1xuXG4vLyAqIE9wdGlvbnNcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcblxuJGVuYWJsZS1uZWdhdGl2ZS1tYXJnaW5zOiB0cnVlICFkZWZhdWx0O1xuJGVuYWJsZS12YWxpZGF0aW9uLWljb25zOiBmYWxzZSAhZGVmYXVsdDtcblxuLy8gUHJlZml4IGZvciA6cm9vdCBDU1MgdmFyaWFibGVzXG4kdmFyaWFibGUtcHJlZml4OiBicy0gIWRlZmF1bHQ7XG5cbi8vICogU3BhY2luZ1xuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuXG4kc3BhY2VyOiAxcmVtICFkZWZhdWx0O1xuXG4kc2l6ZXMtcHg6IChcbiAgcHgtMjA6IDIwcHgsXG4gIHB4LTMwOiAzMHB4LFxuICBweC00MDogNDBweCxcbiAgcHgtNTA6IDUwcHgsXG4gIHB4LTc1OiA3NXB4LFxuICBweC0xMDA6IDEwMHB4LFxuICBweC0xNTA6IDE1MHB4LFxuICBweC0yMDA6IDIwMHB4LFxuICBweC0yNTA6IDI1MHB4LFxuICBweC0zMDA6IDMwMHB4LFxuICBweC0zNTA6IDM1MHB4LFxuICBweC00MDA6IDQwMHB4LFxuICBweC01MDA6IDUwMHB4LFxuICBweC02MDA6IDYwMHB4LFxuICBweC03MDA6IDcwMHB4LFxuICBweC04MDA6IDgwMHB4LFxuICBhdXRvOiBhdXRvXG4pICFkZWZhdWx0OyAvLyAoQylcblxuJHJnYmEtdG8taGV4LWJnOiAjZmZmICFkZWZhdWx0OyAvLyAoQylcbiRyZ2JhLXRvLWhleC1iZy1pbnZlcnRlZDogIzAwMCAhZGVmYXVsdDsgLy8gKEMpXG5cbi8vICogQm9keVxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuXG4kYm9keS1iZzogI2YyZjJmNiAhZGVmYXVsdDtcbiRib2R5LWNvbG9yOiByZ2JhLXRvLWhleCgkZ3JheS03MDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7XG4kcmdiYS10by1oZXgtYmc6ICNmZmYgIWRlZmF1bHQ7IC8vIChDKVxuJHJnYmEtdG8taGV4LWJnLWludmVydGVkOiAjMDAwICFkZWZhdWx0OyAvLyAoQylcblxuLy8gKiBMaW5rc1xuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuXG4kbGluay1jb2xvcjogJHByaW1hcnkgIWRlZmF1bHQ7XG4kbGluay1kZWNvcmF0aW9uOiBub25lICFkZWZhdWx0O1xuJGxpbmstc2hhZGUtcGVyY2VudGFnZTogMTAlICFkZWZhdWx0O1xuJGxpbmstaG92ZXItY29sb3I6IHNoaWZ0LWNvbG9yKCRsaW5rLWNvbG9yLCAkbGluay1zaGFkZS1wZXJjZW50YWdlKSAhZGVmYXVsdDtcbiRsaW5rLWhvdmVyLWRlY29yYXRpb246IG51bGwgIWRlZmF1bHQ7XG5cbi8vICogR3JpZFxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuXG4vLyBHcmlkIGNvbnRhaW5lcnNcblxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGNvbnRhaW5lci1tYXgtd2lkdGhzXG4kY29udGFpbmVyLW1heC13aWR0aHM6IChcbiAgc206IDU0MHB4LFxuICBtZDogNzIwcHgsXG4gIGxnOiA5NjBweCxcbiAgeGw6IDExNDBweCxcbiAgeHhsOiAxNDQwcHggLy8gQ3VzdG9tIHh4bCBzaXplXG4pICFkZWZhdWx0O1xuLy8gc2Nzcy1kb2NzLWVuZCBjb250YWluZXItbWF4LXdpZHRoc1xuXG4kZ3JpZC1ndXR0ZXItd2lkdGg6IDEuNjI1cmVtICFkZWZhdWx0O1xuJGNvbnRhaW5lci1wYWRkaW5nLXg6IDEuODc1cmVtICFkZWZhdWx0OyAvLyAoQylcbiRjb250YWluZXItcGFkZGluZy14LXNtOiAxcmVtICFkZWZhdWx0OyAvLyAoQylcbiRjb250YWluZXItcGFkZGluZy15OiAxLjg3NXJlbSAhZGVmYXVsdDsgLy8gKEMpXG5cbi8vICogQ29tcG9uZW50c1xuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuXG4vLyBzY3NzLWRvY3Mtc3RhcnQgYm9yZGVyLXZhcmlhYmxlc1xuJGJvcmRlci13aWR0aDogMXB4ICFkZWZhdWx0O1xuJGJvcmRlci1jb2xvcjogcmdiYS10by1oZXgoJGdyYXktMjAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xuJGJvcmRlci1pbm5lci1jb2xvcjogcmdiYS10by1oZXgoJGdyYXktMTAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0OyAvLyAoQylcbi8vIHNjc3MtZG9jcy1lbmQgYm9yZGVyLXZhcmlhYmxlc1xuXG4vLyBzY3NzLWRvY3Mtc3RhcnQgYm9yZGVyLXJhZGl1cy12YXJpYWJsZXNcbiRib3JkZXItcmFkaXVzOiAwLjI1cmVtICFkZWZhdWx0O1xuJGJvcmRlci1yYWRpdXMteGw6IDAuMzc1cmVtICFkZWZhdWx0OyAvLyAoQylcbiRib3JkZXItcmFkaXVzLWxnOiAwLjMxMjVyZW0gIWRlZmF1bHQ7XG4kYm9yZGVyLXJhZGl1cy1zbTogMC4xODc1cmVtICFkZWZhdWx0O1xuJGJvcmRlci1yYWRpdXMteHM6IDAuMTI1cmVtICFkZWZhdWx0OyAvLyAoQylcbi8vIHNjc3MtZG9jcy1lbmQgYm9yZGVyLXJhZGl1cy12YXJpYWJsZXNcblxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGJveC1zaGFkb3ctdmFyaWFibGVzXG4kYm94LXNoYWRvdzogMCAwLjI1cmVtIDFyZW0gcmdiYShyZ2JhLXRvLWhleCgkZ3JheS01MDAsICRyZ2JhLXRvLWhleC1iZyksIDAuNDUpICFkZWZhdWx0O1xuJGJveC1zaGFkb3ctc206IDAgMC4xMjVyZW0gMC4yNXJlbSByZ2JhKHJnYmEtdG8taGV4KCRncmF5LTUwMCwgJHJnYmEtdG8taGV4LWJnKSwgMC40KSAhZGVmYXVsdDtcbiRib3gtc2hhZG93LWxnOiAwIDAuNjI1cmVtIDEuMjVyZW0gcmdiYShyZ2JhLXRvLWhleCgkZ3JheS01MDAsICRyZ2JhLXRvLWhleC1iZyksIDAuNSkgIWRlZmF1bHQ7XG4vLyBzY3NzLWRvY3MtZW5kIGJveC1zaGFkb3ctdmFyaWFibGVzXG5cbiRjb21wb25lbnQtYWN0aXZlLWNvbG9yOiAkd2hpdGUgIWRlZmF1bHQ7XG4kY29tcG9uZW50LWFjdGl2ZS1iZzogcmdiYSgkcHJpbWFyeSwgMC4wOCkgIWRlZmF1bHQ7XG5cbiRjb21wb25lbnQtbGluZS1oZWlnaHQ6IDEuNTQgIWRlZmF1bHQ7IC8vIChDKVxuJGNvbXBvbmVudC1mb2N1cy1zaGFkb3ctd2lkdGg6IDJweCAhZGVmYXVsdDsgLy8gKEMpXG5cbiRmbG9hdGluZy1jb21wb25lbnQtYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCAhZGVmYXVsdDsgLy8gKEMpXG4kZmxvYXRpbmctY29tcG9uZW50LXNoYWRvdzogJGJveC1zaGFkb3cgIWRlZmF1bHQ7IC8vIChDKVxuXG4kaHItY29sb3I6IHJnYmEtdG8taGV4KCRncmF5LTIwMCwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcbiRoci1vcGFjaXR5OiAxICFkZWZhdWx0O1xuJGJvcmRlcmVkLXJvdy1ib3JkZXItY29sb3I6ICRoci1jb2xvciAhZGVmYXVsdDsgLy8gKEMpXG5cbi8vIHNjc3MtZG9jcy1zdGFydCBjYXJldC12YXJpYWJsZXNcbiRjYXJldC13aWR0aDogMC40NWVtICFkZWZhdWx0O1xuJGNhcmV0LXZlcnRpY2FsLWFsaWduOiBtaWRkbGUgIWRlZmF1bHQ7XG4kY2FyZXQtc3BhY2luZzogMC43NWVtICFkZWZhdWx0O1xuLy8gc2Nzcy1kb2NzLWVuZCBjYXJldC12YXJpYWJsZXNcblxuLy8gKiBUeXBvZ3JhcGh5XG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cbi8vIHNjc3MtZG9jcy1zdGFydCBmb250LXZhcmlhYmxlc1xuJGZvbnQtZmFtaWx5LXNhbnMtc2VyaWY6ICdJQk0gUGxleCBTYW5zJywgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCAnU2Vnb2UgVUknLCAnT3h5Z2VuJywgJ1VidW50dScsICdDYW50YXJlbGwnLFxuICAnRmlyYSBTYW5zJywgJ0Ryb2lkIFNhbnMnLCAnSGVsdmV0aWNhIE5ldWUnLCBzYW5zLXNlcmlmICFkZWZhdWx0O1xuJGZvbnQtZmFtaWx5LXNlcmlmOiAnUnViaWsnLCAnVGltZXMgTmV3IFJvbWFuJywgc2VyaWYgIWRlZmF1bHQ7IC8vIChDKVxuJGZvbnQtZmFtaWx5LW1vbm9zcGFjZTogJ1NGTW9uby1SZWd1bGFyJywgTWVubG8sIE1vbmFjbywgQ29uc29sYXMsICdMaWJlcmF0aW9uIE1vbm8nLCAnQ291cmllciBOZXcnLCBtb25vc3BhY2UgIWRlZmF1bHQ7XG4vLyBzdHlsZWxpbnQtZW5hYmxlIHZhbHVlLWtleXdvcmQtY2FzZVxuJGZvbnQtZmFtaWx5LWJhc2U6IHZhcigtLSN7JHZhcmlhYmxlLXByZWZpeH1mb250LXNhbnMtc2VyaWYpICFkZWZhdWx0O1xuJGZvbnQtZmFtaWx5LWNvZGU6IHZhcigtLSN7JHZhcmlhYmxlLXByZWZpeH1mb250LW1vbm9zcGFjZSkgIWRlZmF1bHQ7XG5cbi8vICRmb250LXNpemUtcm9vdCBlZmZlY3RzIHRoZSB2YWx1ZSBvZiBgcmVtYCwgd2hpY2ggaXMgdXNlZCBmb3IgYXMgd2VsbCBmb250IHNpemVzLCBwYWRkaW5ncyBhbmQgbWFyZ2luc1xuLy8gJGZvbnQtc2l6ZS1iYXNlIGVmZmVjdHMgdGhlIGZvbnQgc2l6ZSBvZiB0aGUgYm9keSB0ZXh0XG4kZm9udC1zaXplLXJvb3Q6IDE2cHggIWRlZmF1bHQ7XG4kZm9udC1zaXplLWJhc2U6IDAuOTM3NXJlbSAhZGVmYXVsdDsgLy8gQXNzdW1lcyB0aGUgYnJvd3NlciBkZWZhdWx0LCB0eXBpY2FsbHkgYDE2cHhgXG4kZm9udC1zaXplLXhsOiAxLjI1cmVtICFkZWZhdWx0OyAvLyAoQylcbiRmb250LXNpemUtbGc6IDEuMDYzcmVtICFkZWZhdWx0O1xuJGZvbnQtc2l6ZS1zbTogMC44MTNyZW0gIWRlZmF1bHQ7XG4kZm9udC1zaXplLXhzOiAwLjc1cmVtICFkZWZhdWx0OyAvLyAoQylcblxuJGZvbnQtd2VpZ2h0LXNlbWlib2xkOiA2MDAgIWRlZmF1bHQ7IC8vIChDKVxuJGZvbnQtd2VpZ2h0LWJvbGRlcjogOTAwICFkZWZhdWx0O1xuJGZvbnQtd2VpZ2h0LWxpZ2h0ZXI6IDEwMCAhZGVmYXVsdDtcblxuJGxpbmUtaGVpZ2h0LWJhc2U6IDEuNDcgIWRlZmF1bHQ7XG4kbGluZS1oZWlnaHQteGw6IDEuNSAhZGVmYXVsdDsgLy8gKEMpXG4kbGluZS1oZWlnaHQtbGc6IDEuNSAhZGVmYXVsdDtcbiRsaW5lLWhlaWdodC1zbTogMS4yICFkZWZhdWx0O1xuJGxpbmUtaGVpZ2h0LXhzOiAxICFkZWZhdWx0OyAvLyAoQylcblxuJGgxLWZvbnQtc2l6ZTogMi4zNzVyZW0gIWRlZmF1bHQ7XG4kaDItZm9udC1zaXplOiAycmVtICFkZWZhdWx0O1xuJGgzLWZvbnQtc2l6ZTogMS42MjVyZW0gIWRlZmF1bHQ7XG4kaDQtZm9udC1zaXplOiAxLjM3NXJlbSAhZGVmYXVsdDtcbiRoNS1mb250LXNpemU6IDEuMTI1cmVtICFkZWZhdWx0O1xuJGg2LWZvbnQtc2l6ZTogJGZvbnQtc2l6ZS1iYXNlICFkZWZhdWx0O1xuLy8gc2Nzcy1kb2NzLWVuZCBmb250LXZhcmlhYmxlc1xuXG4vLyBzY3NzLWRvY3Mtc3RhcnQgaGVhZGluZ3MtdmFyaWFibGVzXG4kaGVhZGluZ3MtbWFyZ2luLWJvdHRvbTogJHNwYWNlciAhZGVmYXVsdDtcbiRoZWFkaW5ncy1mb250LWZhbWlseTogJGZvbnQtZmFtaWx5LXNlcmlmICFkZWZhdWx0O1xuJGhlYWRpbmdzLWZvbnQtd2VpZ2h0OiA1MDAgIWRlZmF1bHQ7XG4kaGVhZGluZ3MtbGluZS1oZWlnaHQ6IDEuMSAhZGVmYXVsdDtcbiRoZWFkaW5ncy1jb2xvcjogcmdiYS10by1oZXgoJGdyYXktODAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xuLy8gc2Nzcy1kb2NzLWVuZCBoZWFkaW5ncy12YXJpYWJsZXNcblxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGRpc3BsYXktaGVhZGluZ3NcbiRkaXNwbGF5LWZvbnQtd2VpZ2h0OiA1MDAgIWRlZmF1bHQ7XG4vLyBzY3NzLWRvY3MtZW5kIGRpc3BsYXktaGVhZGluZ3NcblxuLy8gc2Nzcy1kb2NzLXN0YXJ0IHR5cGUtdmFyaWFibGVzXG4kbGVhZC1mb250LXNpemU6ICRmb250LXNpemUtYmFzZSAqIDEuMTI1ICFkZWZhdWx0O1xuJGxlYWQtZm9udC13ZWlnaHQ6IDQwMCAhZGVmYXVsdDtcblxuJHRpbnktZm9udC1zaXplOiA3MCUgIWRlZmF1bHQ7IC8vIChDKVxuJHNtYWxsLWZvbnQtc2l6ZTogODUlICFkZWZhdWx0O1xuJGJpZy1mb250LXNpemU6IDExMiUgIWRlZmF1bHQ7IC8vIChDKVxuJGxhcmdlLWZvbnQtc2l6ZTogMTUwJSAhZGVmYXVsdDsgLy8gKEMpXG4keGxhcmdlLWZvbnQtc2l6ZTogMTcwJSAhZGVmYXVsdDsgLy8gKEMpXG5cbiR0ZXh0LW11dGVkOiByZ2JhLXRvLWhleCgkZ3JheS00MDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7XG4kdGV4dC1tdXRlZC1ob3ZlcjogcmdiYS10by1oZXgoJGdyYXktNjAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0OyAvLyAoQylcblxuJHRleHQtbGlnaHQ6IHJnYmEtdG8taGV4KCRncmF5LTQwMCwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDsgLy8gKEMpXG4kdGV4dC1saWdodGVyOiByZ2JhLXRvLWhleCgkZ3JheS0zMDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7IC8vIChDKVxuJHRleHQtbGlnaHRlc3Q6IHJnYmEtdG8taGV4KCRncmF5LTIwMCwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDsgLy8gKEMpXG4vLyBzY3NzLWRvY3MtZW5kIHR5cGUtdmFyaWFibGVzXG5cbi8vICogWi1pbmRleCBtYXN0ZXIgbGlzdFxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuXG4kemluZGV4LW1lbnUtZml4ZWQ6IDEwODAgIWRlZmF1bHQ7XG4kemluZGV4LW1vZGFsOiAxMDkwICFkZWZhdWx0O1xuJHppbmRleC1tb2RhbC1iYWNrZHJvcDogJHppbmRleC1tb2RhbCAtIDEgIWRlZmF1bHQ7XG4vLyAkemluZGV4LW1vZGFsLXRvcDogMTA5MCAhZGVmYXVsdDsgLy8gKEMpXG4kemluZGV4LW9mZmNhbnZhczogMTA5MCAhZGVmYXVsdDtcbiR6aW5kZXgtb2ZmY2FudmFzLWJhY2tkcm9wOiAkemluZGV4LW9mZmNhbnZhcyAtIDEgIWRlZmF1bHQ7XG4kemluZGV4LWxheW91dC1tb2JpbGU6IDExMDAgIWRlZmF1bHQ7IC8vIChDKVxuJHppbmRleC1wb3BvdmVyOiAxMDkxICFkZWZhdWx0O1xuJHppbmRleC10b2FzdDogMTA5NSAhZGVmYXVsdDsgLy8gKEMpXG4kemluZGV4LXRvb2x0aXA6IDEwOTkgIWRlZmF1bHQ7XG4kemluZGV4LW5vdGlmaWNhdGlvbjogOTk5OTk5ICFkZWZhdWx0OyAvLyAoQylcblxuLy8gKiBUYWJsZXNcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcblxuLy8gc2Nzcy1kb2NzLXN0YXJ0IHRhYmxlLXZhcmlhYmxlc1xuJHRhYmxlLWNlbGwtcGFkZGluZy15OiAwLjYyNXJlbSAhZGVmYXVsdDtcbiR0YWJsZS1jZWxsLXBhZGRpbmcteDogMS41cmVtICFkZWZhdWx0O1xuJHRhYmxlLWNlbGwtcGFkZGluZy15LXNtOiAwLjMxMjVyZW0gIWRlZmF1bHQ7XG4kdGFibGUtY2VsbC1wYWRkaW5nLXgtc206IDAuNjI1cmVtICFkZWZhdWx0O1xuXG4kdGFibGUtY2VsbC12ZXJ0aWNhbC1hbGlnbjogbWlkZGxlICFkZWZhdWx0O1xuXG4kdGFibGUtdGgtZm9udC13ZWlnaHQ6ICRmb250LXdlaWdodC1zZW1pYm9sZCAhZGVmYXVsdDtcblxuJHRhYmxlLXN0cmlwZWQtYmctZmFjdG9yOiAwLjAzICFkZWZhdWx0O1xuJHRhYmxlLXN0cmlwZWQtYmc6IHJnYmEtdG8taGV4KHJnYmEoJGJsYWNrLCAkdGFibGUtc3RyaXBlZC1iZy1mYWN0b3IpLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xuXG4kdGFibGUtaG92ZXItYmctZmFjdG9yOiAwLjA2ICFkZWZhdWx0O1xuJHRhYmxlLWhvdmVyLWJnOiByZ2JhLXRvLWhleChyZ2JhKCRibGFjaywgJHRhYmxlLWhvdmVyLWJnLWZhY3RvciksICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7XG5cbiR0YWJsZS1ib3JkZXItZmFjdG9yOiAwLjIgIWRlZmF1bHQ7XG4kdGFibGUtYm9yZGVyLXdpZHRoOiAkYm9yZGVyLXdpZHRoICFkZWZhdWx0O1xuJHRhYmxlLWJvcmRlci1jb2xvcjogJGJvcmRlci1jb2xvciAhZGVmYXVsdDtcbiR0YWJsZS1ncm91cC1zZXBhcmF0b3ItY29sb3I6ICR0YWJsZS1ib3JkZXItY29sb3IgIWRlZmF1bHQ7XG5cbi8vICogQnV0dG9ucyArIEZvcm1zXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4vLz8gdmFsdWVzIGFyZSBub3QgYXMgcGVyIGRlc2lnbiBhcyB3ZSBuZWVkIHRvIHNldCBzYW1lIGhlaWdodCB3aXRoIGljb25zIGFuZCB3aXRob3V0IGljb25zXG4kaW5wdXQtYnRuLXBhZGRpbmcteTogMC40NjlyZW0gIWRlZmF1bHQ7XG4kaW5wdXQtYnRuLXBhZGRpbmcteDogMS4zNzVyZW0gIWRlZmF1bHQ7XG4kaW5wdXQtYnRuLWZvbnQtc2l6ZTogJGZvbnQtc2l6ZS1iYXNlICFkZWZhdWx0O1xuJGlucHV0LWJ0bi1saW5lLWhlaWdodDogMS40ICFkZWZhdWx0O1xuXG4kaW5wdXQtYnRuLWZvY3VzLXdpZHRoOiAwLjA2MjVyZW0gIWRlZmF1bHQ7XG4kaW5wdXQtYnRuLWZvY3VzLWNvbG9yLW9wYWNpdHk6IDAuMTggIWRlZmF1bHQ7XG4kaW5wdXQtYnRuLWZvY3VzLWNvbG9yOiByZ2JhKCRncmF5LTUwMCwgJGlucHV0LWJ0bi1mb2N1cy1jb2xvci1vcGFjaXR5KSAhZGVmYXVsdDtcbiRpbnB1dC1idG4tZm9jdXMtYmx1cjogMC4xODc1cmVtICFkZWZhdWx0O1xuJGlucHV0LWJ0bi1mb2N1cy1ib3gtc2hhZG93OiAwICRpbnB1dC1idG4tZm9jdXMtd2lkdGggJGlucHV0LWJ0bi1mb2N1cy1ibHVyIDAgJGlucHV0LWJ0bi1mb2N1cy1jb2xvciAhZGVmYXVsdDtcblxuJGlucHV0LWJ0bi1wYWRkaW5nLXkteHM6IDAuMXJlbSAhZGVmYXVsdDsgLy8gKEMpXG4kaW5wdXQtYnRuLXBhZGRpbmcteC14czogMC41cmVtICFkZWZhdWx0OyAvLyAoQylcbiRpbnB1dC1idG4tZm9udC1zaXplLXhzOiAkZm9udC1zaXplLXhzICFkZWZhdWx0OyAvLyAoQylcbiRpbnB1dC1idG4tbGluZS1oZWlnaHQteHM6ICRsaW5lLWhlaWdodC14cyAhZGVmYXVsdDsgLy8gKEMpXG5cbiRpbnB1dC1idG4tcGFkZGluZy15LXNtOiAwLjE4N3JlbSAhZGVmYXVsdDtcbiRpbnB1dC1idG4tcGFkZGluZy14LXNtOiAxcmVtICFkZWZhdWx0O1xuJGlucHV0LWJ0bi1mb250LXNpemUtc206ICRmb250LXNpemUtc20gIWRlZmF1bHQ7XG4kaW5wdXQtYnRuLWxpbmUtaGVpZ2h0LXNtOiAkbGluZS1oZWlnaHQtc20gIWRlZmF1bHQ7XG5cbiRpbnB1dC1idG4tcGFkZGluZy15LWxnOiAwLjc0cmVtICFkZWZhdWx0O1xuJGlucHV0LWJ0bi1wYWRkaW5nLXgtbGc6IDIuMTg3NXJlbSAhZGVmYXVsdDtcbiRpbnB1dC1idG4tZm9udC1zaXplLWxnOiAkZm9udC1zaXplLWxnICFkZWZhdWx0O1xuJGlucHV0LWJ0bi1saW5lLWhlaWdodC1sZzogJGxpbmUtaGVpZ2h0LWxnICFkZWZhdWx0O1xuXG4kaW5wdXQtYnRuLXBhZGRpbmcteS14bDogMC44NzVyZW0gIWRlZmF1bHQ7IC8vIChDKVxuJGlucHV0LWJ0bi1wYWRkaW5nLXgteGw6IDIuMTI1cmVtICFkZWZhdWx0OyAvLyAoQylcbiRpbnB1dC1idG4tZm9udC1zaXplLXhsOiAkZm9udC1zaXplLXhsICFkZWZhdWx0OyAvLyAoQylcbiRpbnB1dC1idG4tbGluZS1oZWlnaHQteGw6ICRsaW5lLWhlaWdodC14bCAhZGVmYXVsdDsgLy8gKEMpXG5cbi8vICogQnV0dG9uc1xuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuXG4kYnRuLXBhZGRpbmcteS14czogJGlucHV0LWJ0bi1wYWRkaW5nLXkteHMgIWRlZmF1bHQ7IC8vIChDKVxuJGJ0bi1wYWRkaW5nLXgteHM6ICRpbnB1dC1idG4tcGFkZGluZy14LXhzICFkZWZhdWx0OyAvLyAoQylcbiRidG4tZm9udC1zaXplLXhzOiAkaW5wdXQtYnRuLWZvbnQtc2l6ZS14cyAhZGVmYXVsdDsgLy8gKEMpXG5cbiRidG4tcGFkZGluZy15LXhsOiAkaW5wdXQtYnRuLXBhZGRpbmcteS14bCAhZGVmYXVsdDsgLy8gKEMpXG4kYnRuLXBhZGRpbmcteC14bDogJGlucHV0LWJ0bi1wYWRkaW5nLXgteGwgIWRlZmF1bHQ7IC8vIChDKVxuJGJ0bi1mb250LXNpemUteGw6ICRpbnB1dC1idG4tZm9udC1zaXplLXhsICFkZWZhdWx0OyAvLyAoQylcblxuJGJ0bi1saW5lLWhlaWdodC14czogJGlucHV0LWJ0bi1saW5lLWhlaWdodC14cyAhZGVmYXVsdDsgLy8gKEMpXG4kYnRuLWxpbmUtaGVpZ2h0LXNtOiAkbGluZS1oZWlnaHQtc207IC8vKEMpXG4kYnRuLWxpbmUtaGVpZ2h0LWxnOiAkbGluZS1oZWlnaHQtbGc7IC8vKEMpXG4kYnRuLWxpbmUtaGVpZ2h0LXhsOiAkaW5wdXQtYnRuLWxpbmUtaGVpZ2h0LXhsICFkZWZhdWx0OyAvLyAoQylcblxuJGJ0bi1ib3gtc2hhZG93OiAkYm94LXNoYWRvdy1zbSAhZGVmYXVsdDtcbiRidG4taG92ZXItYm94LXNoYWRvdzogJGJveC1zaGFkb3cgIWRlZmF1bHQ7IC8vIChDKVxuJGJ0bi1mb2N1cy1ib3gtc2hhZG93OiBub25lICFkZWZhdWx0O1xuJGJ0bi1hY3RpdmUtYm94LXNoYWRvdzogbm9uZSAhZGVmYXVsdDtcblxuJGJ0bi1ib3JkZXItcmFkaXVzLXhzOiAkYm9yZGVyLXJhZGl1cy14cyAhZGVmYXVsdDsgLy8gKEMpXG4kYnRuLWJvcmRlci1yYWRpdXMteGw6ICRib3JkZXItcmFkaXVzLXhsICFkZWZhdWx0OyAvLyAoQylcblxuJGJ0bi10cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlLWluLW91dCAhZGVmYXVsdDtcblxuJGJ0bi1sYWJlbC1iZy1zaGFkZS1hbW91bnQ6IDg0JSAhZGVmYXVsdDsgLy8gKEMpXG4kYnRuLWxhYmVsLWJnLXRpbnQtYW1vdW50OiA4NCUgIWRlZmF1bHQ7IC8vIChDKVxuXG4kYnRuLWxhYmVsLWRpc2FibGVkLWJnLXNoYWRlLWFtb3VudDogNzUlICFkZWZhdWx0OyAvLyAoQylcbiRidG4tbGFiZWwtZGlzYWJsZWQtYmctdGludC1hbW91bnQ6IDc1JSAhZGVmYXVsdDsgLy8gKEMpXG5cbiRidG4taG92ZXItYmctc2hhZGUtYW1vdW50OiAyMCUgIWRlZmF1bHQ7XG4kYnRuLWhvdmVyLWJnLXRpbnQtYW1vdW50OiAyMCUgIWRlZmF1bHQ7XG4kYnRuLWhvdmVyLWJvcmRlci1zaGFkZS1hbW91bnQ6IDIwJSAhZGVmYXVsdDtcbiRidG4taG92ZXItYm9yZGVyLXRpbnQtYW1vdW50OiAyMCUgIWRlZmF1bHQ7XG4kYnRuLWFjdGl2ZS1iZy1zaGFkZS1hbW91bnQ6IDE1JSAhZGVmYXVsdDtcbiRidG4tYWN0aXZlLWJnLXRpbnQtYW1vdW50OiAxNSUgIWRlZmF1bHQ7XG4kYnRuLWFjdGl2ZS1ib3JkZXItc2hhZGUtYW1vdW50OiAxNSUgIWRlZmF1bHQ7XG4kYnRuLWFjdGl2ZS1ib3JkZXItdGludC1hbW91bnQ6IDE1JSAhZGVmYXVsdDtcblxuLy8gKiBGb3Jtc1xuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuXG4vLyBzY3NzLWRvY3Mtc3RhcnQgZm9ybS10ZXh0LXZhcmlhYmxlc1xuJGZvcm0tdGV4dC1tYXJnaW4tdG9wOiAwLjI1cmVtICFkZWZhdWx0O1xuJGZvcm0tdGV4dC1mb250LXNpemU6ICRzbWFsbC1mb250LXNpemUgIWRlZmF1bHQ7XG4kZm9ybS10ZXh0LWNvbG9yOiAkdGV4dC1saWdodCAhZGVmYXVsdDtcbi8vIHNjc3MtZG9jcy1lbmQgZm9ybS10ZXh0LXZhcmlhYmxlc1xuXG4vLyBzY3NzLWRvY3Mtc3RhcnQgZm9ybS1sYWJlbC12YXJpYWJsZXNcbiRmb3JtLWxhYmVsLW1hcmdpbi1ib3R0b206IDAuMjVyZW0gIWRlZmF1bHQ7XG4kZm9ybS1sYWJlbC1mb250LXNpemU6IDAuNzVyZW0gIWRlZmF1bHQ7XG4kZm9ybS1sYWJlbC1mb250LXdlaWdodDogNDAwICFkZWZhdWx0O1xuJGZvcm0tbGFiZWwtbGV0dGVyLXNwYWNpbmc6IGluaGVyaXQgIWRlZmF1bHQ7IC8vKEMpXG4kZm9ybS1sYWJlbC10ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlICFkZWZhdWx0OyAvLyhDKVxuLy8gc2Nzcy1kb2NzLWVuZCBmb3JtLWxhYmVsLXZhcmlhYmxlc1xuXG4vLyBzY3NzLWRvY3Mtc3RhcnQgZm9ybS1pbnB1dC12YXJpYWJsZXNcbiRpbnB1dC1wYWRkaW5nLXg6IDAuNzM1cmVtICFkZWZhdWx0O1xuJGlucHV0LWxpbmUtaGVpZ2h0OiAkaW5wdXQtYnRuLWxpbmUtaGVpZ2h0ICFkZWZhdWx0O1xuXG4kaW5wdXQtcGFkZGluZy15LXNtOiAwLjI1cmVtICFkZWZhdWx0O1xuJGlucHV0LXBhZGRpbmcteC1zbTogMC42cmVtICFkZWZhdWx0O1xuXG4kaW5wdXQtcGFkZGluZy15LWxnOiAwLjc1cmVtICFkZWZhdWx0O1xuJGlucHV0LXBhZGRpbmcteC1sZzogMC44NXJlbSAhZGVmYXVsdDtcblxuJGlucHV0LWJnOiAkd2hpdGUgIWRlZmF1bHQ7XG4kaW5wdXQtZGlzYWJsZWQtYmc6IHJnYmEtdG8taGV4KHJnYmEtdG8taGV4KHJnYmEoJGdyYXktNTAwLCAwLjEpLCAkcmdiYS10by1oZXgtYmcpLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xuXG4kaW5wdXQtY29sb3I6ICRib2R5LWNvbG9yICFkZWZhdWx0O1xuJGlucHV0LWJvcmRlci1jb2xvcjogcmdiYS10by1oZXgoJGdyYXktMjAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xuXG4kaW5wdXQtZm9jdXMtYm9yZGVyLWNvbG9yLXNjYWxlOiA0MCU7IC8vKEMpXG4kaW5wdXQtZm9jdXMtYm9yZGVyLWNvbG9yOiB0aW50LWNvbG9yKCRjb21wb25lbnQtYWN0aXZlLWJnLCAkaW5wdXQtZm9jdXMtYm9yZGVyLWNvbG9yLXNjYWxlKSAhZGVmYXVsdDtcbi8vICRpbnB1dC1mb2N1cy1ib3gtc2hhZG93OiAwIDFweCAzcHggMCByZ2JhKCRncmF5LTUwMCwgMC4xOCkgIWRlZmF1bHQ7XG5cbiRpbnB1dC1wbGFjZWhvbGRlci10cmFuc2l0aW9uOiBhbGwgMC4yNXMgZWFzZTtcbiRpbnB1dC1wbGFjZWhvbGRlci10cmFuc2Zvcm06IHRyYW5zbGF0ZSg1cHgpO1xuJGlucHV0LXBsYWNlaG9sZGVyLWNvbG9yOiByZ2JhLXRvLWhleCgkZ3JheS00MDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7XG5cbiRpbnB1dC1oZWlnaHQtaW5uZXI6IHB4LXRvLXJlbShcbiAgZmxvb3IocmVtLXRvLXB4KCgkaW5wdXQtYnRuLWZvbnQtc2l6ZSAqICRpbnB1dC1idG4tbGluZS1oZWlnaHQpICsgKCRpbnB1dC1idG4tcGFkZGluZy15ICogMikpKVxuKSAhZGVmYXVsdDtcbiRpbnB1dC1oZWlnaHQtaW5uZXItc206IHB4LXRvLXJlbShcbiAgZmxvb3IocmVtLXRvLXB4KCgkaW5wdXQtYnRuLWZvbnQtc2l6ZS1zbSAqICRpbnB1dC1idG4tbGluZS1oZWlnaHQtc20pICsgKCRpbnB1dC1idG4tcGFkZGluZy15LXNtICogMikpKVxuKSAhZGVmYXVsdDsgLy8gKEMpXG4kaW5wdXQtaGVpZ2h0LWlubmVyLWxnOiBweC10by1yZW0oXG4gIGZsb29yKHJlbS10by1weCgoJGZvbnQtc2l6ZS1sZyAqICRsaW5lLWhlaWdodC1sZykgKyAoJGlucHV0LWJ0bi1wYWRkaW5nLXktbGcgKiAyKSkpXG4pICFkZWZhdWx0OyAvLyAoQylcbi8vIHNjc3MtZG9jcy1lbmQgZm9ybS1pbnB1dC12YXJpYWJsZXNcblxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGZvcm0tY2hlY2stdmFyaWFibGVzXG4kZm9ybS1jaGVjay1pbnB1dC13aWR0aDogMS4yZW0gIWRlZmF1bHQ7XG4kZm9ybS1kYXRhdGFibGVzLWNoZWNrLWlucHV0LXNpemU6IDE4cHggIWRlZmF1bHQ7IC8vIChDKSBGb3IgZGF0YXRhYmxlcyB3aXRoIGNoZWNrYm94LSB1cGRhdGUgYWNjb3JkaW5nIHRvICRmb3JtLWNoZWNrLWlucHV0LXdpZHRoXG4kZm9ybS1jaGVjay1taW4taGVpZ2h0OiAkZm9udC1zaXplLWJhc2UgKiAkbGluZS1oZWlnaHQtYmFzZSAhZGVmYXVsdDtcbiRmb3JtLWNoZWNrLWlucHV0LWJvcmRlcjogMXB4IHNvbGlkIHJnYmEtdG8taGV4KCRncmF5LTMwMCwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcblxuJGZvcm0tY2hlY2stbGFiZWwtY3Vyc29yOiBwb2ludGVyICFkZWZhdWx0O1xuJGZvcm0tY2hlY2stbGFiZWwtZGlzYWJsZWQtY29sb3I6ICR0ZXh0LW11dGVkICFkZWZhdWx0OyAvLyAoQylcblxuJGZvcm0tY2hlY2staW5wdXQtY2hlY2tlZC1jb2xvcjogJGNvbXBvbmVudC1hY3RpdmUtY29sb3IgIWRlZmF1bHQ7XG4kZm9ybS1jaGVjay1pbnB1dC1jaGVja2VkLWJnLWltYWdlOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsPHN2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCAyMCAyMCc+PHBhdGggZmlsbD0nbm9uZScgc3Ryb2tlPScjeyRmb3JtLWNoZWNrLWlucHV0LWNoZWNrZWQtY29sb3J9JyBzdHJva2UtbGluZWNhcD0ncm91bmQnIHN0cm9rZS1saW5lam9pbj0ncm91bmQnIHN0cm9rZS13aWR0aD0nMicgZD0nTTYgMTBsMyAzbDYtNicvPjwvc3ZnPlwiKSAhZGVmYXVsdDtcbiRmb3JtLWNoZWNrLXJhZGlvLWNoZWNrZWQtYmctaW1hZ2U6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCw8c3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgdmlld0JveD0nLTQgLTQgOCA4Jz48Y2lyY2xlIHI9JzEuNScgZmlsbD0nI3skZm9ybS1jaGVjay1pbnB1dC1jaGVja2VkLWNvbG9yfScvPjwvc3ZnPlwiKSAhZGVmYXVsdDtcbiRmb3JtLWNoZWNrLWlucHV0LWZvY3VzLWJveC1zaGFkb3c6IDAgMCAwIDAuMTJyZW0gcmdiYShyZ2JhLXRvLWhleCgkZ3JheS01MDAsICRyZ2JhLXRvLWhleC1iZyksIDMwJSkgIWRlZmF1bHQ7XG5cbiRmb3JtLWNoZWNrLWlucHV0LWluZGV0ZXJtaW5hdGUtY29sb3I6ICRjb21wb25lbnQtYWN0aXZlLWNvbG9yICFkZWZhdWx0O1xuJGZvcm0tY2hlY2staW5wdXQtaW5kZXRlcm1pbmF0ZS1iZy1pbWFnZTogdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLDxzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB2aWV3Qm94PScwIDAgMjAgMjAnPjxwYXRoIGZpbGw9J25vbmUnIHN0cm9rZT0nI3skZm9ybS1jaGVjay1pbnB1dC1pbmRldGVybWluYXRlLWNvbG9yfScgc3Ryb2tlLWxpbmVjYXA9J3JvdW5kJyBzdHJva2UtbGluZWpvaW49J3JvdW5kJyBzdHJva2Utd2lkdGg9JzInIGQ9J002IDEwaDgnLz48L3N2Zz5cIikgIWRlZmF1bHQ7XG4vLyBzY3NzLWRvY3MtZW5kIGZvcm0tY2hlY2stdmFyaWFibGVzXG5cbi8vIHNjc3MtZG9jcy1zdGFydCBmb3JtLXN3aXRjaC12YXJpYWJsZXNcblxuJGZvcm0tc3dpdGNoLWNvbG9yOiAkZ3JheS0zMDAgIWRlZmF1bHQ7XG4kZm9ybS1zd2l0Y2gtd2lkdGg6IDJlbSAhZGVmYXVsdDtcbiRmb3JtLXN3aXRjaC1wYWRkaW5nLXN0YXJ0OiAkZm9ybS1zd2l0Y2gtd2lkdGggKyAwLjVlbSAhZGVmYXVsdDtcblxuJGZvcm0tc3dpdGNoLWNoZWNrZWQtYmctcG9zaXRpb24tcnRsOiBsZWZ0IGNlbnRlciAhZGVmYXVsdDsgLy8oQylcbi8vIHNjc3MtZG9jcy1lbmQgZm9ybS1zd2l0Y2gtdmFyaWFibGVzXG5cbi8vaW5wdXQtZ3JvdXAtdmFyaWFibGVzXG4kaW5wdXQtZ3JvdXAtYWRkb24tY29sb3I6ICRpbnB1dC1jb2xvciAhZGVmYXVsdDtcbiRpbnB1dC1ncm91cC1hZGRvbi1iZzogJGlucHV0LWJnICFkZWZhdWx0O1xuJGlucHV0LWdyb3VwLWFkZG9uLWJvcmRlci1jb2xvcjogJGlucHV0LWJvcmRlci1jb2xvciAhZGVmYXVsdDtcbi8vIHNjc3MtZG9jcy1lbmQgaW5wdXQtZ3JvdXAtdmFyaWFibGVzXG5cbi8vIHNjc3MtZG9jcy1zdGFydCBmb3JtLXNlbGVjdC12YXJpYWJsZXNcbi8vICRmb3JtLXNlbGVjdC1wYWRkaW5nLXk6ICRpbnB1dC1idG4tcGFkZGluZy15ICFkZWZhdWx0O1xuLy8gJGZvcm0tc2VsZWN0LXBhZGRpbmcteDogJGlucHV0LWJ0bi1wYWRkaW5nLXggIWRlZmF1bHQ7XG4kZm9ybS1zZWxlY3QtcGFkZGluZy15OiAkaW5wdXQtYnRuLXBhZGRpbmcteSAhZGVmYXVsdDtcbiRmb3JtLXNlbGVjdC1wYWRkaW5nLXg6ICRpbnB1dC1wYWRkaW5nLXggIWRlZmF1bHQ7XG4kZm9ybS1zZWxlY3QtaW5kaWNhdG9yLXBhZGRpbmc6ICRmb3JtLXNlbGVjdC1wYWRkaW5nLXggKyAxcmVtICFkZWZhdWx0O1xuJGZvcm0tc2VsZWN0LWRpc2FibGVkLWNvbG9yOiAkYm9keS1jb2xvciAhZGVmYXVsdDtcbiRmb3JtLXNlbGVjdC1kaXNhYmxlZC1iZzogJGlucHV0LWRpc2FibGVkLWJnICFkZWZhdWx0O1xuJGZvcm0tc2VsZWN0LWJnLXNpemU6IDE3cHggMTJweCAhZGVmYXVsdDtcbiRmb3JtLXNlbGVjdC1pbmRpY2F0b3ItY29sb3I6ICRncmF5LTQwMCAhZGVmYXVsdDtcbiRmb3JtLXNlbGVjdC1pbmRpY2F0b3I6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCw8c3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgdmlld0JveD0nMCAwIDE2IDE2Jz48cGF0aCBmaWxsPSdub25lJyBzdHJva2U9JyN7JGZvcm0tc2VsZWN0LWluZGljYXRvci1jb2xvcn0nIHN0cm9rZS1saW5lY2FwPSdyb3VuZCcgc3Ryb2tlLWxpbmVqb2luPSdyb3VuZCcgc3Ryb2tlLXdpZHRoPScyJyBkPSdNMiA1bDYgNiA2LTYnLz48L3N2Zz5cIikgIWRlZmF1bHQ7XG4kZm9ybS1zZWxlY3QtaW5kaWNhdG9yLXJ0bDogdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLDxzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB2aWV3Qm94PScwIDAgMTYgMTYnPjxwYXRoIGZpbGw9J25vbmUnIHN0cm9rZT0nI3skZm9ybS1zZWxlY3QtaW5kaWNhdG9yLWNvbG9yfScgc3Ryb2tlLWxpbmVjYXA9J3JvdW5kJyBzdHJva2UtbGluZWpvaW49J3JvdW5kJyBzdHJva2Utd2lkdGg9JzInIGQ9J00yIDVsNiA2IDYtNicvPjwvc3ZnPlwiKSAhZGVmYXVsdDsgLy8gKEMpXG5cbiRmb3JtLXNlbGVjdC1mb2N1cy1ib3gtc2hhZG93OiAkaW5wdXQtYnRuLWZvY3VzLWJveC1zaGFkb3cgIWRlZmF1bHQ7XG5cbiRmb3JtLXNlbGVjdC1wYWRkaW5nLXktc206ICRpbnB1dC1idG4tcGFkZGluZy15LXNtICFkZWZhdWx0O1xuJGZvcm0tc2VsZWN0LXBhZGRpbmcteC1zbTogJGlucHV0LXBhZGRpbmcteC1zbSAhZGVmYXVsdDtcblxuJGZvcm0tc2VsZWN0LXBhZGRpbmcteS1sZzogJGlucHV0LWJ0bi1wYWRkaW5nLXktbGcgIWRlZmF1bHQ7XG4kZm9ybS1zZWxlY3QtcGFkZGluZy14LWxnOiAkaW5wdXQtcGFkZGluZy14LWxnICFkZWZhdWx0O1xuLy8gc2Nzcy1kb2NzLWVuZCBmb3JtLXNlbGVjdC12YXJpYWJsZXNcblxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGZvcm0tcmFuZ2UtdmFyaWFibGVzXG4kZm9ybS1yYW5nZS10cmFjay1oZWlnaHQ6IDAuMzc1cmVtICFkZWZhdWx0O1xuJGZvcm0tcmFuZ2UtdHJhY2stYmc6IHJnYmEtdG8taGV4KCRncmF5LTEwMCwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcbiRmb3JtLXJhbmdlLXRyYWNrLWJveC1zaGFkb3c6IG5vbmUgIWRlZmF1bHQ7XG4kZm9ybS1yYW5nZS10cmFjay1kaXNhYmxlZC1iZzogJGdyYXktNTAgIWRlZmF1bHQ7IC8vIChDKVxuXG4kZm9ybS1yYW5nZS10aHVtYi13aWR0aDogMC44NzVyZW0gIWRlZmF1bHQ7XG4kZm9ybS1yYW5nZS10aHVtYi1oZWlnaHQ6ICRmb3JtLXJhbmdlLXRodW1iLXdpZHRoICFkZWZhdWx0O1xuJGZvcm0tcmFuZ2UtdGh1bWItYmc6ICR3aGl0ZSAhZGVmYXVsdDtcbiRmb3JtLXJhbmdlLXRodW1iLWJveC1zaGFkb3c6IDAgMCA2cHggMCAkZ3JheS0yMDAgIWRlZmF1bHQ7XG4kZm9ybS1yYW5nZS10aHVtYi1mb2N1cy1ib3gtc2hhZG93OiAwIDAgOHB4IDBweCAkZ3JheS0yMDAgIWRlZmF1bHQ7XG4kZm9ybS1yYW5nZS10aHVtYi1hY3RpdmUtYmc6ICRmb3JtLXJhbmdlLXRodW1iLWJnICFkZWZhdWx0O1xuJGZvcm0tcmFuZ2UtdGh1bWItZGlzYWJsZWQtYmc6IHJnYmEtdG8taGV4KCRncmF5LTEwMCwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcbi8vIHNjc3MtZG9jcy1lbmQgZm9ybS1yYW5nZS12YXJpYWJsZXNcblxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGZvcm0tZmxvYXRpbmctdmFyaWFibGVzXG4kZm9ybS1mbG9hdGluZy1sYWJlbC1vcGFjaXR5OiAwLjc1ICFkZWZhdWx0O1xuJGZvcm0tZmxvYXRpbmctdHJhbnNpdGlvbjogb3BhY2l0eSAwLjJzIGVhc2UtaW4tb3V0LCB0cmFuc2Zvcm0gMC4ycyBlYXNlLWluLW91dCAhZGVmYXVsdDtcbiRmb3JtLWZsb2F0aW5nLWxhYmVsLXRyYW5zZm9ybS1ydGw6IHNjYWxlKDAuODUpIHRyYW5zbGF0ZVkoLTAuNXJlbSkgdHJhbnNsYXRlWCgtMC4xNXJlbSkgIWRlZmF1bHQ7IC8vIChDKVxuLy8gc2Nzcy1kb2NzLWVuZCBmb3JtLWZsb2F0aW5nLXZhcmlhYmxlc1xuXG4vLyBGb3JtIHZhbGlkYXRpb25cblxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGZvcm0tZmVlZGJhY2stdmFyaWFibGVzXG4kZm9ybS1mZWVkYmFjay12YWxpZC1jb2xvcjogJHN1Y2Nlc3MgIWRlZmF1bHQ7XG4kZm9ybS1mZWVkYmFjay1pbnZhbGlkLWNvbG9yOiAkZGFuZ2VyICFkZWZhdWx0O1xuXG4kZm9ybS1zZWxlY3QtZmVlZGJhY2staWNvbi1wYWRkaW5nOiAkZm9ybS1zZWxlY3QtaW5kaWNhdG9yLXBhZGRpbmcgKyAkaW5wdXQtaGVpZ2h0LWlubmVyICFkZWZhdWx0OyAvLyAoQylcbiRmb3JtLXNlbGVjdC1mZWVkYmFjay1pY29uLXBhZGRpbmctc206ICRmb3JtLXNlbGVjdC1pbmRpY2F0b3ItcGFkZGluZyArICRpbnB1dC1oZWlnaHQtaW5uZXItc20gIWRlZmF1bHQ7IC8vIChDKVxuJGZvcm0tc2VsZWN0LWZlZWRiYWNrLWljb24tcGFkZGluZy1sZzogJGZvcm0tc2VsZWN0LWluZGljYXRvci1wYWRkaW5nICsgJGlucHV0LWhlaWdodC1pbm5lci1sZyAhZGVmYXVsdDsgLy8gKEMpXG4vLyBzY3NzLWRvY3MtZW5kIGZvcm0tZmVlZGJhY2stdmFyaWFibGVzXG5cbi8vICogTmF2c1xuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuXG4kbmF2LXNwYWNlcjogMC4xMjVyZW0gIWRlZmF1bHQ7IC8vIChDKVxuXG4kbmF2LWxpbmstcGFkZGluZy15OiAwLjQ2OXJlbSAhZGVmYXVsdDtcbiRuYXYtbGluay1wYWRkaW5nLXg6IDEuMzc1cmVtICFkZWZhdWx0O1xuJG5hdi1saW5rLWNvbG9yOiAkaGVhZGluZ3MtY29sb3IgIWRlZmF1bHQ7XG4kbmF2LWxpbmstZGlzYWJsZWQtY29sb3I6ICR0ZXh0LW11dGVkICFkZWZhdWx0O1xuJG5hdi1saW5rLWxpbmUtaGVpZ2h0OiAkY29tcG9uZW50LWxpbmUtaGVpZ2h0ICFkZWZhdWx0OyAvLyAoQylcblxuJG5hdi1saW5rLXBhZGRpbmcteS1sZzogMC44NzVyZW0gIWRlZmF1bHQ7IC8vIChDKVxuJG5hdi1saW5rLXBhZGRpbmcteC1sZzogMS4zMTI1cmVtICFkZWZhdWx0OyAvLyAoQylcbiRuYXYtbGluay1saW5lLWhlaWdodC1sZzogJGxpbmUtaGVpZ2h0LWxnICFkZWZhdWx0OyAvLyAoQylcblxuJG5hdi1saW5rLXBhZGRpbmcteS1zbTogMC4zMTI1cmVtICFkZWZhdWx0OyAvLyAoQylcbiRuYXYtbGluay1wYWRkaW5nLXgtc206IDAuODc1cmVtICFkZWZhdWx0OyAvLyAoQylcbiRuYXYtbGluay1saW5lLWhlaWdodC1zbTogJGxpbmUtaGVpZ2h0LXNtICFkZWZhdWx0OyAvLyAoQylcblxuJG5hdi10YWJzLWJvcmRlci1jb2xvcjogJGJvcmRlci1jb2xvciAhZGVmYXVsdDtcbiRuYXYtdGFicy1saW5rLWhvdmVyLWJvcmRlci1jb2xvcjogJGdyYXktMTAwICFkZWZhdWx0O1xuJG5hdi10YWJzLWxpbmstYWN0aXZlLWNvbG9yOiAkbmF2LWxpbmstY29sb3IgIWRlZmF1bHQ7XG4kbmF2LXRhYnMtbGluay1hY3RpdmUtYmc6ICR3aGl0ZSAhZGVmYXVsdDtcbiRuYXYtdGFicy1saW5rLWFjdGl2ZS1ib3JkZXItY29sb3I6ICRuYXYtdGFicy1ib3JkZXItY29sb3IgIWRlZmF1bHQ7XG5cbiRuYXYtcGlsbHMtbGluay1hY3RpdmUtY29sb3I6ICR3aGl0ZSAhZGVmYXVsdDtcbiRuYXYtcGlsbHMtbGluay1hY3RpdmUtYmc6IHRyYW5zcGFyZW50ICFkZWZhdWx0O1xuXG4vLyAqIE5hdmJhclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuXG4kbmF2YmFyLXRvZ2dsZXItcGFkZGluZy15OiAwLjVyZW0gIWRlZmF1bHQ7XG4kbmF2YmFyLXRvZ2dsZXItcGFkZGluZy14OiAwLjdyZW0gIWRlZmF1bHQ7XG4kbmF2YmFyLXRvZ2dsZXItZm9udC1zaXplOiAwLjYyNXJlbSAhZGVmYXVsdDtcblxuJG5hdmJhci1kYXJrLWNvbG9yOiByZ2JhKCR3aGl0ZSwgMC44KSAhZGVmYXVsdDtcbiRuYXZiYXItZGFyay1ob3Zlci1jb2xvcjogJHdoaXRlICFkZWZhdWx0O1xuJG5hdmJhci1kYXJrLWFjdGl2ZS1jb2xvcjogJHdoaXRlICFkZWZhdWx0O1xuJG5hdmJhci1kYXJrLWRpc2FibGVkLWNvbG9yOiByZ2JhKCR3aGl0ZSwgMC40KSAhZGVmYXVsdDtcblxuJG5hdmJhci1saWdodC1jb2xvcjogJGdyYXktNTAwICFkZWZhdWx0O1xuJG5hdmJhci1saWdodC1ob3Zlci1jb2xvcjogJGJvZHktY29sb3IgIWRlZmF1bHQ7XG4kbmF2YmFyLWxpZ2h0LWFjdGl2ZS1jb2xvcjogJGJvZHktY29sb3IgIWRlZmF1bHQ7XG4kbmF2YmFyLWxpZ2h0LWRpc2FibGVkLWNvbG9yOiAkZ3JheS0zMDAgIWRlZmF1bHQ7XG4kbmF2YmFyLWxpZ2h0LXRvZ2dsZXItYm9yZGVyLWNvbG9yOiByZ2JhKCRibGFjaywgMC4wNikgIWRlZmF1bHQ7XG5cbi8vICogRHJvcGRvd25zXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cbiRkcm9wZG93bi1wYWRkaW5nLXk6IDAuMzEyNXJlbSAhZGVmYXVsdDtcbiRkcm9wZG93bi1mb250LXNpemU6ICRmb250LXNpemUtYmFzZSAhZGVmYXVsdDtcbiRkcm9wZG93bi1iZzogJHdoaXRlICFkZWZhdWx0O1xuJGRyb3Bkb3duLWJvcmRlci1jb2xvcjogJGZsb2F0aW5nLWNvbXBvbmVudC1ib3JkZXItY29sb3IgIWRlZmF1bHQ7XG4kZHJvcGRvd24tYm9yZGVyLXdpZHRoOiAwICFkZWZhdWx0O1xuJGRyb3Bkb3duLWJvcmRlci1yYWRpdXM6ICRib3JkZXItcmFkaXVzLWxnICFkZWZhdWx0O1xuJGRyb3Bkb3duLWRpdmlkZXItYmc6ICRib3JkZXItY29sb3IgIWRlZmF1bHQ7XG4kZHJvcGRvd24tZGl2aWRlci1tYXJnaW4teTogJHNwYWNlciAqIDAuMzEyNSAhZGVmYXVsdDtcbiRkcm9wZG93bi1ib3gtc2hhZG93OiAkZmxvYXRpbmctY29tcG9uZW50LXNoYWRvdyAhZGVmYXVsdDtcblxuJGRyb3Bkb3duLWlubmVyLWJvcmRlci1yYWRpdXM6IDAgIWRlZmF1bHQ7XG5cbiRkcm9wZG93bi1saW5rLWNvbG9yOiAkYm9keS1jb2xvciAhZGVmYXVsdDtcbiRkcm9wZG93bi1saW5rLWhvdmVyLWNvbG9yOiAkZHJvcGRvd24tbGluay1jb2xvciAhZGVmYXVsdDtcbiRkcm9wZG93bi1saW5rLWhvdmVyLWJnOiAkZ3JheS01MCAhZGVmYXVsdDtcbiRkcm9wZG93bi1saW5rLWxpbmUtaGVpZ2h0OiAkY29tcG9uZW50LWxpbmUtaGVpZ2h0ICFkZWZhdWx0OyAvLyAoQylcblxuJGRyb3Bkb3duLWxpbmstYWN0aXZlLWNvbG9yOiAkcHJpbWFyeSAhZGVmYXVsdDtcbiRkcm9wZG93bi1saW5rLWFjdGl2ZS1iZzogcmdiYSgkcHJpbWFyeSwgMC4wOCkgIWRlZmF1bHQ7XG5cbiRkcm9wZG93bi1pdGVtLXBhZGRpbmcteTogMC41cmVtICFkZWZhdWx0O1xuJGRyb3Bkb3duLWl0ZW0tcGFkZGluZy14OiAxcmVtICFkZWZhdWx0O1xuXG4kZHJvcGRvd24tbGluay1kaXNhYmxlZC1jb2xvcjogJHRleHQtbGlnaHRlciAhZGVmYXVsdDtcbiRkcm9wZG93bi1oZWFkZXItY29sb3I6ICRoZWFkaW5ncy1jb2xvciAhZGVmYXVsdDtcblxuLy8gKiBQYWdpbmF0aW9uXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cbiRwYWdpbmF0aW9uLXBhZGRpbmcteTogMC41MzVyZW0gIWRlZmF1bHQ7XG4kcGFnaW5hdGlvbi1wYWRkaW5nLXg6IDAuMzEyNXJlbSAhZGVmYXVsdDtcbiRwYWdpbmF0aW9uLXBhZGRpbmcteS1zbTogMC40MXJlbSAhZGVmYXVsdDtcbiRwYWdpbmF0aW9uLXBhZGRpbmcteC1zbTogMC4yNXJlbSAhZGVmYXVsdDtcbiRwYWdpbmF0aW9uLXBhZGRpbmcteS1sZzogMC42NnJlbSAhZGVmYXVsdDtcbiRwYWdpbmF0aW9uLXBhZGRpbmcteC1sZzogMC41cmVtICFkZWZhdWx0O1xuXG4kcGFnaW5hdGlvbi1jb2xvcjogJGJvZHktY29sb3IgIWRlZmF1bHQ7XG4kcGFnaW5hdGlvbi1iZzogcmdiYS10by1oZXgocmdiYSgkYmxhY2ssIDAuMDgpLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xuJHBhZ2luYXRpb24tYm9yZGVyLXdpZHRoOiAwcHggIWRlZmF1bHQ7XG4kcGFnaW5hdGlvbi1ib3JkZXItY29sb3I6ICRib3JkZXItaW5uZXItY29sb3IgIWRlZmF1bHQ7XG5cbiRwYWdpbmF0aW9uLWZvY3VzLWNvbG9yOiAkcGFnaW5hdGlvbi1jb2xvciAhZGVmYXVsdDtcbiRwYWdpbmF0aW9uLWZvY3VzLWJnOiByZ2JhLXRvLWhleChyZ2JhKCRibGFjaywgMC4xNiksICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7XG4kcGFnaW5hdGlvbi1mb2N1cy1ib3gtc2hhZG93OiBub25lICFkZWZhdWx0O1xuXG4kcGFnaW5hdGlvbi1ob3Zlci1jb2xvcjogJHBhZ2luYXRpb24tY29sb3IgIWRlZmF1bHQ7XG4kcGFnaW5hdGlvbi1ob3Zlci1iZzogJHBhZ2luYXRpb24tZm9jdXMtYmcgIWRlZmF1bHQ7XG5cbiRwYWdpbmF0aW9uLWRpc2FibGVkLWNvbG9yOiAkZ3JheS0zMDAgIWRlZmF1bHQ7XG4kcGFnaW5hdGlvbi1kaXNhYmxlZC1iZzogJHBhZ2luYXRpb24tYmcgIWRlZmF1bHQ7XG5cbiRwYWdpbmF0aW9uLWxpbmUtaGVpZ2h0OiAxICFkZWZhdWx0OyAvLyAoYylcbiRwYWdpbmF0aW9uLW1hcmdpbi1lbmQ6IDAuMzEyNSAhZGVmYXVsdDsgLy8gKGMpXG4kcGFnaW5hdGlvbi1tYXJnaW4tZW5kLXNtOiAwLjI1ICFkZWZhdWx0OyAvLyAoYylcbiRwYWdpbmF0aW9uLW1hcmdpbi1lbmQtbGc6IDAuMzc1ICFkZWZhdWx0OyAvLyAoYylcblxuLy8gKiBDYXJkc1xuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuXG4kY2FyZC1zcGFjZXIteTogJHNwYWNlciAqIDEuMzc1ICFkZWZhdWx0O1xuJGNhcmQtc3BhY2VyLXg6ICRzcGFjZXIgKiAxLjM3NSAhZGVmYXVsdDtcbiRjYXJkLXRpdGxlLXNwYWNlci15OiAkY2FyZC1zcGFjZXIteSAhZGVmYXVsdDtcbiRjYXJkLXNwYWNlci14LXNtOiAxcmVtICFkZWZhdWx0OyAvLyAoQylcbiRjYXJkLWJvcmRlci13aWR0aDogMCAhZGVmYXVsdDtcbiRjYXJkLWJvcmRlci1jb2xvcjogJGJvcmRlci1jb2xvciAhZGVmYXVsdDtcbiRjYXJkLWJvcmRlci1yYWRpdXM6ICRib3JkZXItcmFkaXVzLWxnICFkZWZhdWx0O1xuJGNhcmQtaW5uZXItYm9yZGVyLWNvbG9yOiAkYm9yZGVyLWlubmVyLWNvbG9yICFkZWZhdWx0OyAvLyAoQylcbiRjYXJkLWNhcC1wYWRkaW5nLXk6ICRjYXJkLXNwYWNlci15ICFkZWZhdWx0O1xuJGNhcmQtY2FwLWJnOiB0cmFuc3BhcmVudCAhZGVmYXVsdDtcbiRjYXJkLWJnOiAkd2hpdGUgIWRlZmF1bHQ7XG4kY2FyZC1pbWctb3ZlcmxheS1wYWRkaW5nOiAxLjVyZW0gIWRlZmF1bHQ7XG4kY2FyZC1ib3gtc2hhZG93OiAwIDJweCAxNHB4IHJnYmEoJGJsYWNrLCAwLjE2KSAhZGVmYXVsdDtcblxuLy8gKiBBY2NvcmRpb25cbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcblxuJGFjY29yZGlvbi1wYWRkaW5nLXk6IDAuNzhyZW0gIWRlZmF1bHQ7XG4kYWNjb3JkaW9uLXBhZGRpbmcteDogMS4xcmVtICFkZWZhdWx0O1xuJGFjY29yZGlvbi1jb2xvcjogJGJvZHktY29sb3IgIWRlZmF1bHQ7XG4kYWNjb3JkaW9uLWJnOiAkd2hpdGUgIWRlZmF1bHQ7XG4kYWNjb3JkaW9uLWJvcmRlci1yYWRpdXM6ICRib3JkZXItcmFkaXVzLWxnICFkZWZhdWx0O1xuJGFjY29yZGlvbi1idXR0b24tY29sb3I6ICRoZWFkaW5ncy1jb2xvciAhZGVmYXVsdDtcblxuJGFjY29yZGlvbi1ib3JkZXItd2lkdGg6IDAgIWRlZmF1bHQ7XG4kYWNjb3JkaW9uLWJvcmRlci1jb2xvcjogJGJvcmRlci1jb2xvciAhZGVmYXVsdDtcbiRhY2NvcmRpb24tYnV0dG9uLWFjdGl2ZS1iZzogJGFjY29yZGlvbi1iZyAhZGVmYXVsdDtcbiRhY2NvcmRpb24tYnV0dG9uLWFjdGl2ZS1jb2xvcjogJGFjY29yZGlvbi1idXR0b24tY29sb3IgIWRlZmF1bHQ7XG5cbiRhY2NvcmRpb24taWNvbi13aWR0aDogMC43NXJlbSAhZGVmYXVsdDtcbiRhY2NvcmRpb24taWNvbi1jb2xvcjogJGFjY29yZGlvbi1idXR0b24tY29sb3IgIWRlZmF1bHQ7XG4kYWNjb3JkaW9uLWljb24tYWN0aXZlLWNvbG9yOiAkYWNjb3JkaW9uLWJ1dHRvbi1hY3RpdmUtY29sb3IgIWRlZmF1bHQ7XG5cbiRhY2NvcmRpb24taWNvbi10cmFuc2Zvcm06IHJvdGF0ZSg5MGRlZykgIWRlZmF1bHQ7XG5cbiRhY2NvcmRpb24tYnV0dG9uLWljb246IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM0Nzdmcgd2lkdGg9JzEyJyBoZWlnaHQ9JzEyJyB2aWV3Qm94PScwIDAgMTIgMTInIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycgeG1sbnM6eGxpbms9J2h0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsnJTNFJTNDZGVmcyUzRSUzQ3BhdGggaWQ9J2EnIGQ9J20xLjUzMiAxMiA2LjE4Mi02LTYuMTgyLTZMMCAxLjQ4NyA0LjY1IDYgMCAxMC41MTN6Jy8lM0UlM0MvZGVmcyUzRSUzQ2cgdHJhbnNmb3JtPSd0cmFuc2xhdGUoMi41NzEpJyBmaWxsPSdub25lJyBmaWxsLXJ1bGU9J2V2ZW5vZGQnJTNFJTNDdXNlIGZpbGw9JyN7JGFjY29yZGlvbi1pY29uLWNvbG9yfScgeGxpbms6aHJlZj0nJTIzYScvJTNFJTNDdXNlIGZpbGwtb3BhY2l0eT0nLjEnIHhsaW5rOmhyZWY9JyUyM2EnLyUzRSUzQy9nJTNFJTNDL3N2ZyUzRSUwQVwiKSAhZGVmYXVsdDtcbiRhY2NvcmRpb24tYnV0dG9uLWFjdGl2ZS1pY29uOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNDc3ZnIHdpZHRoPScxMicgaGVpZ2h0PScxMicgdmlld0JveD0nMCAwIDEyIDEyJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHhtbG5zOnhsaW5rPSdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJyUzRSUzQ2RlZnMlM0UlM0NwYXRoIGlkPSdhJyBkPSdtMS41MzIgMTIgNi4xODItNi02LjE4Mi02TDAgMS40ODcgNC42NSA2IDAgMTAuNTEzeicvJTNFJTNDL2RlZnMlM0UlM0NnIHRyYW5zZm9ybT0ndHJhbnNsYXRlKDIuNTcxKScgZmlsbD0nbm9uZScgZmlsbC1ydWxlPSdldmVub2RkJyUzRSUzQ3VzZSBmaWxsPScjeyRhY2NvcmRpb24taWNvbi1hY3RpdmUtY29sb3J9JyB4bGluazpocmVmPSclMjNhJy8lM0UlM0N1c2UgZmlsbC1vcGFjaXR5PScuMScgeGxpbms6aHJlZj0nJTIzYScvJTNFJTNDL2clM0UlM0Mvc3ZnJTNFJTBBXCIpICFkZWZhdWx0O1xuXG4vLyAqIFRvb2x0aXBzXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cbiR0b29sdGlwLWZvbnQtc2l6ZTogJGZvbnQtc2l6ZS1iYXNlICFkZWZhdWx0O1xuJHRvb2x0aXAtYmc6ICRkYXJrICFkZWZhdWx0O1xuJHRvb2x0aXAtb3BhY2l0eTogMSAhZGVmYXVsdDtcbiR0b29sdGlwLWJvcmRlci1yYWRpdXM6ICRib3JkZXItcmFkaXVzLXNtICFkZWZhdWx0O1xuJHRvb2x0aXAtcGFkZGluZy15OiAwLjI1cmVtICFkZWZhdWx0O1xuJHRvb2x0aXAtcGFkZGluZy14OiAwLjdyZW0gIWRlZmF1bHQ7XG5cbiR0b29sdGlwLWJveC1zaGFkb3c6ICRib3gtc2hhZG93LXNtICFkZWZhdWx0OyAvLyAoQylcblxuLy8gKiBQb3BvdmVyc1xuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuXG4kcG9wb3Zlci1mb250LXNpemU6ICRmb250LXNpemUtYmFzZSAhZGVmYXVsdDtcbiRwb3BvdmVyLWJnOiAkd2hpdGUgIWRlZmF1bHQ7XG4kcG9wb3Zlci1ib3JkZXItd2lkdGg6IDBweCAhZGVmYXVsdDtcbiRwb3BvdmVyLWJveC1zaGFkb3c6ICRmbG9hdGluZy1jb21wb25lbnQtc2hhZG93ICFkZWZhdWx0O1xuXG4kcG9wb3Zlci1oZWFkZXItYmc6IHRyYW5zcGFyZW50ICFkZWZhdWx0O1xuJHBvcG92ZXItaGVhZGVyLXBhZGRpbmcteTogMCAhZGVmYXVsdDtcbiRwb3BvdmVyLWhlYWRlci1wYWRkaW5nLXg6IDFyZW0gIWRlZmF1bHQ7XG4kcG9wb3Zlci1oZWFkZXItZm9udC1zaXplOiAkaDUtZm9udC1zaXplICFkZWZhdWx0OyAvLyAoQylcblxuJHBvcG92ZXItYm9keS1wYWRkaW5nLXk6IDFyZW0gIWRlZmF1bHQ7XG4kcG9wb3Zlci1ib2R5LXBhZGRpbmcteDogJHBvcG92ZXItYm9keS1wYWRkaW5nLXkgIWRlZmF1bHQ7XG4kcG9wb3Zlci1hcnJvdy1vdXRlci1jb2xvcjogJHBvcG92ZXItYmcgIWRlZmF1bHQ7XG5cbi8vICogVG9hc3RzXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cbiR0b2FzdC1tYXgtd2lkdGg6IDIyLjVyZW0gIWRlZmF1bHQ7XG4kdG9hc3QtcGFkZGluZy14OiAxcmVtICFkZWZhdWx0O1xuJHRvYXN0LXBhZGRpbmcteTogMC42MjVyZW0gIWRlZmF1bHQ7XG4kdG9hc3QtZm9udC1zaXplOiAkZm9udC1zaXplLWJhc2UgIWRlZmF1bHQ7XG4kdG9hc3QtY29sb3I6ICRib2R5LWNvbG9yICFkZWZhdWx0O1xuJHRvYXN0LWJhY2tncm91bmQtY29sb3I6IHJnYmEoJGNhcmQtYmcsIDAuODUpICFkZWZhdWx0O1xuJHRvYXN0LWJvcmRlci13aWR0aDogMHB4ICFkZWZhdWx0O1xuJHRvYXN0LWJvcmRlci1yYWRpdXM6ICRib3JkZXItcmFkaXVzLWxnICFkZWZhdWx0O1xuJHRvYXN0LWJveC1zaGFkb3c6ICRmbG9hdGluZy1jb21wb25lbnQtc2hhZG93ICFkZWZhdWx0O1xuJHRvYXN0LWhlYWRlci1jb2xvcjogJGJvZHktY29sb3IgIWRlZmF1bHQ7XG4kdG9hc3QtaGVhZGVyLWJhY2tncm91bmQtY29sb3I6ICRjYXJkLWJnICFkZWZhdWx0O1xuJHRvYXN0LXNwYWNpbmc6IDFyZW0gIWRlZmF1bHQ7XG5cbi8vICogQmFkZ2VzXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cbiRiYWRnZS1mb250LXNpemU6IDAuODEzZW0gIWRlZmF1bHQ7XG4kYmFkZ2UtZm9udC13ZWlnaHQ6IDUwMCAhZGVmYXVsdDtcbiRiYWRnZS1wYWRkaW5nLXk6IDAuNDQ0ZW0gIWRlZmF1bHQ7XG4kYmFkZ2UtcGFkZGluZy14OiAwLjc1ZW0gIWRlZmF1bHQ7XG4kYmFkZ2UtYm9yZGVyLXJhZGl1czogJGJvcmRlci1yYWRpdXMtc20gIWRlZmF1bHQ7XG5cbiRiYWRnZS1oZWlnaHQ6IDEuNXJlbSAhZGVmYXVsdDsgLy8gKEMpXG4kYmFkZ2Utd2lkdGg6IDEuNXJlbSAhZGVmYXVsdDsgLy8gKEMpXG4kYmFkZ2UtbGluZS1oZWlnaHQ6IDAuOTIgIWRlZmF1bHQ7IC8vIChDKVxuXG4vLyAqIE1vZGFsc1xuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuXG4kbW9kYWwtaW5uZXItcGFkZGluZzogJHNwYWNlciAqIDEuNSAhZGVmYXVsdDtcbiRtb2RhbC1kaWFsb2ctbWFyZ2luOiAxLjVyZW0gIWRlZmF1bHQ7XG5cbiRtb2RhbC1jb250ZW50LWJvcmRlci13aWR0aDogMHB4ICFkZWZhdWx0O1xuJG1vZGFsLWNvbnRlbnQtYm94LXNoYWRvdy14czogMCAwLjEyNXJlbSAxLjI1cmVtIDAgcmdiYSgkYmxhY2ssIDAuNikgIWRlZmF1bHQ7XG4kbW9kYWwtY29udGVudC1ib3gtc2hhZG93LXNtLXVwOiAkbW9kYWwtY29udGVudC1ib3gtc2hhZG93LXhzICFkZWZhdWx0O1xuJG1vZGFsLWhlYWRlci1ib3JkZXItd2lkdGg6IDBweCAhZGVmYXVsdDtcblxuJG1vZGFsLWhlYWRlci1wYWRkaW5nLXk6IDEuMzc1cmVtICFkZWZhdWx0O1xuJG1vZGFsLWhlYWRlci1wYWRkaW5nLXg6ICRtb2RhbC1pbm5lci1wYWRkaW5nICFkZWZhdWx0O1xuJG1vZGFsLWhlYWRlci1wYWRkaW5nOiAkbW9kYWwtaGVhZGVyLXBhZGRpbmcteSAkbW9kYWwtaGVhZGVyLXBhZGRpbmcteCAwICFkZWZhdWx0OyAvLyBLZWVwIHRoaXMgZm9yIGJhY2t3YXJkcyBjb21wYXRpYmlsaXR5XG4kbW9kYWwtZm9vdGVyLXBhZGRpbmc6IDAgJG1vZGFsLWhlYWRlci1wYWRkaW5nLXggJG1vZGFsLWhlYWRlci1wYWRkaW5nLXkgIWRlZmF1bHQ7IC8vIChDKVxuXG4kbW9kYWwtbGc6IDUwcmVtICFkZWZhdWx0O1xuJG1vZGFsLW1kOiAzNXJlbSAhZGVmYXVsdDtcbiRtb2RhbC1zbTogMjIuNXJlbSAhZGVmYXVsdDtcblxuJG1vZGFsLWZhZGUtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xMDBweCkgc2NhbGUoMC44KSAhZGVmYXVsdDtcbiRtb2RhbC1zaG93LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKSBzY2FsZSgxKSAhZGVmYXVsdDtcblxuJG1vZGFsLXRyYW5zaXRpb24tZHVyYXRpb246IDAuMTVzICFkZWZhdWx0OyAvLyAoQylcbiRtb2RhbC10cmFuc2l0aW9uOiB0cmFuc2Zvcm0gJG1vZGFsLXRyYW5zaXRpb24tZHVyYXRpb24gZWFzZS1vdXQgIWRlZmF1bHQ7XG4kbW9kYWwtY2xvc2UtYnRuLWJnOiByZ2JhLXRvLWhleChyZ2JhKCRibGFjaywgMC4wOCksICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7IC8vIChDKVxuXG4kbW9kYWwtc2ltcGxlLXBhZGRpbmc6IDNyZW0gIWRlZmF1bHQ7IC8vIChDKVxuJG1vZGFsLXNpbXBsZS1jbG9zZS1wb3NpdGlvbjogMS4zNzVyZW0gIWRlZmF1bHQ7IC8vIChDKVxuXG4vLyAqIEFsZXJ0c1xuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuXG4kYWxlcnQtcGFkZGluZy15OiAkc3BhY2VyICogMC43NSAhZGVmYXVsdDtcbiRhbGVydC1wYWRkaW5nLXg6ICRzcGFjZXIgKiAxLjI1ICFkZWZhdWx0O1xuJGFsZXJ0LWJvcmRlci1yYWRpdXM6ICRib3JkZXItcmFkaXVzICFkZWZhdWx0O1xuJGFsZXJ0LWJvcmRlci13aWR0aDogMCAhZGVmYXVsdDtcbiRhbGVydC1iZy1zY2FsZTogLTg0JSAhZGVmYXVsdDtcbiRhbGVydC1ib3JkZXItc2NhbGU6IC03MCUgIWRlZmF1bHQ7XG4kYWxlcnQtY29sb3Itc2NhbGU6IDAlICFkZWZhdWx0O1xuXG4vLyAqIFByb2dyZXNzIGJhcnNcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcblxuJHByb2dyZXNzLWhlaWdodDogMC43NXJlbSAhZGVmYXVsdDtcbiRwcm9ncmVzcy1mb250LXNpemU6IDAuNjI1cmVtICFkZWZhdWx0O1xuJHByb2dyZXNzLWJnOiByZ2JhLXRvLWhleCgkZ3JheS0xMDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7XG4kcHJvZ3Jlc3MtYm9yZGVyLXJhZGl1czogMTByZW0gIWRlZmF1bHQ7XG4kcHJvZ3Jlc3MtYmFyLWNvbG9yOiAkd2hpdGUgIWRlZmF1bHQ7XG5cbi8vIExpc3QgZ3JvdXBcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcblxuLy8gc2Nzcy1kb2NzLXN0YXJ0IGxpc3QtZ3JvdXAtdmFyaWFibGVzXG4kbGlzdC1ncm91cC1jb2xvcjogJGJvZHktY29sb3IgIWRlZmF1bHQ7XG4kbGlzdC1ncm91cC1iZzogdHJhbnNwYXJlbnQgIWRlZmF1bHQ7XG4kbGlzdC1ncm91cC1ib3JkZXItY29sb3I6ICRib3JkZXItY29sb3IgIWRlZmF1bHQ7XG4kbGlzdC1ncm91cC1pdGVtLXBhZGRpbmcteTogMC42MjVyZW0gIWRlZmF1bHQ7XG4kbGlzdC1ncm91cC1pdGVtLXBhZGRpbmcteDogJHNwYWNlciAhZGVmYXVsdDtcbiRsaXN0LWdyb3VwLWl0ZW0tYmctc2NhbGU6IC04NCUgIWRlZmF1bHQ7XG4kbGlzdC1ncm91cC1pdGVtLWNvbG9yLXNjYWxlOiAwJSAhZGVmYXVsdDtcbiRsaXN0LWdyb3VwLWl0ZW0tYmctaG92ZXItc2NhbGU6IDUlICFkZWZhdWx0OyAvLyAgKGMpXG5cbiRsaXN0LWdyb3VwLWhvdmVyLWJnOiByZ2JhLXRvLWhleChyZ2JhKCRibGFjaywgMC4wNiksICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7XG4kbGlzdC1ncm91cC1ib3JkZXItcmFkaXVzOiAkYm9yZGVyLXJhZGl1cy1sZyAhZGVmYXVsdDtcblxuJGxpc3QtZ3JvdXAtZGlzYWJsZWQtY29sb3I6ICR0ZXh0LW11dGVkICFkZWZhdWx0O1xuXG4kbGlzdC1ncm91cC1hY3Rpb24tY29sb3I6ICR0ZXh0LW11dGVkLWhvdmVyICFkZWZhdWx0O1xuJGxpc3QtZ3JvdXAtYWN0aW9uLWhvdmVyLWNvbG9yOiAkYm9keS1jb2xvciAhZGVmYXVsdDtcbiRsaXN0LWdyb3VwLWFjdGlvbi1hY3RpdmUtYmc6ICRncmF5LTUwICFkZWZhdWx0O1xuLy8gc2Nzcy1kb2NzLWVuZCBsaXN0LWdyb3VwLXZhcmlhYmxlc1xuXG4vLyAqIEltYWdlIHRodW1ibmFpbHNcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcblxuJHRodW1ibmFpbC1wYWRkaW5nOiAwICFkZWZhdWx0O1xuJHRodW1ibmFpbC1iZzogdHJhbnNwYXJlbnQgIWRlZmF1bHQ7XG4kdGh1bWJuYWlsLWJvcmRlci13aWR0aDogMHB4ICFkZWZhdWx0O1xuJHRodW1ibmFpbC1ib3JkZXItcmFkaXVzOiAwcHggIWRlZmF1bHQ7XG5cbi8vICogRmlndXJlc1xuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuXG4kZmlndXJlLWNhcHRpb24tY29sb3I6ICR0ZXh0LW11dGVkICFkZWZhdWx0O1xuXG4vLyAqIEJyZWFkY3J1bWJzXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cbiRicmVhZGNydW1iLXBhZGRpbmcteTogMCAhZGVmYXVsdDtcbiRicmVhZGNydW1iLXBhZGRpbmcteDogMCAhZGVmYXVsdDtcbiRicmVhZGNydW1iLWl0ZW0tcGFkZGluZy14OiAwLjVyZW0gIWRlZmF1bHQ7XG4kYnJlYWRjcnVtYi1tYXJnaW4tYm90dG9tOiAxcmVtICFkZWZhdWx0O1xuJGJyZWFkY3J1bWItYmc6IHRyYW5zcGFyZW50ICFkZWZhdWx0O1xuJGJyZWFkY3J1bWItZGl2aWRlci1jb2xvcjogcmdiYS10by1oZXgoJGdyYXktNTAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xuJGJyZWFkY3J1bWItYWN0aXZlLWNvbG9yOiAkYm9keS1jb2xvciAhZGVmYXVsdDtcbiRicmVhZGNydW1iLWRpdmlkZXI6ICcvJyAhZGVmYXVsdDtcbiRicmVhZGNydW1iLWRpdmlkZXItZmxpcHBlZDogJ1xcXFwnICFkZWZhdWx0O1xuJGJyZWFkY3J1bWItY29sb3I6ICRicmVhZGNydW1iLWFjdGl2ZS1jb2xvciAhZGVmYXVsdDsgLy8gKEMpXG5cbi8vICogQ2Fyb3VzZWxcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiRjYXJvdXNlbC1jb250cm9sLWNvbG9yOiAkd2hpdGUgIWRlZmF1bHQ7XG4kY2Fyb3VzZWwtY29udHJvbC13aWR0aDogMTQlICFkZWZhdWx0O1xuJGNhcm91c2VsLWNvbnRyb2wtaWNvbi13aWR0aDogMi41cmVtICFkZWZhdWx0O1xuJGNhcm91c2VsLWNvbnRyb2wtb3BhY2l0eTogMSAhZGVmYXVsdDtcbiRjYXJvdXNlbC1jb250cm9sLWhvdmVyLW9wYWNpdHk6IDEgIWRlZmF1bHQ7XG5cbiRjYXJvdXNlbC1jb250cm9sLXByZXYtaWNvbi1iZzogdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLCUzQ3N2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHdpZHRoPScyNCcgaGVpZ2h0PScyNCcgdmlld0JveD0nMCAwIDI0IDI0JyBzdHlsZT0nZmlsbDogI3skY2Fyb3VzZWwtY29udHJvbC1jb2xvcn07dHJhbnNmb3JtOiA7bXNGaWx0ZXI6OyclM0UlM0NwYXRoIGQ9J00xMy4yOTMgNi4yOTMgNy41ODYgMTJsNS43MDcgNS43MDcgMS40MTQtMS40MTRMMTAuNDE0IDEybDQuMjkzLTQuMjkzeiclM0UlM0MvcGF0aCUzRSUzQy9zdmclM0VcIikgIWRlZmF1bHQ7XG4kY2Fyb3VzZWwtY29udHJvbC1uZXh0LWljb24tYmc6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM0NzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB3aWR0aD0nMjQnIGhlaWdodD0nMjQnIHZpZXdCb3g9JzAgMCAyNCAyNCcgc3R5bGU9J2ZpbGw6ICN7JGNhcm91c2VsLWNvbnRyb2wtY29sb3J9O3RyYW5zZm9ybTogO21zRmlsdGVyOjsnJTNFJTNDcGF0aCBkPSdNMTAuNzA3IDE3LjcwNyAxNi40MTQgMTJsLTUuNzA3LTUuNzA3LTEuNDE0IDEuNDE0TDEzLjU4NiAxMmwtNC4yOTMgNC4yOTN6JyUzRSUzQy9wYXRoJTNFJTNDL3N2ZyUzRVwiKSAhZGVmYXVsdDtcblxuLy8gU3Bpbm5lcnNcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcblxuJHNwaW5uZXItd2lkdGgtbGc6IDNyZW0gIWRlZmF1bHQ7IC8vIChDKVxuJHNwaW5uZXItaGVpZ2h0LWxnOiAkc3Bpbm5lci13aWR0aC1sZyAhZGVmYXVsdDsgLy8gKEMpXG4kc3Bpbm5lci1ib3JkZXItd2lkdGgtbGc6IDAuM2VtICFkZWZhdWx0OyAvLyAoQylcblxuLy8gKiBDbG9zZVxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuXG4kYnRuLWNsb3NlLXdpZHRoOiAwLjhlbSAhZGVmYXVsdDtcbiRidG4tY2xvc2UtaGVpZ2h0OiAkYnRuLWNsb3NlLXdpZHRoICFkZWZhdWx0O1xuJGJ0bi1jbG9zZS1jb2xvcjogJHRleHQtbXV0ZWQgIWRlZmF1bHQ7XG4kYnRuLWNsb3NlLWJnOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNDc3ZnIHdpZHRoPScxNTBweCcgaGVpZ2h0PScxNTFweCcgdmlld0JveD0nMCAwIDE1MCAxNTEnIHZlcnNpb249JzEuMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB4bWxuczp4bGluaz0naHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayclM0UlM0NkZWZzJTNFJTNDcG9seWdvbiBpZD0ncGF0aC0xJyBwb2ludHM9JzEzMS4yNTE2NTcgMCA3NC45OTMzNzA1IDU2LjI1IDE4Ljc0ODM0MjYgMCAwIDE4Ljc1IDU2LjI0NTAyNzggNzUgMCAxMzEuMjUgMTguNzQ4MzQyNiAxNTAgNzQuOTkzMzcwNSA5My43NSAxMzEuMjUxNjU3IDE1MCAxNTAgMTMxLjI1IDkzLjc1NDk3MjIgNzUgMTUwIDE4Ljc1JyUzRSUzQy9wb2x5Z29uJTNFJTNDL2RlZnMlM0UlM0NnIGlkPSfwn46oLSU1QlNldHVwJTVEOi1Db2xvcnMtJmFtcDstU2hhZG93cycgc3Ryb2tlPSdub25lJyBzdHJva2Utd2lkdGg9JzEnIGZpbGw9J25vbmUnIGZpbGwtcnVsZT0nZXZlbm9kZCclM0UlM0NnIGlkPSdBcnRib2FyZCcgdHJhbnNmb3JtPSd0cmFuc2xhdGUoLTIyNS4wMDAwMDAsIC0yNTAuMDAwMDAwKSclM0UlM0NnIGlkPSdJY29uLUNvbG9yJyB0cmFuc2Zvcm09J3RyYW5zbGF0ZSgyMjUuMDAwMDAwLCAyNTAuNTAwMDAwKSclM0UlM0N1c2UgZmlsbD0nI3skYnRuLWNsb3NlLWNvbG9yfScgeGxpbms6aHJlZj0nJTIzcGF0aC0xJyUzRSUzQy91c2UlM0UlM0N1c2UgZmlsbC1vcGFjaXR5PScwLjUnIGZpbGw9JyN7JGJ0bi1jbG9zZS1jb2xvcn0nIHhsaW5rOmhyZWY9JyUyM3BhdGgtMSclM0UlM0MvdXNlJTNFJTNDL2clM0UlM0MvZyUzRSUzQy9nJTNFJTNDL3N2ZyUzRVwiKSAhZGVmYXVsdDtcbiRidG4tY2xvc2UtZm9jdXMtc2hhZG93OiBub25lICFkZWZhdWx0O1xuJGJ0bi1jbG9zZS1vcGFjaXR5OiAwLjk1ICFkZWZhdWx0O1xuJGJ0bi1jbG9zZS1ob3Zlci1vcGFjaXR5OiAwLjk1ICFkZWZhdWx0O1xuJGJ0bi1jbG9zZS1mb2N1cy1vcGFjaXR5OiAwLjk1ICFkZWZhdWx0O1xuXG4kY2xvc2UtZm9udC13ZWlnaHQ6IDMwMCAhZGVmYXVsdDsgLy8gKEMpXG5cbi8vICogT2ZmY2FudmFzXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cbi8vIHNjc3MtZG9jcy1zdGFydCBvZmZjYW52YXMtdmFyaWFibGVzXG4kb2ZmY2FudmFzLXRyYW5zaXRpb24tZHVyYXRpb246IDAuMjVzICFkZWZhdWx0O1xuLy8gc2Nzcy1kb2NzLWVuZCBvZmZjYW52YXMtdmFyaWFibGVzXG5cbi8vIFV0aWxpdGllc1xuJG92ZXJmbG93czogYXV0bywgaGlkZGVuLCBzY3JvbGwsIHZpc2libGUgIWRlZmF1bHQ7XG5cbi8vIENvbmZpZ1xuJHJ0bC1zdXBwb3J0OiBmYWxzZSAhZGVmYXVsdDtcbiRkYXJrLXN0eWxlOiBmYWxzZSAhZGVmYXVsdDtcbiIsIi8vIFZhcmlhYmxlc1xuLy9cbi8vIFZhcmlhYmxlcyBzaG91bGQgZm9sbG93IHRoZSBgJGNvbXBvbmVudC1zdGF0ZS1wcm9wZXJ0eS1zaXplYCBmb3JtdWxhIGZvclxuLy8gY29uc2lzdGVudCBuYW1pbmcuIEV4OiAkbmF2LWxpbmstZGlzYWJsZWQtY29sb3IgYW5kICRtb2RhbC1jb250ZW50LWJveC1zaGFkb3cteHMuXG4vL1xuLy8gKEMpIEN1c3RvbSB2YXJpYWJsZXMgZm9yIGV4dGVuZGVkIGNvbXBvbmVudHMgb2YgYm9vdHN0cmFwIG9ubHlcblxuLy8gISBfdmFyaWFibGUtZGFyay5zY3NzIGZpbGUgb3ZlcnJpZGVzIF92YXJpYWJsZS5zY3NzIGZpbGUuXG5cbi8vICogQ29sb3JzXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cbi8vIHNjc3MtZG9jcy1zdGFydCBncmF5LWNvbG9yLXZhcmlhYmxlc1xuJHdoaXRlOiAjZmZmICFkZWZhdWx0O1xuJGJsYWNrOiAjMDAwICFkZWZhdWx0O1xuJGJhc2U6ICM2MzdiYTkgIWRlZmF1bHQ7IC8vIChDKVxuJGdyYXktMjU6IHJnYmEoJHdoaXRlLCAwLjAxNSkgIWRlZmF1bHQ7IC8vIChDKVxuJGdyYXktNTA6IHJnYmEoJHdoaXRlLCAwLjAzKSAhZGVmYXVsdDsgLy8gKEMpXG4kZ3JheS0xMDA6IHJnYmEoJHdoaXRlLCAwLjc1KSAhZGVmYXVsdDtcbiRncmF5LTIwMDogcmdiYSgkd2hpdGUsIDAuNikgIWRlZmF1bHQ7XG4kZ3JheS0zMDA6IHJnYmEoJHdoaXRlLCAwLjQpICFkZWZhdWx0O1xuJGdyYXktNDAwOiByZ2JhKCR3aGl0ZSwgMC4yKSAhZGVmYXVsdDtcbiRncmF5LTUwMDogJGJhc2UgIWRlZmF1bHQ7XG4kZ3JheS02MDA6IHJnYmEoJGJsYWNrLCAwLjEpICFkZWZhdWx0O1xuJGdyYXktNzAwOiByZ2JhKCRibGFjaywgMC4xNSkgIWRlZmF1bHQ7XG4kZ3JheS04MDA6IHJnYmEoJGJsYWNrLCAwLjQ1KSAhZGVmYXVsdDtcbiRncmF5LTkwMDogcmdiYSgkYmxhY2ssIDAuNikgIWRlZmF1bHQ7XG4vLyBzY3NzLWRvY3MtZW5kIGdyYXktY29sb3ItdmFyaWFibGVzXG5cbi8vIHNjc3MtZG9jcy1zdGFydCBncmF5LWNvbG9ycy1tYXBcbiRncmF5czogKFxuICAnMjUnOiAkZ3JheS0yNSxcbiAgJzUwJzogJGdyYXktNTBcbikgIWRlZmF1bHQ7XG4vLyBzY3NzLWRvY3MtZW5kIGdyYXktY29sb3JzLW1hcFxuXG4vLyBzY3NzLWRvY3Mtc3RhcnQgY29sb3ItdmFyaWFibGVzXG4kYmx1ZTogIzVhOGRlZSAhZGVmYXVsdDtcbiRpbmRpZ286ICM2NjEwZjIgIWRlZmF1bHQ7XG4kcHVycGxlOiAjNmY0MmMxICFkZWZhdWx0O1xuJHBpbms6ICNlODNlOGMgIWRlZmF1bHQ7XG4kcmVkOiAjZmY1YjVjICFkZWZhdWx0O1xuJG9yYW5nZTogI2ZkN2UxNCAhZGVmYXVsdDtcbiR5ZWxsb3c6ICNmZGFjNDEgIWRlZmF1bHQ7XG4kZ3JlZW46ICMzOWRhOGEgIWRlZmF1bHQ7XG4kdGVhbDogIzIwYzk5NyAhZGVmYXVsdDtcbiRjeWFuOiAjMDBjZmRkICFkZWZhdWx0O1xuLy8gc2Nzcy1kb2NzLWVuZCBjb2xvci12YXJpYWJsZXNcblxuLy8gc2Nzcy1kb2NzLXN0YXJ0IHRoZW1lLWNvbG9yLXZhcmlhYmxlc1xuJHByaW1hcnk6ICRibHVlICFkZWZhdWx0O1xuJHNlY29uZGFyeTogIzY5ODA5YSAhZGVmYXVsdDtcbiRzdWNjZXNzOiAkZ3JlZW4gIWRlZmF1bHQ7XG4kaW5mbzogJGN5YW4gIWRlZmF1bHQ7XG4kd2FybmluZzogJHllbGxvdyAhZGVmYXVsdDtcbiRkYW5nZXI6ICRyZWQgIWRlZmF1bHQ7XG4kbGlnaHQ6ICM0MzRjNWYgIWRlZmF1bHQ7XG4kZGFyazogIzcxNzc4NCAhZGVmYXVsdDtcbiRncmF5OiAkZ3JheS0xMDAgIWRlZmF1bHQ7IC8vIChDKVxuLy8gc2Nzcy1kb2NzLWVuZCB0aGVtZS1jb2xvci12YXJpYWJsZXNcblxuLy8gc2Nzcy1kb2NzLXN0YXJ0IHRoZW1lLWNvbG9ycy1tYXBcbiR0aGVtZS1jb2xvcnM6IChcbiAgJ3ByaW1hcnknOiAkcHJpbWFyeSxcbiAgJ3NlY29uZGFyeSc6ICRzZWNvbmRhcnksXG4gICdzdWNjZXNzJzogJHN1Y2Nlc3MsXG4gICdpbmZvJzogJGluZm8sXG4gICd3YXJuaW5nJzogJHdhcm5pbmcsXG4gICdkYW5nZXInOiAkZGFuZ2VyLFxuICAnbGlnaHQnOiAkbGlnaHQsXG4gICdkYXJrJzogJGRhcmssXG4gICdncmF5JzogJGdyYXlcbikgIWRlZmF1bHQ7XG4vLyBzY3NzLWRvY3MtZW5kIHRoZW1lLWNvbG9ycy1tYXBcblxuJGNvbG9yLXNjaGVtZTogJ2RhcmsnICFkZWZhdWx0OyAvLyAoQylcblxuLy8gKiBCb2R5XG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cbiRib2R5LWJnOiAjMWMyMjJmICFkZWZhdWx0O1xuJHJnYmEtdG8taGV4LWJnOiAkYmFzZSAhZGVmYXVsdDsgLy8gKEMpXG4kYm9keS1jb2xvcjogcmdiYS10by1oZXgoJGdyYXktMzAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xuJHJnYmEtdG8taGV4LWJnLWludmVydGVkOiByZ2IoMTYwLCAxNDksIDE0OSkgIWRlZmF1bHQ7IC8vIChDKSBBU0tcblxuLy8gKiBDb21wb25lbnRzXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4vLyBzY3NzLWRvY3Mtc3RhcnQgYm94LXNoYWRvdy12YXJpYWJsZXNcbiRib3gtc2hhZG93OiAwIDAuMjVyZW0gMXJlbSByZ2JhKCRibGFjaywgMC4yNSkgIWRlZmF1bHQ7XG4kYm94LXNoYWRvdy1zbTogMCAwLjEyNXJlbSAwLjI1cmVtIHJnYmEoJGJsYWNrLCAwLjIpICFkZWZhdWx0O1xuJGJveC1zaGFkb3ctbGc6IDAgMC42MjVyZW0gMS4yNXJlbSByZ2JhKCRibGFjaywgMC4zKSAhZGVmYXVsdDtcbi8vIHNjc3MtZG9jcy1lbmQgYm94LXNoYWRvdy12YXJpYWJsZXNcbi8vICRib3JkZXItY29sb3I6IHJnYmEtdG8taGV4KHJnYmEoJHdoaXRlLCAwLjEpLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xuLy8gJGJvcmRlci1pbm5lci1jb2xvcjogcmdiYS10by1oZXgocmdiYSgkd2hpdGUsIDAuMDkpLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0OyAvLyAoQylcbiRib3JkZXItY29sb3I6IHJnYmEtdG8taGV4KCRncmF5LTgwMCwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcbiRib3JkZXItaW5uZXItY29sb3I6IHJnYmEoJHdoaXRlLCAwLjA5KSAhZGVmYXVsdDsgLy8gKEMpXG5cbi8vICogVHlwb2dyYXBoeVxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuXG4kdGV4dC1tdXRlZDogcmdiYS10by1oZXgoJGdyYXktNDAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xuJHRleHQtbXV0ZWQtaG92ZXI6IHJnYmEtdG8taGV4KCR3aGl0ZSwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDsgLy8gKEMpXG5cbiR0ZXh0LWxpZ2h0OiByZ2JhLXRvLWhleCgkZ3JheS01MDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7IC8vIChDKVxuJHRleHQtbGlnaHRlcjogcmdiYS10by1oZXgoJGdyYXktNDAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0OyAvLyAoQylcbiR0ZXh0LWxpZ2h0ZXN0OiByZ2JhLXRvLWhleCgkZ3JheS0zMDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7IC8vIChDKVxuXG4vLyBzY3NzLWRvY3Mtc3RhcnQgaGVhZGluZ3MtdmFyaWFibGVzXG4kaGVhZGluZ3MtY29sb3I6IHJnYmEtdG8taGV4KCRncmF5LTEwMCwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcbi8vIHNjc3MtZG9jcy1lbmQgaGVhZGluZ3MtdmFyaWFibGVzXG5cbiRoci1jb2xvcjogJGJvcmRlci1jb2xvciAhZGVmYXVsdDtcblxuLy8gKiBUYWJsZXNcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcblxuJHRhYmxlLWJnLXNjYWxlOiAtODAlICFkZWZhdWx0O1xuXG4vLyBzY3NzLWRvY3Mtc3RhcnQgdGFibGUtbG9vcFxuJHRhYmxlLXZhcmlhbnRzOiAoXG4gICdwcmltYXJ5Jzogc2hpZnQtY29sb3IoJHByaW1hcnksICR0YWJsZS1iZy1zY2FsZSksXG4gICdzZWNvbmRhcnknOiBzaGlmdC1jb2xvcigkc2Vjb25kYXJ5LCAkdGFibGUtYmctc2NhbGUpLFxuICAnc3VjY2Vzcyc6IHNoaWZ0LWNvbG9yKCRzdWNjZXNzLCAkdGFibGUtYmctc2NhbGUpLFxuICAnaW5mbyc6IHNoaWZ0LWNvbG9yKCRpbmZvLCAkdGFibGUtYmctc2NhbGUpLFxuICAnd2FybmluZyc6IHNoaWZ0LWNvbG9yKCR3YXJuaW5nLCAkdGFibGUtYmctc2NhbGUpLFxuICAnZGFuZ2VyJzogc2hpZnQtY29sb3IoJGRhbmdlciwgJHRhYmxlLWJnLXNjYWxlKSxcbiAgJ2xpZ2h0JzogJGRhcmssXG4gICdkYXJrJzogJHdoaXRlXG4pICFkZWZhdWx0O1xuLy8gc2Nzcy1kb2NzLWVuZCB0YWJsZS1sb29wXG5cbiR0YWJsZS1zdHJpcGVkLWJnLWZhY3RvcjogMC4wNiAhZGVmYXVsdDtcbiR0YWJsZS1zdHJpcGVkLWJnOiByZ2JhKCRncmF5LTUwMCwgJHRhYmxlLXN0cmlwZWQtYmctZmFjdG9yKSAhZGVmYXVsdDtcblxuJHRhYmxlLWhvdmVyLWJnLWZhY3RvcjogMC4wOCAhZGVmYXVsdDtcbiR0YWJsZS1ob3Zlci1iZzogcmdiYSgkZ3JheS01MDAsICR0YWJsZS1ob3Zlci1iZy1mYWN0b3IpICFkZWZhdWx0O1xuJHRhYmxlLWFjdGl2ZS1iZy1mYWN0b3I6IDAuMDggIWRlZmF1bHQ7XG4kdGFibGUtYWN0aXZlLWJnOiByZ2JhKCRncmF5LTUwMCwgJHRhYmxlLWFjdGl2ZS1iZy1mYWN0b3IpICFkZWZhdWx0O1xuXG4kdGFibGUtYm9yZGVyLWNvbG9yOiAkYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xuJHRhYmxlLWdyb3VwLXNlcGFyYXRvci1jb2xvcjogJHRhYmxlLWJvcmRlci1jb2xvciAhZGVmYXVsdDtcblxuJGNvbXBvbmVudC1hY3RpdmUtYmc6ICR3aGl0ZSAhZGVmYXVsdDtcblxuLy8gKiBDYXJkc1xuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuXG4kY2FyZC1iZzogcmdiYS10by1oZXgoJGdyYXktOTAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xuJGNhcmQtYm9yZGVyLWNvbG9yOiAkYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xuJGNhcmQtaW5uZXItYm9yZGVyLWNvbG9yOiByZ2JhLXRvLWhleCgkZ3JheS04MDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7XG4kY2FyZC1ib3gtc2hhZG93OiAwIDAuMTI1cmVtIDAuODc1cmVtIDAgcmdiYSgkYmxhY2ssIDAuMTYpICFkZWZhdWx0O1xuXG4vLyAqIEFjY29yZGlvblxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuXG4kYWNjb3JkaW9uLWJnOiAkY2FyZC1iZyAhZGVmYXVsdDtcblxuLy8gKiBCdXR0b25zXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cbiRidG4tYm94LXNoYWRvdzogJGJveC1zaGFkb3ctc20gIWRlZmF1bHQ7XG4kYnRuLWhvdmVyLWJveC1zaGFkb3c6ICRib3gtc2hhZG93ICFkZWZhdWx0OyAvLyAoQylcblxuLy8gKiBGb3Jtc1xuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuXG4kaW5wdXQtYmc6ICRjYXJkLWJnICFkZWZhdWx0O1xuJGlucHV0LWRpc2FibGVkLWJnOiByZ2JhLXRvLWhleCgkZ3JheS04MDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7XG5cbiRpbnB1dC1ib3JkZXItY29sb3I6IHJnYmEtdG8taGV4KCRncmF5LTcwMCwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcbiRpbnB1dC1wbGFjZWhvbGRlci1jb2xvcjogJHRleHQtbXV0ZWQgIWRlZmF1bHQ7XG5cbiRmb3JtLWNoZWNrLWlucHV0LWJvcmRlcjogMXB4IHNvbGlkICRpbnB1dC1ib3JkZXItY29sb3IgIWRlZmF1bHQ7XG4kZm9ybS1jaGVjay1pbnB1dC1mb2N1cy1ib3gtc2hhZG93OiAwIDAgMCAwLjEycmVtIHJnYmEocmdiYS10by1oZXgoJGdyYXktNTAwLCAkcmdiYS10by1oZXgtYmcpLCAzMCUpICFkZWZhdWx0O1xuXG4kZm9ybS1zd2l0Y2gtY29sb3I6ICRpbnB1dC1ib3JkZXItY29sb3IgIWRlZmF1bHQ7XG4kZm9ybS1zd2l0Y2gtYmctaW1hZ2U6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCw8c3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgdmlld0JveD0nLTQgLTQgOCA4Jz48Y2lyY2xlIHI9JzMnIGZpbGw9JyN7JGZvcm0tc3dpdGNoLWNvbG9yfScvPjwvc3ZnPlwiKSAhZGVmYXVsdDtcblxuJGZvcm0tc2VsZWN0LWJnOiAkaW5wdXQtYmcgIWRlZmF1bHQ7XG4kZm9ybS1zZWxlY3QtaW5kaWNhdG9yLWNvbG9yOiAkYm9keS1jb2xvciAhZGVmYXVsdDtcbiRmb3JtLXNlbGVjdC1pbmRpY2F0b3I6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCw8c3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgdmlld0JveD0nMCAwIDE2IDE2Jz48cGF0aCBmaWxsPSdub25lJyBzdHJva2U9JyN7JGZvcm0tc2VsZWN0LWluZGljYXRvci1jb2xvcn0nIHN0cm9rZS1saW5lY2FwPSdyb3VuZCcgc3Ryb2tlLWxpbmVqb2luPSdyb3VuZCcgc3Ryb2tlLXdpZHRoPScyJyBkPSdNMiA1bDYgNiA2LTYnLz48L3N2Zz5cIikgIWRlZmF1bHQ7XG4kZm9ybS1zZWxlY3QtaW5kaWNhdG9yLXJ0bDogdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLDxzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB2aWV3Qm94PScwIDAgMTYgMTYnPjxwYXRoIGZpbGw9J25vbmUnIHN0cm9rZT0nI3skZm9ybS1zZWxlY3QtaW5kaWNhdG9yLWNvbG9yfScgc3Ryb2tlLWxpbmVjYXA9J3JvdW5kJyBzdHJva2UtbGluZWpvaW49J3JvdW5kJyBzdHJva2Utd2lkdGg9JzInIGQ9J00yIDVsNiA2IDYtNicvPjwvc3ZnPlwiKSAhZGVmYXVsdDsgLy8gKEMpXG5cbiRmb3JtLXJhbmdlLXRyYWNrLWJnOiByZ2JhLXRvLWhleCgkZ3JheS04MDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7XG4kZm9ybS1yYW5nZS10cmFjay1kaXNhYmxlZC1iZzogJGdyYXktNTAgIWRlZmF1bHQ7IC8vIChDKVxuXG4kZm9ybS1yYW5nZS10aHVtYi1iZzogcmdiYS10by1oZXgoJGdyYXktMjAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xuJGZvcm0tcmFuZ2UtdGh1bWItYm94LXNoYWRvdzogMCAwIDZweCAwICRncmF5LTIwMCAhZGVmYXVsdDtcbiRmb3JtLXJhbmdlLXRodW1iLWZvY3VzLWJveC1zaGFkb3c6IDAgMCA4cHggMHB4ICRncmF5LTIwMCAhZGVmYXVsdDtcbiRmb3JtLXJhbmdlLXRodW1iLWFjdGl2ZS1iZzogJGZvcm0tcmFuZ2UtdGh1bWItYmcgIWRlZmF1bHQ7XG4kZm9ybS1yYW5nZS10aHVtYi1kaXNhYmxlZC1iZzogcmdiYS10by1oZXgoJGdyYXktNjAwLCAkcmdiYS10by1oZXgtYmcpICFkZWZhdWx0O1xuXG4vLyAqIE5hdnNcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcblxuJG5hdi1saW5rLWNvbG9yOiAkaGVhZGluZ3MtY29sb3IgIWRlZmF1bHQ7XG4kbmF2LXRhYnMtbGluay1hY3RpdmUtYmc6ICRjYXJkLWJnICFkZWZhdWx0O1xuJG5hdi10YWJzLWxpbmstaG92ZXItYm9yZGVyLWNvbG9yOiAkYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xuJG5hdi10YWJzLWxpbmstYWN0aXZlLWJvcmRlci1jb2xvcjogJG5hdi10YWJzLWxpbmstaG92ZXItYm9yZGVyLWNvbG9yICFkZWZhdWx0O1xuXG4vLyAqIE5hdmJhclxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuXG4kbmF2YmFyLWxpZ2h0LWhvdmVyLWNvbG9yOiAjNGU1MTU1ICFkZWZhdWx0O1xuJG5hdmJhci1saWdodC1hY3RpdmUtY29sb3I6ICM0ZTUxNTUgIWRlZmF1bHQ7XG4kbmF2YmFyLWxpZ2h0LWRpc2FibGVkLWNvbG9yOiByZ2JhKCRibGFjaywgMC4yKSAhZGVmYXVsdDtcblxuLy8gKiBEcm9wZG93bnNcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcblxuJGRyb3Bkb3duLWJnOiByZ2JhLXRvLWhleCgkZ3JheS05MDAsICRyZ2JhLXRvLWhleC1iZykgIWRlZmF1bHQ7XG4kZHJvcGRvd24tZGl2aWRlci1iZzogJGJvcmRlci1pbm5lci1jb2xvciAhZGVmYXVsdDtcblxuJGRyb3Bkb3duLWxpbmstaG92ZXItYmc6IHJnYmEoJGdyYXktNTAwLCAwLjA4KSAhZGVmYXVsdDtcblxuLy8gKiBQYWdpbmF0aW9uXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cbiRwYWdpbmF0aW9uLWJnOiByZ2JhKCRncmF5LTUwMCwgMC4wOCkgIWRlZmF1bHQ7XG4kcGFnaW5hdGlvbi1mb2N1cy1iZzogcmdiYSgkZ3JheS01MDAsIDAuMTYpICFkZWZhdWx0O1xuXG4kcGFnaW5hdGlvbi1kaXNhYmxlZC1jb2xvcjogJHRleHQtbXV0ZWQgIWRlZmF1bHQ7XG4kcGFnaW5hdGlvbi1kaXNhYmxlZC1iZzogcmdiYSgkZ3JheS01MDAsIDAuMDYpICFkZWZhdWx0O1xuLy8gKiBQb3BvdmVyc1xuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuJHBvcG92ZXItYmc6ICRjYXJkLWJnICFkZWZhdWx0O1xuXG4vLyAqIE1vZGFsc1xuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuXG4kbW9kYWwtY29udGVudC1iZzogJGNhcmQtYmcgIWRlZmF1bHQ7XG4kbW9kYWwtY29udGVudC1ib3gtc2hhZG93LXhzOiAwIDAuMTI1cmVtIDEuMjVyZW0gMCByZ2JhKCRibGFjaywgMC4yOCkgIWRlZmF1bHQ7XG4kbW9kYWwtY2xvc2UtYnRuLWJnOiByZ2JhKCRiYXNlLCAwLjE2KSAhZGVmYXVsdDsgLy8gKEMpXG5cbi8vICogUHJvZ3Jlc3MgYmFyc1xuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuXG4kcHJvZ3Jlc3MtYmc6IHJnYmEtdG8taGV4KCRncmF5LTgwMCwgJHJnYmEtdG8taGV4LWJnKSAhZGVmYXVsdDtcblxuLy8gKiBMaXN0IGdyb3VwXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cbiRsaXN0LWdyb3VwLWJvcmRlci1jb2xvcjogJGJvcmRlci1jb2xvciAhZGVmYXVsdDtcbiRsaXN0LWdyb3VwLWl0ZW0tYmctc2NhbGU6IC03MCUgIWRlZmF1bHQ7XG4kbGlzdC1ncm91cC1pdGVtLWJnLWhvdmVyLXNjYWxlOiAxMCUgIWRlZmF1bHQ7IC8vICAoYylcbiRsaXN0LWdyb3VwLWhvdmVyLWJnOiByZ2JhKCRiYXNlLCAwLjA4KSAhZGVmYXVsdDtcblxuJGtiZC1jb2xvcjogJGRhcmsgIWRlZmF1bHQ7XG5cbi8vIENvbmZpZ1xuJHJ0bC1zdXBwb3J0OiBmYWxzZSAhZGVmYXVsdDtcbiRkYXJrLXN0eWxlOiB0cnVlICFkZWZhdWx0O1xuIiwiLy8gQnJlYWtwb2ludCB2aWV3cG9ydCBzaXplcyBhbmQgbWVkaWEgcXVlcmllcy5cbi8vXG4vLyBCcmVha3BvaW50cyBhcmUgZGVmaW5lZCBhcyBhIG1hcCBvZiAobmFtZTogbWluaW11bSB3aWR0aCksIG9yZGVyIGZyb20gc21hbGwgdG8gbGFyZ2U6XG4vL1xuLy8gICAgKHhzOiAwLCBzbTogNTc2cHgsIG1kOiA3NjhweCwgbGc6IDk5MnB4LCB4bDogMTIwMHB4LCB4eGw6IDE0MDBweClcbi8vXG4vLyBUaGUgbWFwIGRlZmluZWQgaW4gdGhlIGAkZ3JpZC1icmVha3BvaW50c2AgZ2xvYmFsIHZhcmlhYmxlIGlzIHVzZWQgYXMgdGhlIGAkYnJlYWtwb2ludHNgIGFyZ3VtZW50IGJ5IGRlZmF1bHQuXG5cbi8vIE5hbWUgb2YgdGhlIG5leHQgYnJlYWtwb2ludCwgb3IgbnVsbCBmb3IgdGhlIGxhc3QgYnJlYWtwb2ludC5cbi8vXG4vLyAgICA+PiBicmVha3BvaW50LW5leHQoc20pXG4vLyAgICBtZFxuLy8gICAgPj4gYnJlYWtwb2ludC1uZXh0KHNtLCAoeHM6IDAsIHNtOiA1NzZweCwgbWQ6IDc2OHB4LCBsZzogOTkycHgsIHhsOiAxMjAwcHgsIHh4bDogMTQwMHB4KSlcbi8vICAgIG1kXG4vLyAgICA+PiBicmVha3BvaW50LW5leHQoc20sICRicmVha3BvaW50LW5hbWVzOiAoeHMgc20gbWQgbGcgeGwgeHhsKSlcbi8vICAgIG1kXG5AZnVuY3Rpb24gYnJlYWtwb2ludC1uZXh0KCRuYW1lLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzLCAkYnJlYWtwb2ludC1uYW1lczogbWFwLWtleXMoJGJyZWFrcG9pbnRzKSkge1xuICAkbjogaW5kZXgoJGJyZWFrcG9pbnQtbmFtZXMsICRuYW1lKTtcbiAgQGlmIG5vdCAkbiB7XG4gICAgQGVycm9yIFwiYnJlYWtwb2ludCBgI3skbmFtZX1gIG5vdCBmb3VuZCBpbiBgI3skYnJlYWtwb2ludHN9YFwiO1xuICB9XG4gIEByZXR1cm4gaWYoJG4gPCBsZW5ndGgoJGJyZWFrcG9pbnQtbmFtZXMpLCBudGgoJGJyZWFrcG9pbnQtbmFtZXMsICRuICsgMSksIG51bGwpO1xufVxuXG4vLyBNaW5pbXVtIGJyZWFrcG9pbnQgd2lkdGguIE51bGwgZm9yIHRoZSBzbWFsbGVzdCAoZmlyc3QpIGJyZWFrcG9pbnQuXG4vL1xuLy8gICAgPj4gYnJlYWtwb2ludC1taW4oc20sICh4czogMCwgc206IDU3NnB4LCBtZDogNzY4cHgsIGxnOiA5OTJweCwgeGw6IDEyMDBweCwgeHhsOiAxNDAwcHgpKVxuLy8gICAgNTc2cHhcbkBmdW5jdGlvbiBicmVha3BvaW50LW1pbigkbmFtZSwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cykge1xuICAkbWluOiBtYXAtZ2V0KCRicmVha3BvaW50cywgJG5hbWUpO1xuICBAcmV0dXJuIGlmKCRtaW4gIT0gMCwgJG1pbiwgbnVsbCk7XG59XG5cbi8vIE1heGltdW0gYnJlYWtwb2ludCB3aWR0aC5cbi8vIFRoZSBtYXhpbXVtIHZhbHVlIGlzIHJlZHVjZWQgYnkgMC4wMnB4IHRvIHdvcmsgYXJvdW5kIHRoZSBsaW1pdGF0aW9ucyBvZlxuLy8gYG1pbi1gIGFuZCBgbWF4LWAgcHJlZml4ZXMgYW5kIHZpZXdwb3J0cyB3aXRoIGZyYWN0aW9uYWwgd2lkdGhzLlxuLy8gU2VlIGh0dHBzOi8vd3d3LnczLm9yZy9UUi9tZWRpYXF1ZXJpZXMtNC8jbXEtbWluLW1heFxuLy8gVXNlcyAwLjAycHggcmF0aGVyIHRoYW4gMC4wMXB4IHRvIHdvcmsgYXJvdW5kIGEgY3VycmVudCByb3VuZGluZyBidWcgaW4gU2FmYXJpLlxuLy8gU2VlIGh0dHBzOi8vYnVncy53ZWJraXQub3JnL3Nob3dfYnVnLmNnaT9pZD0xNzgyNjFcbi8vXG4vLyAgICA+PiBicmVha3BvaW50LW1heChtZCwgKHhzOiAwLCBzbTogNTc2cHgsIG1kOiA3NjhweCwgbGc6IDk5MnB4LCB4bDogMTIwMHB4LCB4eGw6IDE0MDBweCkpXG4vLyAgICA3NjcuOThweFxuQGZ1bmN0aW9uIGJyZWFrcG9pbnQtbWF4KCRuYW1lLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzKSB7XG4gICRtYXg6IG1hcC1nZXQoJGJyZWFrcG9pbnRzLCAkbmFtZSk7XG4gIEByZXR1cm4gaWYoJG1heCBhbmQgJG1heCA+IDAsICRtYXggLSAuMDIsIG51bGwpO1xufVxuXG4vLyBSZXR1cm5zIGEgYmxhbmsgc3RyaW5nIGlmIHNtYWxsZXN0IGJyZWFrcG9pbnQsIG90aGVyd2lzZSByZXR1cm5zIHRoZSBuYW1lIHdpdGggYSBkYXNoIGluIGZyb250LlxuLy8gVXNlZnVsIGZvciBtYWtpbmcgcmVzcG9uc2l2ZSB1dGlsaXRpZXMuXG4vL1xuLy8gICAgPj4gYnJlYWtwb2ludC1pbmZpeCh4cywgKHhzOiAwLCBzbTogNTc2cHgsIG1kOiA3NjhweCwgbGc6IDk5MnB4LCB4bDogMTIwMHB4LCB4eGw6IDE0MDBweCkpXG4vLyAgICBcIlwiICAoUmV0dXJucyBhIGJsYW5rIHN0cmluZylcbi8vICAgID4+IGJyZWFrcG9pbnQtaW5maXgoc20sICh4czogMCwgc206IDU3NnB4LCBtZDogNzY4cHgsIGxnOiA5OTJweCwgeGw6IDEyMDBweCwgeHhsOiAxNDAwcHgpKVxuLy8gICAgXCItc21cIlxuQGZ1bmN0aW9uIGJyZWFrcG9pbnQtaW5maXgoJG5hbWUsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMpIHtcbiAgQHJldHVybiBpZihicmVha3BvaW50LW1pbigkbmFtZSwgJGJyZWFrcG9pbnRzKSA9PSBudWxsLCBcIlwiLCBcIi0jeyRuYW1lfVwiKTtcbn1cblxuLy8gTWVkaWEgb2YgYXQgbGVhc3QgdGhlIG1pbmltdW0gYnJlYWtwb2ludCB3aWR0aC4gTm8gcXVlcnkgZm9yIHRoZSBzbWFsbGVzdCBicmVha3BvaW50LlxuLy8gTWFrZXMgdGhlIEBjb250ZW50IGFwcGx5IHRvIHRoZSBnaXZlbiBicmVha3BvaW50IGFuZCB3aWRlci5cbkBtaXhpbiBtZWRpYS1icmVha3BvaW50LXVwKCRuYW1lLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzKSB7XG4gICRtaW46IGJyZWFrcG9pbnQtbWluKCRuYW1lLCAkYnJlYWtwb2ludHMpO1xuICBAaWYgJG1pbiB7XG4gICAgQG1lZGlhIChtaW4td2lkdGg6ICRtaW4pIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfSBAZWxzZSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuLy8gTWVkaWEgb2YgYXQgbW9zdCB0aGUgbWF4aW11bSBicmVha3BvaW50IHdpZHRoLiBObyBxdWVyeSBmb3IgdGhlIGxhcmdlc3QgYnJlYWtwb2ludC5cbi8vIE1ha2VzIHRoZSBAY29udGVudCBhcHBseSB0byB0aGUgZ2l2ZW4gYnJlYWtwb2ludCBhbmQgbmFycm93ZXIuXG5AbWl4aW4gbWVkaWEtYnJlYWtwb2ludC1kb3duKCRuYW1lLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzKSB7XG4gICRtYXg6IGJyZWFrcG9pbnQtbWF4KCRuYW1lLCAkYnJlYWtwb2ludHMpO1xuICBAaWYgJG1heCB7XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6ICRtYXgpIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfSBAZWxzZSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuLy8gTWVkaWEgdGhhdCBzcGFucyBtdWx0aXBsZSBicmVha3BvaW50IHdpZHRocy5cbi8vIE1ha2VzIHRoZSBAY29udGVudCBhcHBseSBiZXR3ZWVuIHRoZSBtaW4gYW5kIG1heCBicmVha3BvaW50c1xuQG1peGluIG1lZGlhLWJyZWFrcG9pbnQtYmV0d2VlbigkbG93ZXIsICR1cHBlciwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cykge1xuICAkbWluOiBicmVha3BvaW50LW1pbigkbG93ZXIsICRicmVha3BvaW50cyk7XG4gICRtYXg6IGJyZWFrcG9pbnQtbWF4KCR1cHBlciwgJGJyZWFrcG9pbnRzKTtcblxuICBAaWYgJG1pbiAhPSBudWxsIGFuZCAkbWF4ICE9IG51bGwge1xuICAgIEBtZWRpYSAobWluLXdpZHRoOiAkbWluKSBhbmQgKG1heC13aWR0aDogJG1heCkge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9IEBlbHNlIGlmICRtYXggPT0gbnVsbCB7XG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cCgkbG93ZXIsICRicmVha3BvaW50cykge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9IEBlbHNlIGlmICRtaW4gPT0gbnVsbCB7XG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC1kb3duKCR1cHBlciwgJGJyZWFrcG9pbnRzKSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH1cbn1cblxuLy8gTWVkaWEgYmV0d2VlbiB0aGUgYnJlYWtwb2ludCdzIG1pbmltdW0gYW5kIG1heGltdW0gd2lkdGhzLlxuLy8gTm8gbWluaW11bSBmb3IgdGhlIHNtYWxsZXN0IGJyZWFrcG9pbnQsIGFuZCBubyBtYXhpbXVtIGZvciB0aGUgbGFyZ2VzdCBvbmUuXG4vLyBNYWtlcyB0aGUgQGNvbnRlbnQgYXBwbHkgb25seSB0byB0aGUgZ2l2ZW4gYnJlYWtwb2ludCwgbm90IHZpZXdwb3J0cyBhbnkgd2lkZXIgb3IgbmFycm93ZXIuXG5AbWl4aW4gbWVkaWEtYnJlYWtwb2ludC1vbmx5KCRuYW1lLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzKSB7XG4gICRtaW46ICBicmVha3BvaW50LW1pbigkbmFtZSwgJGJyZWFrcG9pbnRzKTtcbiAgJG5leHQ6IGJyZWFrcG9pbnQtbmV4dCgkbmFtZSwgJGJyZWFrcG9pbnRzKTtcbiAgJG1heDogIGJyZWFrcG9pbnQtbWF4KCRuZXh0LCAkYnJlYWtwb2ludHMpO1xuXG4gIEBpZiAkbWluICE9IG51bGwgYW5kICRtYXggIT0gbnVsbCB7XG4gICAgQG1lZGlhIChtaW4td2lkdGg6ICRtaW4pIGFuZCAobWF4LXdpZHRoOiAkbWF4KSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH0gQGVsc2UgaWYgJG1heCA9PSBudWxsIHtcbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKCRuYW1lLCAkYnJlYWtwb2ludHMpIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfSBAZWxzZSBpZiAkbWluID09IG51bGwge1xuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtZG93bigkbmV4dCwgJGJyZWFrcG9pbnRzKSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH1cbn1cbiJdfQ== */
